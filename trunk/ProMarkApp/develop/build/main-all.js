
;(function () {
	'use strict';

	/**
	 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
	 *
	 * @codingstandard ftlabs-jsv2
	 * @copyright The Financial Times Limited [All Rights Reserved]
	 * @license MIT License (see LICENSE.txt)
	 */

	/*jslint browser:true, node:true*/
	/*global define, Event, Node*/


	/**
	 * Instantiate fast-clicking listeners on the specified layer.
	 *
	 * @constructor
	 * @param {Element} layer The layer to listen on
	 * @param {Object} [options={}] The options to override the defaults
	 */
	function FastClick(layer, options) {
		var oldOnClick;

		options = options || {};

		/**
		 * Whether a click is currently being tracked.
		 *
		 * @type boolean
		 */
		this.trackingClick = false;


		/**
		 * Timestamp for when click tracking started.
		 *
		 * @type number
		 */
		this.trackingClickStart = 0;


		/**
		 * The element being tracked for a click.
		 *
		 * @type EventTarget
		 */
		this.targetElement = null;


		/**
		 * X-coordinate of touch start event.
		 *
		 * @type number
		 */
		this.touchStartX = 0;


		/**
		 * Y-coordinate of touch start event.
		 *
		 * @type number
		 */
		this.touchStartY = 0;


		/**
		 * ID of the last touch, retrieved from Touch.identifier.
		 *
		 * @type number
		 */
		this.lastTouchIdentifier = 0;


		/**
		 * Touchmove boundary, beyond which a click will be cancelled.
		 *
		 * @type number
		 */
		this.touchBoundary = options.touchBoundary || 10;


		/**
		 * The FastClick layer.
		 *
		 * @type Element
		 */
		this.layer = layer;

		/**
		 * The minimum time between tap(touchstart and touchend) events
		 *
		 * @type number
		 */
		this.tapDelay = options.tapDelay || 200;

		/**
		 * The maximum time for a tap
		 *
		 * @type number
		 */
		this.tapTimeout = options.tapTimeout || 700;

		if (FastClick.notNeeded(layer)) {
			return;
		}

		// Some old versions of Android don't have Function.prototype.bind
		function bind(method, context) {
			return function() { return method.apply(context, arguments); };
		}


		var methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];
		var context = this;
		for (var i = 0, l = methods.length; i < l; i++) {
			context[methods[i]] = bind(context[methods[i]], context);
		}

		// Set up event handlers as required
		if (deviceIsAndroid) {
			layer.addEventListener('mouseover', this.onMouse, true);
			layer.addEventListener('mousedown', this.onMouse, true);
			layer.addEventListener('mouseup', this.onMouse, true);
		}

		layer.addEventListener('click', this.onClick, true);
		layer.addEventListener('touchstart', this.onTouchStart, false);
		layer.addEventListener('touchmove', this.onTouchMove, false);
		layer.addEventListener('touchend', this.onTouchEnd, false);
		layer.addEventListener('touchcancel', this.onTouchCancel, false);

		// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
		// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
		// layer when they are cancelled.
		if (!Event.prototype.stopImmediatePropagation) {
			layer.removeEventListener = function(type, callback, capture) {
				var rmv = Node.prototype.removeEventListener;
				if (type === 'click') {
					rmv.call(layer, type, callback.hijacked || callback, capture);
				} else {
					rmv.call(layer, type, callback, capture);
				}
			};

			layer.addEventListener = function(type, callback, capture) {
				var adv = Node.prototype.addEventListener;
				if (type === 'click') {
					adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
						if (!event.propagationStopped) {
							callback(event);
						}
					}), capture);
				} else {
					adv.call(layer, type, callback, capture);
				}
			};
		}

		// If a handler is already declared in the element's onclick attribute, it will be fired before
		// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
		// adding it as listener.
		if (typeof layer.onclick === 'function') {

			// Android browser on at least 3.2 requires a new reference to the function in layer.onclick
			// - the old one won't work if passed to addEventListener directly.
			oldOnClick = layer.onclick;
			layer.addEventListener('click', function(event) {
				oldOnClick(event);
			}, false);
			layer.onclick = null;
		}
	}

	/**
	* Windows Phone 8.1 fakes user agent string to look like Android and iPhone.
	*
	* @type boolean
	*/
	var deviceIsWindowsPhone = navigator.userAgent.indexOf("Windows Phone") >= 0;

	/**
	 * Android requires exceptions.
	 *
	 * @type boolean
	 */
	var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;


	/**
	 * iOS requires exceptions.
	 *
	 * @type boolean
	 */
	var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;


	/**
	 * iOS 4 requires an exception for select elements.
	 *
	 * @type boolean
	 */
	var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


	/**
	 * iOS 6.0-7.* requires the target element to be manually derived
	 *
	 * @type boolean
	 */
	var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\d/).test(navigator.userAgent);

	/**
	 * BlackBerry requires exceptions.
	 *
	 * @type boolean
	 */
	var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;

	/**
	 * Determine whether a given element requires a native click.
	 *
	 * @param {EventTarget|Element} target Target DOM element
	 * @returns {boolean} Returns true if the element needs a native click
	 */
	FastClick.prototype.needsClick = function(target) {
		switch (target.nodeName.toLowerCase()) {

		// Don't send a synthetic click to disabled inputs (issue #62)
		case 'button':
		case 'select':
		case 'textarea':
			if (target.disabled) {
				return true;
			}

			break;
		case 'input':

			// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
			if ((deviceIsIOS && target.type === 'file') || target.disabled) {
				return true;
			}

			break;
		case 'label':
		case 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames
		case 'video':
			return true;
		}

		return (/\bneedsclick\b/).test(target.className);
	};


	/**
	 * Determine whether a given element requires a call to focus to simulate click into element.
	 *
	 * @param {EventTarget|Element} target Target DOM element
	 * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
	 */
	FastClick.prototype.needsFocus = function(target) {
		switch (target.nodeName.toLowerCase()) {
		case 'textarea':
			return true;
		case 'select':
			return !deviceIsAndroid;
		case 'input':
			switch (target.type) {
			case 'button':
			case 'checkbox':
			case 'file':
			case 'image':
			case 'radio':
			case 'submit':
				return false;
			}

			// No point in attempting to focus disabled inputs
			return !target.disabled && !target.readOnly;
		default:
			return (/\bneedsfocus\b/).test(target.className);
		}
	};


	/**
	 * Send a click event to the specified element.
	 *
	 * @param {EventTarget|Element} targetElement
	 * @param {Event} event
	 */
	FastClick.prototype.sendClick = function(targetElement, event) {
		var clickEvent, touch;

		// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
		if (document.activeElement && document.activeElement !== targetElement) {
			document.activeElement.blur();
		}

		touch = event.changedTouches[0];

		// Synthesise a click event, with an extra attribute so it can be tracked
		clickEvent = document.createEvent('MouseEvents');
		clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
		clickEvent.forwardedTouchEvent = true;
		targetElement.dispatchEvent(clickEvent);
	};

	FastClick.prototype.determineEventType = function(targetElement) {

		//Issue #159: Android Chrome Select Box does not open with a synthetic click event
		if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
			return 'mousedown';
		}

		return 'click';
	};


	/**
	 * @param {EventTarget|Element} targetElement
	 */
	FastClick.prototype.focus = function(targetElement) {
		var length;

		// Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
		if (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') {
			length = targetElement.value.length;
			targetElement.setSelectionRange(length, length);
		} else {
			targetElement.focus();
		}
	};


	/**
	 * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
	 *
	 * @param {EventTarget|Element} targetElement
	 */
	FastClick.prototype.updateScrollParent = function(targetElement) {
		var scrollParent, parentElement;

		scrollParent = targetElement.fastClickScrollParent;

		// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
		// target element was moved to another parent.
		if (!scrollParent || !scrollParent.contains(targetElement)) {
			parentElement = targetElement;
			do {
				if (parentElement.scrollHeight > parentElement.offsetHeight) {
					scrollParent = parentElement;
					targetElement.fastClickScrollParent = parentElement;
					break;
				}

				parentElement = parentElement.parentElement;
			} while (parentElement);
		}

		// Always update the scroll top tracker if possible.
		if (scrollParent) {
			scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
		}
	};


	/**
	 * @param {EventTarget} targetElement
	 * @returns {Element|EventTarget}
	 */
	FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {

		// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
		if (eventTarget.nodeType === Node.TEXT_NODE) {
			return eventTarget.parentNode;
		}

		return eventTarget;
	};


	/**
	 * On touch start, record the position and scroll offset.
	 *
	 * @param {Event} event
	 * @returns {boolean}
	 */
	FastClick.prototype.onTouchStart = function(event) {
		var targetElement, touch, selection;

		// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
		if (event.targetTouches.length > 1) {
			return true;
		}

		targetElement = this.getTargetElementFromEventTarget(event.target);
		touch = event.targetTouches[0];

		if (deviceIsIOS) {

			// Only trusted events will deselect text on iOS (issue #49)
			selection = window.getSelection();
			if (selection.rangeCount && !selection.isCollapsed) {
				return true;
			}

			if (!deviceIsIOS4) {

				// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
				// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
				// with the same identifier as the touch event that previously triggered the click that triggered the alert.
				// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
				// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
				// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
				// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
				// random integers, it's safe to to continue if the identifier is 0 here.
				if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
					event.preventDefault();
					return false;
				}

				this.lastTouchIdentifier = touch.identifier;

				// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
				// 1) the user does a fling scroll on the scrollable layer
				// 2) the user stops the fling scroll with another tap
				// then the event.target of the last 'touchend' event will be the element that was under the user's finger
				// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
				// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
				this.updateScrollParent(targetElement);
			}
		}

		this.trackingClick = true;
		this.trackingClickStart = event.timeStamp;
		this.targetElement = targetElement;

		this.touchStartX = touch.pageX;
		this.touchStartY = touch.pageY;

		// Prevent phantom clicks on fast double-tap (issue #36)
		if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
			event.preventDefault();
		}

		return true;
	};


	/**
	 * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
	 *
	 * @param {Event} event
	 * @returns {boolean}
	 */
	FastClick.prototype.touchHasMoved = function(event) {
		var touch = event.changedTouches[0], boundary = this.touchBoundary;

		if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
			return true;
		}

		return false;
	};


	/**
	 * Update the last position.
	 *
	 * @param {Event} event
	 * @returns {boolean}
	 */
	FastClick.prototype.onTouchMove = function(event) {
		if (!this.trackingClick) {
			return true;
		}

		// If the touch has moved, cancel the click tracking
		if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
			this.trackingClick = false;
			this.targetElement = null;
		}

		return true;
	};


	/**
	 * Attempt to find the labelled control for the given label element.
	 *
	 * @param {EventTarget|HTMLLabelElement} labelElement
	 * @returns {Element|null}
	 */
	FastClick.prototype.findControl = function(labelElement) {

		// Fast path for newer browsers supporting the HTML5 control attribute
		if (labelElement.control !== undefined) {
			return labelElement.control;
		}

		// All browsers under test that support touch events also support the HTML5 htmlFor attribute
		if (labelElement.htmlFor) {
			return document.getElementById(labelElement.htmlFor);
		}

		// If no for attribute exists, attempt to retrieve the first labellable descendant element
		// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
		return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
	};


	/**
	 * On touch end, determine whether to send a click event at once.
	 *
	 * @param {Event} event
	 * @returns {boolean}
	 */
	FastClick.prototype.onTouchEnd = function(event) {
		var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;

		if (!this.trackingClick) {
			return true;
		}

		// Prevent phantom clicks on fast double-tap (issue #36)
		if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
			this.cancelNextClick = true;
			return true;
		}

		if ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {
			return true;
		}

		// Reset to prevent wrong click cancel on input (issue #156).
		this.cancelNextClick = false;

		this.lastClickTime = event.timeStamp;

		trackingClickStart = this.trackingClickStart;
		this.trackingClick = false;
		this.trackingClickStart = 0;

		// On some iOS devices, the targetElement supplied with the event is invalid if the layer
		// is performing a transition or scroll, and has to be re-detected manually. Note that
		// for this to function correctly, it must be called *after* the event target is checked!
		// See issue #57; also filed as rdar://13048589 .
		if (deviceIsIOSWithBadTarget) {
			touch = event.changedTouches[0];

			// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
			targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
			targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
		}

		targetTagName = targetElement.tagName.toLowerCase();
		if (targetTagName === 'label') {
			forElement = this.findControl(targetElement);
			if (forElement) {
				this.focus(targetElement);
				if (deviceIsAndroid) {
					return false;
				}

				targetElement = forElement;
			}
		} else if (this.needsFocus(targetElement)) {

			// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
			// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
			if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {
				this.targetElement = null;
				return false;
			}

			this.focus(targetElement);
			this.sendClick(targetElement, event);

			// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
			// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
			if (!deviceIsIOS || targetTagName !== 'select') {
				this.targetElement = null;
				event.preventDefault();
			}

			return false;
		}

		if (deviceIsIOS && !deviceIsIOS4) {

			// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
			// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
			scrollParent = targetElement.fastClickScrollParent;
			if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
				return true;
			}
		}

		// Prevent the actual click from going though - unless the target node is marked as requiring
		// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
		if (!this.needsClick(targetElement)) {
			event.preventDefault();
			this.sendClick(targetElement, event);
		}

		return false;
	};


	/**
	 * On touch cancel, stop tracking the click.
	 *
	 * @returns {void}
	 */
	FastClick.prototype.onTouchCancel = function() {
		this.trackingClick = false;
		this.targetElement = null;
	};


	/**
	 * Determine mouse events which should be permitted.
	 *
	 * @param {Event} event
	 * @returns {boolean}
	 */
	FastClick.prototype.onMouse = function(event) {

		// If a target element was never set (because a touch event was never fired) allow the event
		if (!this.targetElement) {
			return true;
		}

		if (event.forwardedTouchEvent) {
			return true;
		}

		// Programmatically generated events targeting a specific element should be permitted
		if (!event.cancelable) {
			return true;
		}

		// Derive and check the target element to see whether the mouse event needs to be permitted;
		// unless explicitly enabled, prevent non-touch click events from triggering actions,
		// to prevent ghost/doubleclicks.
		if (!this.needsClick(this.targetElement) || this.cancelNextClick) {

			// Prevent any user-added listeners declared on FastClick element from being fired.
			if (event.stopImmediatePropagation) {
				event.stopImmediatePropagation();
			} else {

				// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
				event.propagationStopped = true;
			}

			// Cancel the event
			event.stopPropagation();
			event.preventDefault();

			return false;
		}

		// If the mouse event is permitted, return true for the action to go through.
		return true;
	};


	/**
	 * On actual clicks, determine whether this is a touch-generated click, a click action occurring
	 * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
	 * an actual click which should be permitted.
	 *
	 * @param {Event} event
	 * @returns {boolean}
	 */
	FastClick.prototype.onClick = function(event) {
		var permitted;

		// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
		if (this.trackingClick) {
			this.targetElement = null;
			this.trackingClick = false;
			return true;
		}

		// Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
		if (event.target.type === 'submit' && event.detail === 0) {
			return true;
		}

		permitted = this.onMouse(event);

		// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
		if (!permitted) {
			this.targetElement = null;
		}

		// If clicks are permitted, return true for the action to go through.
		return permitted;
	};


	/**
	 * Remove all FastClick's event listeners.
	 *
	 * @returns {void}
	 */
	FastClick.prototype.destroy = function() {
		var layer = this.layer;

		if (deviceIsAndroid) {
			layer.removeEventListener('mouseover', this.onMouse, true);
			layer.removeEventListener('mousedown', this.onMouse, true);
			layer.removeEventListener('mouseup', this.onMouse, true);
		}

		layer.removeEventListener('click', this.onClick, true);
		layer.removeEventListener('touchstart', this.onTouchStart, false);
		layer.removeEventListener('touchmove', this.onTouchMove, false);
		layer.removeEventListener('touchend', this.onTouchEnd, false);
		layer.removeEventListener('touchcancel', this.onTouchCancel, false);
	};


	/**
	 * Check whether FastClick is needed.
	 *
	 * @param {Element} layer The layer to listen on
	 */
	FastClick.notNeeded = function(layer) {
		var metaViewport;
		var chromeVersion;
		var blackberryVersion;
		var firefoxVersion;

		// Devices that don't support touch don't need FastClick
		if (typeof window.ontouchstart === 'undefined') {
			return true;
		}

		// Chrome version - zero for other browsers
		chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

		if (chromeVersion) {

			if (deviceIsAndroid) {
				metaViewport = document.querySelector('meta[name=viewport]');

				if (metaViewport) {
					// Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
					if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
						return true;
					}
					// Chrome 32 and above with width=device-width or less don't need FastClick
					if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {
						return true;
					}
				}

			// Chrome desktop doesn't need FastClick (issue #15)
			} else {
				return true;
			}
		}

		if (deviceIsBlackBerry10) {
			blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/);

			// BlackBerry 10.3+ does not require Fastclick library.
			// https://github.com/ftlabs/fastclick/issues/251
			if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
				metaViewport = document.querySelector('meta[name=viewport]');

				if (metaViewport) {
					// user-scalable=no eliminates click delay.
					if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
						return true;
					}
					// width=device-width (or less than device-width) eliminates click delay.
					if (document.documentElement.scrollWidth <= window.outerWidth) {
						return true;
					}
				}
			}
		}

		// IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)
		if (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {
			return true;
		}

		// Firefox version - zero for other browsers
		firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

		if (firefoxVersion >= 27) {
			// Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896

			metaViewport = document.querySelector('meta[name=viewport]');
			if (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {
				return true;
			}
		}

		// IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version
		// http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx
		if (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {
			return true;
		}

		return false;
	};


	/**
	 * Factory method for creating a FastClick object
	 *
	 * @param {Element} layer The layer to listen on
	 * @param {Object} [options={}] The options to override the defaults
	 */
	FastClick.attach = function(layer, options) {
		return new FastClick(layer, options);
	};


	if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {

		// AMD. Register as an anonymous module.
		define('fastclick',[],function() {
			return FastClick;
		});
	} else if (typeof module !== 'undefined' && module.exports) {
		module.exports = FastClick.attach;
		module.exports.FastClick = FastClick;
	} else {
		window.FastClick = FastClick;
	}
}());



/*!
 * jQuery JavaScript Library v2.1.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-04-28T16:01Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//

var arr = [];

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,

	version = "2.1.4",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {
		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		return !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;
	},

	isPlainObject: function( obj ) {
		// Not plain objects:
		// - Any object or value whose internal [[Class]] property is not "[object Object]"
		// - DOM nodes
		// - window
		if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		if ( obj.constructor &&
				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
			return false;
		}

		// If the function hasn't returned already, we're confident that
		// |obj| is a plain object, created by {} or constructed with new Object
		return true;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		// Support: Android<4.0, iOS<6 (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call(obj) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		var script,
			indirect = eval;

		code = jQuery.trim( code );

		if ( code ) {
			// If the code includes a valid, prologue position
			// strict mode pragma, execute code by injecting a
			// script tag into the document.
			if ( code.indexOf("use strict") === 1 ) {
				script = document.createElement("script");
				script.text = code;
				document.head.appendChild( script ).parentNode.removeChild( script );
			} else {
			// Otherwise, avoid the DOM node creation, insertion
			// and removal by using an indirect global eval
				indirect( code );
			}
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE9-11+
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.0-pre
 * http://sizzlejs.com/
 *
 * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-12-16
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + characterEncoding + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];
	nodeType = context.nodeType;

	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	if ( !seed && documentIsHTML ) {

		// Try to shortcut find operations when possible (e.g., not under DocumentFragment)
		if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document (jQuery #6963)
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType !== 1 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;
	parent = doc.defaultView;

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent !== parent.top ) {
		// IE11 does not have attachEvent, so all must suffer
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Support tests
	---------------------------------------------------------------------- */
	documentIsHTML = !isXML( doc );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( doc.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\f]' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (oldCache = outerCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							outerCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context !== document && context;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is no seed and only one group
	if ( match.length === 1 ) {

		// Take a shortcut and set the context if the root selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) >= 0 ) !== not;
	});
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		}));
};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			len = this.length,
			ret = [],
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},
	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
});


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[0] === "<" && selector[ selector.length - 1 ] === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Support: Blackberry 4.6
					// gEBID returns nodes no longer in the document (#6963)
					if ( elem && elem.parentNode ) {
						// Inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof rootjQuery.ready !== "undefined" ?
				rootjQuery.ready( selector ) :
				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.extend({
	dir: function( elem, dir, until ) {
		var matched = [],
			truncate = until !== undefined;

		while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
			if ( elem.nodeType === 1 ) {
				if ( truncate && jQuery( elem ).is( until ) ) {
					break;
				}
				matched.push( elem );
			}
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var matched = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				matched.push( n );
			}
		}

		return matched;
	}
});

jQuery.fn.extend({
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter(function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.unique(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.unique( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
});
var rnotwhite = (/\S+/g);



// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// Add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// If we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {
	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend({
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
});

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed, false );
	window.removeEventListener( "load", completed, false );
	jQuery.ready();
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// We once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		} else {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {
			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			len ? fn( elems[0], key ) : emptyGet;
};


/**
 * Determines whether an object can have data
 */
jQuery.acceptData = function( owner ) {
	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	/* jshint -W018 */
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};


function Data() {
	// Support: Android<4,
	// Old WebKit does not have Object.preventExtensions/freeze method,
	// return new empty object instead with no [[set]] accessor
	Object.defineProperty( this.cache = {}, 0, {
		get: function() {
			return {};
		}
	});

	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;
Data.accepts = jQuery.acceptData;

Data.prototype = {
	key: function( owner ) {
		// We can accept data for non-element nodes in modern browsers,
		// but we should not, see #8335.
		// Always return the key for a frozen object.
		if ( !Data.accepts( owner ) ) {
			return 0;
		}

		var descriptor = {},
			// Check if the owner object already has a cache key
			unlock = owner[ this.expando ];

		// If not, create one
		if ( !unlock ) {
			unlock = Data.uid++;

			// Secure it in a non-enumerable, non-writable property
			try {
				descriptor[ this.expando ] = { value: unlock };
				Object.defineProperties( owner, descriptor );

			// Support: Android<4
			// Fallback to a less secure definition
			} catch ( e ) {
				descriptor[ this.expando ] = unlock;
				jQuery.extend( owner, descriptor );
			}
		}

		// Ensure the cache object
		if ( !this.cache[ unlock ] ) {
			this.cache[ unlock ] = {};
		}

		return unlock;
	},
	set: function( owner, data, value ) {
		var prop,
			// There may be an unlock assigned to this node,
			// if there is no entry for this "owner", create one inline
			// and set the unlock as though an owner entry had always existed
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		// Handle: [ owner, key, value ] args
		if ( typeof data === "string" ) {
			cache[ data ] = value;

		// Handle: [ owner, { properties } ] args
		} else {
			// Fresh assignments by object are shallow copied
			if ( jQuery.isEmptyObject( cache ) ) {
				jQuery.extend( this.cache[ unlock ], data );
			// Otherwise, copy the properties one-by-one to the cache object
			} else {
				for ( prop in data ) {
					cache[ prop ] = data[ prop ];
				}
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		// Either a valid cache is found, or will be created.
		// New caches will be created and the unlock returned,
		// allowing direct access to the newly created
		// empty data object. A valid owner object must be provided.
		var cache = this.cache[ this.key( owner ) ];

		return key === undefined ?
			cache : cache[ key ];
	},
	access: function( owner, key, value ) {
		var stored;
		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				((key && typeof key === "string") && value === undefined) ) {

			stored = this.get( owner, key );

			return stored !== undefined ?
				stored : this.get( owner, jQuery.camelCase(key) );
		}

		// [*]When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i, name, camel,
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		if ( key === undefined ) {
			this.cache[ unlock ] = {};

		} else {
			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = key.concat( key.map( jQuery.camelCase ) );
			} else {
				camel = jQuery.camelCase( key );
				// Try the string as a key before any manipulation
				if ( key in cache ) {
					name = [ key, camel ];
				} else {
					// If a key with the spaces exists, use it.
					// Otherwise, create an array by matching non-whitespace
					name = camel;
					name = name in cache ?
						[ name ] : ( name.match( rnotwhite ) || [] );
				}
			}

			i = name.length;
			while ( i-- ) {
				delete cache[ name[ i ] ];
			}
		}
	},
	hasData: function( owner ) {
		return !jQuery.isEmptyObject(
			this.cache[ owner[ this.expando ] ] || {}
		);
	},
	discard: function( owner ) {
		if ( owner[ this.expando ] ) {
			delete this.cache[ owner[ this.expando ] ];
		}
	}
};
var data_priv = new Data();

var data_user = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			data_user.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend({
	hasData: function( elem ) {
		return data_user.hasData( elem ) || data_priv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return data_user.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		data_user.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to data_priv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return data_priv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		data_priv.remove( elem, name );
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = data_user.get( elem );

				if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice(5) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					data_priv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				data_user.set( this, key );
			});
		}

		return access( this, function( value ) {
			var data,
				camelKey = jQuery.camelCase( key );

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {
				// Attempt to get data from the cache
				// with the key as-is
				data = data_user.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to get data from the cache
				// with the key camelized
				data = data_user.get( elem, camelKey );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, camelKey, undefined );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each(function() {
				// First, attempt to store a copy or reference of any
				// data that might've been store with a camelCased key.
				var data = data_user.get( this, camelKey );

				// For HTML5 data-* attribute interop, we have to
				// store property names with dashes in a camelCase form.
				// This might not apply to all properties...*
				data_user.set( this, camelKey, value );

				// *... In the case of properties that might _actually_
				// have dashes, we need to also store a copy of that
				// unchanged property.
				if ( key.indexOf("-") !== -1 && data !== undefined ) {
					data_user.set( this, key, value );
				}
			});
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each(function() {
			data_user.remove( this, key );
		});
	}
});


jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = data_priv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = data_priv.access( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return data_priv.get( elem, key ) || data_priv.access( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				data_priv.remove( elem, [ type + "queue", key ] );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = data_priv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {
		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
	};

var rcheckableType = (/^(?:checkbox|radio)$/i);



(function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Safari<=5.1
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari<=5.1, Android<4.2
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<=11+
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
})();
var strundefined = typeof undefined;



support.focusinBubbles = "onfocusin" in window;


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.hasData( elem ) && data_priv.get( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;
			data_priv.remove( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: Cordova 2.5 (WebKit) (#13255)
		// All events should have a target; Cordova deviceready doesn't
		if ( !event.target ) {
			event.target = document;
		}

		// Support: Safari 6.0+, Chrome<28
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle, false );
	}
};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&
				// Support: Android<4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && e.preventDefault ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && e.stopPropagation ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// Support: Chrome 15+
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// Support: Firefox, Chrome, Safari
// Create "bubbling" focus and blur events
if ( !support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = data_priv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				data_priv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = data_priv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					data_priv.remove( doc, fix );

				} else {
					data_priv.access( doc, fix, attaches );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});


var
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {

		// Support: IE9
		option: [ 1, "<select multiple='multiple'>", "</select>" ],

		thead: [ 1, "<table>", "</table>" ],
		col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		_default: [ 0, "", "" ]
	};

// Support: IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: 1.x compatibility
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute("type");
	}

	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		data_priv.set(
			elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
		);
	}
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( data_priv.hasData( src ) ) {
		pdataOld = data_priv.access( src );
		pdataCur = data_priv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( data_user.hasData( src ) ) {
		udataOld = data_user.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		data_user.set( dest, udataCur );
	}
}

function getAll( context, tag ) {
	var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
			context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
			[];

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], ret ) :
		ret;
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var elem, tmp, tag, wrap, contains, j,
			fragment = context.createDocumentFragment(),
			nodes = [],
			i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					// Support: QtWebKit, PhantomJS
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || fragment.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];

					// Descend through wrappers to the right content
					j = wrap[ 0 ];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Support: QtWebKit, PhantomJS
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, tmp.childNodes );

					// Remember the top-level container
					tmp = fragment.firstChild;

					// Ensure the created nodes are orphaned (#12392)
					tmp.textContent = "";
				}
			}
		}

		// Remove wrapper from fragment
		fragment.textContent = "";

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( fragment.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		return fragment;
	},

	cleanData: function( elems ) {
		var data, elem, type, key,
			special = jQuery.event.special,
			i = 0;

		for ( ; (elem = elems[ i ]) !== undefined; i++ ) {
			if ( jQuery.acceptData( elem ) ) {
				key = elem[ data_priv.expando ];

				if ( key && (data = data_priv.cache[ key ]) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}
					if ( data_priv.cache[ key ] ) {
						// Discard any remaining `private` data
						delete data_priv.cache[ key ];
					}
				}
			}
			// Discard any remaining `user` data
			delete data_user.cache[ elem[ data_user.expando ] ];
		}
	}
});

jQuery.fn.extend({
	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each(function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				});
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	remove: function( selector, keepData /* Internal Use Only */ ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {
			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map(function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var arg = arguments[ 0 ];

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			arg = this.parentNode;

			jQuery.cleanData( getAll( this ) );

			if ( arg ) {
				arg.replaceChild( elem, this );
			}
		});

		// Force removal if there was no new content (e.g., from empty arguments)
		return arg && (arg.length || arg.nodeType) ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var fragment, first, scripts, hasScripts, node, doc,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[ 0 ],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[ 0 ] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							// Support: QtWebKit
							// jQuery.merge because push.apply(_, arraylike) throws
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[ i ], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
							}
						}
					}
				}
			}
		}

		return this;
	}
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: QtWebKit
			// .get() because push.apply(_, arraylike) throws
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});


var iframe,
	elemdisplay = {};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */
// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var style,
		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		// getDefaultComputedStyle might be reliably used only on attached element
		display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

			// Use of this method is a temporary fix (more like optimization) until something better comes along,
			// since it was removed from specification and supported only in FF
			style.display : jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = iframe[ 0 ].contentDocument;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = (/^margin/);

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {
		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		if ( elem.ownerDocument.defaultView.opener ) {
			return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
		}

		return window.getComputedStyle( elem, null );
	};



function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE9
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];
	}

	if ( computed ) {

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// Support: iOS < 6
		// A tribute to the "awesome hack by Dean Edwards"
		// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
		// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
		if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?
		// Support: IE
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {
	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {
				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return (this.get = hookFn).apply( this, arguments );
		}
	};
}


(function() {
	var pixelPositionVal, boxSizingReliableVal,
		docElem = document.documentElement,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	if ( !div.style ) {
		return;
	}

	// Support: IE9-11+
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" +
		"position:absolute";
	container.appendChild( div );

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computePixelPositionAndBoxSizingReliable() {
		div.style.cssText =
			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
			"border:1px;padding:1px;width:4px;position:absolute";
		div.innerHTML = "";
		docElem.appendChild( container );

		var divStyle = window.getComputedStyle( div, null );
		pixelPositionVal = divStyle.top !== "1%";
		boxSizingReliableVal = divStyle.width === "4px";

		docElem.removeChild( container );
	}

	// Support: node.js jsdom
	// Don't assume that getComputedStyle is a property of the global object
	if ( window.getComputedStyle ) {
		jQuery.extend( support, {
			pixelPosition: function() {

				// This test is executed only once but we still do memoizing
				// since we can use the boxSizingReliable pre-computing.
				// No need to check if the test was already performed, though.
				computePixelPositionAndBoxSizingReliable();
				return pixelPositionVal;
			},
			boxSizingReliable: function() {
				if ( boxSizingReliableVal == null ) {
					computePixelPositionAndBoxSizingReliable();
				}
				return boxSizingReliableVal;
			},
			reliableMarginRight: function() {

				// Support: Android 2.3
				// Check if div with explicit width and no margin-right incorrectly
				// gets computed margin-right based on width of container. (#3333)
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// This support function is only executed once so no memoizing is needed.
				var ret,
					marginDiv = div.appendChild( document.createElement( "div" ) );

				// Reset CSS: box-sizing; display; margin; border; padding
				marginDiv.style.cssText = div.style.cssText =
					// Support: Firefox<29, Android 2.3
					// Vendor-prefix box-sizing
					"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
					"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
				marginDiv.style.marginRight = marginDiv.style.width = "0";
				div.style.width = "1px";
				docElem.appendChild( container );

				ret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );

				docElem.removeChild( container );
				div.removeChild( marginDiv );

				return ret;
			}
		});
	}
})();


// A method for quickly swapping in/out CSS properties to get correct calculations.
jQuery.swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var
	// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[0].toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = data_priv.get( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = data_priv.access( elem, "olddisplay", defaultDisplay(elem.nodeName) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display !== "none" || !hidden ) {
				data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.extend({

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Support: IE9-11+
			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				style[ name ] = value;
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

// Support: Android 2.3
jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return jQuery.swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});

jQuery.fn.extend({
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE9
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	}
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*.
					// Use string for doubling so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur(),
				// break the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		} ]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = data_priv.get( elem, "fxshow" );

	// Handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// Ensure the complete handler is called before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// Height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE9-10 do not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			data_priv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
			style.display = "inline-block";
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always(function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		});
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = data_priv.access( elem, "fxshow", {} );
		}

		// Store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;

			data_priv.remove( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// Don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || data_priv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = data_priv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = data_priv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		});
	}
});

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = setTimeout( next, time );
		hooks.stop = function() {
			clearTimeout( timeout );
		};
	});
};


(function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: iOS<=5.1, Android<=4.2+
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE<=11+
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: Android<=2.3
	// Options inside disabled selects are incorrectly marked as disabled
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE<=11+
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
})();


var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	}
});

jQuery.extend({
	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					elem[ propName ] = false;
				}

				elem.removeAttribute( name );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	}
});

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle;
		if ( !isXML ) {
			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ name ];
			attrHandle[ name ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				name.toLowerCase() :
				null;
			attrHandle[ name ] = handle;
		}
		return ret;
	};
});




var rfocusable = /^(?:input|select|textarea|button)$/i;

jQuery.fn.extend({
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each(function() {
			delete this[ jQuery.propFix[ name ] || name ];
		});
	}
});

jQuery.extend({
	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
					elem.tabIndex :
					-1;
			}
		}
	}
});

if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});




var rclass = /[\t\r\n\f]/g;

jQuery.fn.extend({
	addClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			proceed = typeof value === "string" && value,
			i = 0,
			len = this.length;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			proceed = arguments.length === 0 || typeof value === "string" && value,
			i = 0,
			len = this.length;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = value ? jQuery.trim( cur ) : "";
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// Toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					data_priv.set( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	}
});




var rreturn = /\r/g;

jQuery.fn.extend({
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// Handle most common string cases
					ret.replace(rreturn, "") :
					// Handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					jQuery.trim( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// IE6-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ? !option.disabled : option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];
					if ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {
						optionSet = true;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
});

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});




// Return jQuery for attributes-only inclusion


jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});


var nonce = jQuery.now();

var rquery = (/\?/);



// Support: Android 2.3
// Workaround failure to string-cast null input
jQuery.parseJSON = function( data ) {
	return JSON.parse( data + "" );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE9
	try {
		tmp = new DOMParser();
		xml = tmp.parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Document location
	ajaxLocation = window.location.href,

	// Segment location into parts
	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType[0] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

		// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,
			// URL without anti-cache param
			cacheURL,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});


jQuery._evalUrl = function( url ) {
	return jQuery.ajax({
		url: url,
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	});
};


jQuery.fn.extend({
	wrapAll: function( html ) {
		var wrap;

		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapAll( html.call(this, i) );
			});
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});


jQuery.expr.filters.hidden = function( elem ) {
	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
};
jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function() {
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		})
		.map(function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});


jQuery.ajaxSettings.xhr = function() {
	try {
		return new XMLHttpRequest();
	} catch( e ) {}
};

var xhrId = 0,
	xhrCallbacks = {},
	xhrSuccessStatus = {
		// file protocol always yields status code 0, assume 200
		0: 200,
		// Support: IE9
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE9
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]();
		}
	});
}

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport(function( options ) {
	var callback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr(),
					id = ++xhrId;

				xhr.open( options.type, options.url, options.async, options.username, options.password );

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers["X-Requested-With"] ) {
					headers["X-Requested-With"] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							delete xhrCallbacks[ id ];
							callback = xhr.onload = xhr.onerror = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {
								complete(
									// file: protocol always yields status 0; see #8605, #14207
									xhr.status,
									xhr.statusText
								);
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,
									// Support: IE9
									// Accessing binary-data responseText throws an exception
									// (#11426)
									typeof xhr.responseText === "string" ? {
										text: xhr.responseText
									} : undefined,
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				xhr.onerror = callback("error");

				// Create the abort callback
				callback = xhrCallbacks[ id ] = callback("abort");

				try {
					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {
					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {
	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery("<script>").prop({
					async: true,
					charset: s.scriptCharset,
					src: s.url
				}).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});




// data: string of html
// context (optional): If specified, the fragment will be created in this context, defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[1] ) ];
	}

	parsed = jQuery.buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = jQuery.trim( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
});




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep(jQuery.timers, function( fn ) {
		return elem === fn.elem;
	}).length;
};




var docElem = window.document.documentElement;

/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf("auto") > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend({
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each(function( i ) {
					jQuery.offset.setOffset( this, options, i );
				});
		}

		var docElem, win,
			elem = this[ 0 ],
			box = { top: 0, left: 0 },
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// Support: BlackBerry 5, iOS 3 (original iPhone)
		// If we don't have gBCR, just use 0,0 rather than error
		if ( typeof elem.getBoundingClientRect !== strundefined ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top + win.pageYOffset - docElem.clientTop,
			left: box.left + win.pageXOffset - docElem.clientLeft
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || docElem;
		});
	}
});

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : window.pageXOffset,
					top ? val : window.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

// Support: Safari<7+, Chrome<37+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );
				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
});


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});


// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	});
}




var
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === strundefined ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;

}));

/**
 * 预加载图片
 */
define('PreloadingImg',['require','exports','module','jquery'],function(require, exports, module){
	var $ = require('jquery');

	function perLoadingImg() {
		// var path = findCordovaPath();
		// console.log('&&&&&&&&&&&&&&&&&&&&&',path);
		var path = 'app_img/';
		$.ajax({
			type : 'GET',
			url : path + 'loading.txt',
			contentType : 'text/HTML',
		}).success(function(data, textStatus, jqXHR) {
			var splitArrays = data.split('\n');
			$.each(splitArrays, function(i, v) {
				if (v) {
					console.log(v+'已加载');
					var img = new Image();
					img.src = v;
					// console.log(img.src);
				}
			});
		});
	}

	function findCordovaPath() {
		var path = null;
		var scripts = document.getElementsByTagName('script');
		var term = 'require.js';
		for (var n = scripts.length - 1; n > -1; n--) {
			var src = scripts[n].src;
			if (src.indexOf(term) == (src.length - term.length)) {
				path = src.substring(0, src.length - term.length);
				break;
			}
		}
		return path;
	}

	return {
		perLoadingImg : perLoadingImg
	}
});
//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` (`self`) in the browser, `global`
  // on the server, or `this` in some virtual machines. We use `self`
  // instead of `window` for `WebWorker` support.
  var root = typeof self == 'object' && self.self === self && self ||
            typeof global == 'object' && global.global === global && global ||
            this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push = ArrayProto.push,
    slice = ArrayProto.slice,
    toString = ObjProto.toString,
    hasOwnProperty = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeIsArray = Array.isArray,
    nativeKeys = Object.keys,
    nativeCreate = Object.create;

  // Naked function reference for surrogate-prototype-swapping.
  var Ctor = function(){};

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for their old module API. If we're in
  // the browser, add `_` as a global object.
  if (typeof exports != 'undefined') {
    if (typeof module != 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.8.3';

  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var optimizeCb = function(func, context, argCount) {
    if (context === void 0) return func;
    switch (argCount == null ? 3 : argCount) {
      case 1: return function(value) {
        return func.call(context, value);
      };
      // The 2-parameter case has been omitted only because no current consumers
      // made use of it.
      case 3: return function(value, index, collection) {
        return func.call(context, value, index, collection);
      };
      case 4: return function(accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function() {
      return func.apply(context, arguments);
    };
  };

  // A mostly-internal function to generate callbacks that can be applied
  // to each element in a collection, returning the desired result — either
  // `identity`, an arbitrary callback, a property matcher, or a property accessor.
  var cb = function(value, context, argCount) {
    if (value == null) return _.identity;
    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
    if (_.isObject(value)) return _.matcher(value);
    return _.property(value);
  };

  _.iteratee = function(value, context) {
    return cb(value, context, Infinity);
  };

  // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)
  // This accumulates the arguments passed into an array, after a given index.
  var restArgs = function(func, startIndex) {
    startIndex = startIndex == null ? func.length - 1 : +startIndex;
    return function() {
      var length = Math.max(arguments.length - startIndex, 0);
      var rest = Array(length);
      for (var index = 0; index < length; index++) {
        rest[index] = arguments[index + startIndex];
      }
      switch (startIndex) {
        case 0: return func.call(this, rest);
        case 1: return func.call(this, arguments[0], rest);
        case 2: return func.call(this, arguments[0], arguments[1], rest);
      }
      var args = Array(startIndex + 1);
      for (index = 0; index < startIndex; index++) {
        args[index] = arguments[index];
      }
      args[startIndex] = rest;
      return func.apply(this, args);
    };
  };

  // An internal function for creating a new object that inherits from another.
  var baseCreate = function(prototype) {
    if (!_.isObject(prototype)) return {};
    if (nativeCreate) return nativeCreate(prototype);
    Ctor.prototype = prototype;
    var result = new Ctor;
    Ctor.prototype = null;
    return result;
  };

  var property = function(key) {
    return function(obj) {
      return obj == null ? void 0 : obj[key];
    };
  };

  // Helper for collection methods to determine whether a collection
  // should be iterated as an array or as an object.
  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
  var getLength = property('length');
  var isArrayLike = function(collection) {
    var length = getLength(collection);
    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
  };

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function(obj, iteratee, context) {
    iteratee = optimizeCb(iteratee, context);
    var i, length;
    if (isArrayLike(obj)) {
      for (i = 0, length = obj.length; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };

  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length);
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  // Create a reducing function iterating left or right.
  var createReduce = function(dir) {
    // Optimized iterator function as using arguments.length
    // in the main function will deoptimize the, see #1991.
    var reducer = function(obj, iteratee, memo, initial) {
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          index = dir > 0 ? 0 : length - 1;
      if (!initial) {
        memo = obj[keys ? keys[index] : index];
        index += dir;
      }
      for (; index >= 0 && index < length; index += dir) {
        var currentKey = keys ? keys[index] : index;
        memo = iteratee(memo, obj[currentKey], currentKey, obj);
      }
      return memo;
    };

    return function(obj, iteratee, memo, context) {
      var initial = arguments.length >= 3;
      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);
    };
  };

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = createReduce(1);

  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = createReduce(-1);

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var key;
    if (isArrayLike(obj)) {
      key = _.findIndex(obj, predicate, context);
    } else {
      key = _.findKey(obj, predicate, context);
    }
    if (key !== void 0 && key !== -1) return obj[key];
  };

  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    predicate = cb(predicate, context);
    _.each(obj, function(value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, _.negate(cb(predicate)), context);
  };

  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }
    return true;
  };

  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }
    return false;
  };

  // Determine if the array or object contains a given item (using `===`).
  // Aliased as `includes` and `include`.
  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
    if (!isArrayLike(obj)) obj = _.values(obj);
    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
    return _.indexOf(obj, item, fromIndex) >= 0;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = restArgs(function(obj, method, args) {
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      var func = isFunc ? method : value[method];
      return func == null ? func : func.apply(value, args);
    });
  });

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matcher(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matcher(attrs));
  };

  // Return the maximum element (or element-based computation).
  _.max = function(obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity,
        value, computed;
    if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object') && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value > result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(v, index, list) {
        computed = iteratee(v, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = v;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity,
        value, computed;
    if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object') && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value < result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(v, index, list) {
        computed = iteratee(v, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = v;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Shuffle a collection.
  _.shuffle = function(obj) {
    return _.sample(obj, Infinity);
  };

  // Sample **n** random values from a collection using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);
    var length = getLength(sample);
    n = Math.max(Math.min(n, length), 0);
    var last = length - 1;
    for (var index = 0; index < n; index++) {
      var rand = _.random(index, last);
      var temp = sample[index];
      sample[index] = sample[rand];
      sample[rand] = temp;
    }
    return sample.slice(0, n);
  };

  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function(obj, iteratee, context) {
    var index = 0;
    iteratee = cb(iteratee, context);
    return _.pluck(_.map(obj, function(value, key, list) {
      return {
        value: value,
        index: index++,
        criteria: iteratee(value, key, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior, partition) {
    return function(obj, iteratee, context) {
      var result = partition ? [[], []] : {};
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, value, key) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key]++; else result[key] = 1;
  });

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (isArrayLike(obj)) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
  };

  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = group(function(result, value, pass) {
    result[pass ? 0 : 1].push(value);
  }, true);

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[0];
    return _.initial(array, array.length - n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[array.length - 1];
    return _.rest(array, Math.max(0, array.length - n));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, strict, output) {
    output = output || [];
    var idx = output.length;
    for (var i = 0, length = getLength(input); i < length; i++) {
      var value = input[i];
      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
        //flatten current level of array or arguments object
        if (shallow) {
          var j = 0, len = value.length;
          while (j < len) output[idx++] = value[j++];
        } else {
          flatten(value, shallow, strict, output);
          idx = output.length;
        }
      } else if (!strict) {
        output[idx++] = value;
      }
    }
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, false);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = restArgs(function(array, otherArrays) {
    return _.difference(array, otherArrays);
  });

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null) iteratee = cb(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = getLength(array); i < length; i++) {
      var value = array[i],
          computed = iteratee ? iteratee(value, i, array) : value;
      if (isSorted) {
        if (!i || seen !== computed) result.push(value);
        seen = computed;
      } else if (iteratee) {
        if (!_.contains(seen, computed)) {
          seen.push(computed);
          result.push(value);
        }
      } else if (!_.contains(result, value)) {
        result.push(value);
      }
    }
    return result;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = restArgs(function(arrays) {
    return _.uniq(flatten(arrays, true, true));
  });

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = getLength(array); i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      var j;
      for (j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }
      if (j === argsLength) result.push(item);
    }
    return result;
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = restArgs(function(array, rest) {
    rest = flatten(rest, true, true);
    return _.filter(array, function(value){
      return !_.contains(rest, value);
    });
  });

  // Complement of _.zip. Unzip accepts an array of arrays and groups
  // each array's elements on shared indices
  _.unzip = function(array) {
    var length = array && _.max(array, getLength).length || 0;
    var result = Array(length);

    for (var index = 0; index < length; index++) {
      result[index] = _.pluck(array, index);
    }
    return result;
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = restArgs(_.unzip);

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    var result = {};
    for (var i = 0, length = getLength(list); i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // Generator function to create the findIndex and findLastIndex functions
  var createPredicateIndexFinder = function(dir) {
    return function(array, predicate, context) {
      predicate = cb(predicate, context);
      var length = getLength(array);
      var index = dir > 0 ? 0 : length - 1;
      for (; index >= 0 && index < length; index += dir) {
        if (predicate(array[index], index, array)) return index;
      }
      return -1;
    };
  };

  // Returns the first index on an array-like that passes a predicate test
  _.findIndex = createPredicateIndexFinder(1);
  _.findLastIndex = createPredicateIndexFinder(-1);

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iteratee, context) {
    iteratee = cb(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = getLength(array);
    while (low < high) {
      var mid = Math.floor((low + high) / 2);
      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
    }
    return low;
  };

  // Generator function to create the indexOf and lastIndexOf functions
  var createIndexFinder = function(dir, predicateFind, sortedIndex) {
    return function(array, item, idx) {
      var i = 0, length = getLength(array);
      if (typeof idx == 'number') {
        if (dir > 0) {
          i = idx >= 0 ? idx : Math.max(idx + length, i);
        } else {
          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
        }
      } else if (sortedIndex && idx && length) {
        idx = sortedIndex(array, item);
        return array[idx] === item ? idx : -1;
      }
      if (item !== item) {
        idx = predicateFind(slice.call(array, i, length), _.isNaN);
        return idx >= 0 ? idx + i : -1;
      }
      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
        if (array[idx] === item) return idx;
      }
      return -1;
    };
  };

  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (stop == null) {
      stop = start || 0;
      start = 0;
    }
    step = step || 1;

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  };

  // Split an **array** into several arrays containing **count** or less elements
  // of initial array
  _.chunk = function(array, count) {
    if (count == null || count < 1) return [];

    var result = [];
    var i = 0, length = array.length;
    while (i < length) {
      result.push(slice.call(array, i, i += count));
    }
    return result;
  };

  // Function (ahem) Functions
  // ------------------

  // Determines whether to execute a function as a constructor
  // or a normal function with the provided arguments
  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
    var self = baseCreate(sourceFunc.prototype);
    var result = sourceFunc.apply(self, args);
    if (_.isObject(result)) return result;
    return self;
  };

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = restArgs(function(func, context, args) {
    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
    var bound = restArgs(function(callArgs) {
      return executeBound(func, bound, context, this, args.concat(callArgs));
    });
    return bound;
  });

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder by default, allowing any combination of arguments to be
  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.
  _.partial = restArgs(function(func, boundArgs) {
    var placeholder = _.partial.placeholder;
    var bound = function() {
      var position = 0, length = boundArgs.length;
      var args = Array(length);
      for (var i = 0; i < length; i++) {
        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return executeBound(func, bound, this, this, args);
    };
    return bound;
  });

  _.partial.placeholder = _;

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = restArgs(function(obj, keys) {
    keys = flatten(keys, false, false);
    var index = keys.length;
    if (index < 1) throw new Error('bindAll must be passed function names');
    while (index--) {
      var key = keys[index];
      obj[key] = _.bind(obj[key], obj);
    }
  });

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memoize = function(key) {
      var cache = memoize.cache;
      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = restArgs(function(func, wait, args) {
    return setTimeout(function(){
      return func.apply(null, args);
    }, wait);
  });

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = _.partial(_.delay, _, 1);

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    if (!options) options = {};
    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };
    return function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, args, context, timestamp, result;

    var later = function() {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    };

    return function() {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout) timeout = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }

      return result;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a negated version of the passed-in predicate.
  _.negate = function(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var args = arguments;
    var start = args.length - 1;
    return function() {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--) result = args[i].call(this, result);
      return result;
    };
  };

  // Returns a function that will only be executed on and after the Nth call.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Returns a function that will only be executed up to (but not including) the Nth call.
  _.before = function(times, func) {
    var memo;
    return function() {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      }
      if (times <= 1) func = null;
      return memo;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);

  _.restArgs = restArgs;

  // Object Functions
  // ----------------

  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var collectNonEnumProps = function(obj, keys) {
    var nonEnumIdx = nonEnumerableProps.length;
    var constructor = obj.constructor;
    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;

    // Constructor is a special case.
    var prop = 'constructor';
    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

    while (nonEnumIdx--) {
      prop = nonEnumerableProps[nonEnumIdx];
      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
        keys.push(prop);
      }
    }
  };

  // Retrieve the names of an object's own properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve all the property names of an object.
  _.allKeys = function(obj) {
    if (!_.isObject(obj)) return [];
    var keys = [];
    for (var key in obj) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Returns the results of applying the iteratee to each element of the object
  // In contrast to _.map it returns an object
  _.mapObject = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys = _.keys(obj),
      length = keys.length,
      results = {};
    for (var index = 0; index < length; index++) {
      var currentKey = keys[index];
      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // An internal function for creating assigner functions.
  var createAssigner = function(keysFunc, defaults) {
    return function(obj) {
      var length = arguments.length;
      if (defaults) obj = Object(obj);
      if (length < 2 || obj == null) return obj;
      for (var index = 1; index < length; index++) {
        var source = arguments[index],
            keys = keysFunc(source),
            l = keys.length;
        for (var i = 0; i < l; i++) {
          var key = keys[i];
          if (!defaults || obj[key] === void 0) obj[key] = source[key];
        }
      }
      return obj;
    };
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = createAssigner(_.allKeys);

  // Assigns a given object with all the own properties in the passed-in object(s)
  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
  _.extendOwn = _.assign = createAssigner(_.keys);

  // Returns the first key on an object that passes a predicate test
  _.findKey = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = _.keys(obj), key;
    for (var i = 0, length = keys.length; i < length; i++) {
      key = keys[i];
      if (predicate(obj[key], key, obj)) return key;
    }
  };

  // Internal pick helper function to determine if `obj` has key `key`.
  var keyInObj = function(value, key, obj) {
    return key in obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = restArgs(function(obj, keys) {
    var result = {}, iteratee = keys[0];
    if (obj == null) return result;
    if (_.isFunction(iteratee)) {
      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);
      keys = _.allKeys(obj);
    } else {
      iteratee = keyInObj;
      keys = flatten(keys, false, false);
      obj = Object(obj);
    }
    for (var i = 0, length = keys.length; i < length; i++) {
      var key = keys[i];
      var value = obj[key];
      if (iteratee(value, key, obj)) result[key] = value;
    }
    return result;
  });

   // Return a copy of the object without the blacklisted properties.
  _.omit = restArgs(function(obj, keys) {
    var iteratee = keys[0], context;
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
      if (keys.length > 1) context = keys[1];
    } else {
      keys = _.map(flatten(keys, false, false), String);
      iteratee = function(value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  });

  // Fill in a given object with default properties.
  _.defaults = createAssigner(_.allKeys, true);

  // Creates an object that inherits from the given prototype object.
  // If additional properties are provided then they will be added to the
  // created object.
  _.create = function(prototype, props) {
    var result = baseCreate(prototype);
    if (props) _.extendOwn(result, props);
    return result;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Returns whether an object has a given set of `key:value` pairs.
  _.isMatch = function(object, attrs) {
    var keys = _.keys(attrs), length = keys.length;
    if (object == null) return !length;
    var obj = Object(object);
    for (var i = 0; i < length; i++) {
      var key = keys[i];
      if (attrs[key] !== obj[key] || !(key in obj)) return false;
    }
    return true;
  };


  // Internal recursive comparison function for `isEqual`.
  var eq, deepEq;
  eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // `NaN`s are equivalent, but non-reflexive.
    if (a !== a) return b !== b;
    // Exhaust primitive checks
    var type = typeof a;
    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;
    return deepEq(a, b, aStack, bStack);
  };

  // Internal recursive comparison function for `isEqual`.
  deepEq = function(a, b, aStack, bStack) {
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]':
      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN
        if (+a !== +a) return +b !== +b;
        // An `egal` comparison is performed for other numeric values.
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;
    }

    var areArrays = className === '[object Array]';
    if (!areArrays) {
      if (typeof a != 'object' || typeof b != 'object') return false;

      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                               _.isFunction(bCtor) && bCtor instanceof bCtor)
                          && ('constructor' in a && 'constructor' in b)) {
        return false;
      }
    }
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

    // Initializing stack of traversed objects.
    // It's done here since we only need them for objects and arrays comparison.
    aStack = aStack || [];
    bStack = bStack || [];
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    }

    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);

    // Recursively compare objects and arrays.
    if (areArrays) {
      // Compare array lengths to determine if a deep comparison is necessary.
      length = a.length;
      if (length !== b.length) return false;
      // Deep compare the contents, ignoring non-numeric properties.
      while (length--) {
        if (!eq(a[length], b[length], aStack, bStack)) return false;
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      length = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      if (_.keys(b).length !== length) return false;
      while (length--) {
        // Deep compare each member
        key = keys[length];
        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return true;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
    return _.keys(obj).length === 0;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) === '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE < 9), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return _.has(obj, 'callee');
    };
  }

  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).
  var nodelist = root.document && root.document.childNodes;
  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {
    _.isFunction = function(obj) {
      return typeof obj == 'function' || false;
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`?
  _.isNaN = function(obj) {
    return _.isNumber(obj) && isNaN(obj);
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iteratees.
  _.identity = function(value) {
    return value;
  };

  // Predicate-generating functions. Often useful outside of Underscore.
  _.constant = function(value) {
    return function() {
      return value;
    };
  };

  _.noop = function(){};

  _.property = property;

  // Generates a function for a given object that returns a given property.
  _.propertyOf = function(obj) {
    return obj == null ? function(){} : function(key) {
      return obj[key];
    };
  };

  // Returns a predicate for checking whether an object has a given set of
  // `key:value` pairs.
  _.matcher = _.matches = function(attrs) {
    attrs = _.extendOwn({}, attrs);
    return function(obj) {
      return _.isMatch(obj, attrs);
    };
  };

  // Run a function **n** times.
  _.times = function(n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = optimizeCb(iteratee, context, 1);
    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() {
    return new Date().getTime();
  };

   // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };
  var unescapeMap = _.invert(escapeMap);

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function(map) {
    var escaper = function(match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function(string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, prop, fallback) {
    var value = object == null ? void 0 : object[prop];
    if (value === void 0) {
      value = fallback;
    }
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate: /<%([\s\S]+?)%>/g,
    interpolate: /<%=([\s\S]+?)%>/g,
    escape: /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'": "'",
    '\\': '\\',
    '\r': 'r',
    '\n': 'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function(match) {
    return '\\' + escapes[match];
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function(text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      // Adobe VMs need the match returned to produce the correct offset.
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + 'return __p;\n';

    var render;
    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function(obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var chainResult = function(instance, obj) {
    return instance._chain ? _(obj).chain() : obj;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    _.each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return chainResult(this, func.apply(_, args));
      };
    });
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return chainResult(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  _.each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return chainResult(this, method.apply(this._wrapped, arguments));
    };
  });

  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function() {
    return this._wrapped;
  };

  // Provide unwrapping proxy for some methods used in engine operations
  // such as arithmetic and JSON stringification.
  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

  _.prototype.toString = function() {
    return '' + this._wrapped;
  };

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define == 'function' && define.amd) {
    define('underscore', [], function() {
      return _;
    });
  }
}());

//     Backbone.js 1.2.3

//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org

(function(factory) {

  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.
  // We use `self` instead of `window` for `WebWorker` support.
  var root = (typeof self == 'object' && self.self == self && self) ||
            (typeof global == 'object' && global.global == global && global);

  // Set up Backbone appropriately for the environment. Start with AMD.
  if (typeof define === 'function' && define.amd) {
    define('backbone',['underscore', 'jquery', 'exports'], function(_, $, exports) {
      // Export global even in AMD case in case this script is loaded with
      // others that may still expect a global Backbone.
      root.Backbone = factory(root, exports, _, $);
    });

  // Next for Node.js or CommonJS. jQuery may not be needed as a module.
  } else if (typeof exports !== 'undefined') {
    var _ = require('underscore'), $;
    try { $ = require('jquery'); } catch(e) {}
    factory(root, exports, _, $);

  // Finally, as a browser global.
  } else {
    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));
  }

}(function(root, Backbone, _, $) {

  // Initial Setup
  // -------------

  // Save the previous value of the `Backbone` variable, so that it can be
  // restored later on, if `noConflict` is used.
  var previousBackbone = root.Backbone;

  // Create a local reference to a common array method we'll want to use later.
  var slice = Array.prototype.slice;

  // Current version of the library. Keep in sync with `package.json`.
  Backbone.VERSION = '1.2.3';

  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns
  // the `$` variable.
  Backbone.$ = $;

  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
  // to its previous owner. Returns a reference to this Backbone object.
  Backbone.noConflict = function() {
    root.Backbone = previousBackbone;
    return this;
  };

  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
  // will fake `"PATCH"`, `"PUT"` and `"DELETE"` requests via the `_method` parameter and
  // set a `X-Http-Method-Override` header.
  Backbone.emulateHTTP = false;

  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
  // `application/json` requests ... this will encode the body as
  // `application/x-www-form-urlencoded` instead and will send the model in a
  // form param named `model`.
  Backbone.emulateJSON = false;

  // Proxy Backbone class methods to Underscore functions, wrapping the model's
  // `attributes` object or collection's `models` array behind the scenes.
  //
  // collection.filter(function(model) { return model.get('age') > 10 });
  // collection.each(this.addView);
  //
  // `Function#apply` can be slow so we use the method's arg count, if we know it.
  var addMethod = function(length, method, attribute) {
    switch (length) {
      case 1: return function() {
        return _[method](this[attribute]);
      };
      case 2: return function(value) {
        return _[method](this[attribute], value);
      };
      case 3: return function(iteratee, context) {
        return _[method](this[attribute], cb(iteratee, this), context);
      };
      case 4: return function(iteratee, defaultVal, context) {
        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);
      };
      default: return function() {
        var args = slice.call(arguments);
        args.unshift(this[attribute]);
        return _[method].apply(_, args);
      };
    }
  };
  var addUnderscoreMethods = function(Class, methods, attribute) {
    _.each(methods, function(length, method) {
      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);
    });
  };

  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.
  var cb = function(iteratee, instance) {
    if (_.isFunction(iteratee)) return iteratee;
    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);
    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };
    return iteratee;
  };
  var modelMatcher = function(attrs) {
    var matcher = _.matches(attrs);
    return function(model) {
      return matcher(model.attributes);
    };
  };

  // Backbone.Events
  // ---------------

  // A module that can be mixed in to *any object* in order to provide it with
  // a custom event channel. You may bind a callback to an event with `on` or
  // remove with `off`; `trigger`-ing an event fires all callbacks in
  // succession.
  //
  //     var object = {};
  //     _.extend(object, Backbone.Events);
  //     object.on('expand', function(){ alert('expanded'); });
  //     object.trigger('expand');
  //
  var Events = Backbone.Events = {};

  // Regular expression used to split event strings.
  var eventSplitter = /\s+/;

  // Iterates over the standard `event, callback` (as well as the fancy multiple
  // space-separated events `"change blur", callback` and jQuery-style event
  // maps `{event: callback}`).
  var eventsApi = function(iteratee, events, name, callback, opts) {
    var i = 0, names;
    if (name && typeof name === 'object') {
      // Handle event maps.
      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;
      for (names = _.keys(name); i < names.length ; i++) {
        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);
      }
    } else if (name && eventSplitter.test(name)) {
      // Handle space separated event names by delegating them individually.
      for (names = name.split(eventSplitter); i < names.length; i++) {
        events = iteratee(events, names[i], callback, opts);
      }
    } else {
      // Finally, standard events.
      events = iteratee(events, name, callback, opts);
    }
    return events;
  };

  // Bind an event to a `callback` function. Passing `"all"` will bind
  // the callback to all events fired.
  Events.on = function(name, callback, context) {
    return internalOn(this, name, callback, context);
  };

  // Guard the `listening` argument from the public API.
  var internalOn = function(obj, name, callback, context, listening) {
    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {
        context: context,
        ctx: obj,
        listening: listening
    });

    if (listening) {
      var listeners = obj._listeners || (obj._listeners = {});
      listeners[listening.id] = listening;
    }

    return obj;
  };

  // Inversion-of-control versions of `on`. Tell *this* object to listen to
  // an event in another object... keeping track of what it's listening to
  // for easier unbinding later.
  Events.listenTo =  function(obj, name, callback) {
    if (!obj) return this;
    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));
    var listeningTo = this._listeningTo || (this._listeningTo = {});
    var listening = listeningTo[id];

    // This object is not listening to any other events on `obj` yet.
    // Setup the necessary references to track the listening callbacks.
    if (!listening) {
      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));
      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};
    }

    // Bind callbacks on obj, and keep track of them on listening.
    internalOn(obj, name, callback, this, listening);
    return this;
  };

  // The reducing API that adds a callback to the `events` object.
  var onApi = function(events, name, callback, options) {
    if (callback) {
      var handlers = events[name] || (events[name] = []);
      var context = options.context, ctx = options.ctx, listening = options.listening;
      if (listening) listening.count++;

      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });
    }
    return events;
  };

  // Remove one or many callbacks. If `context` is null, removes all
  // callbacks with that function. If `callback` is null, removes all
  // callbacks for the event. If `name` is null, removes all bound
  // callbacks for all events.
  Events.off =  function(name, callback, context) {
    if (!this._events) return this;
    this._events = eventsApi(offApi, this._events, name, callback, {
        context: context,
        listeners: this._listeners
    });
    return this;
  };

  // Tell this object to stop listening to either specific events ... or
  // to every object it's currently listening to.
  Events.stopListening =  function(obj, name, callback) {
    var listeningTo = this._listeningTo;
    if (!listeningTo) return this;

    var ids = obj ? [obj._listenId] : _.keys(listeningTo);

    for (var i = 0; i < ids.length; i++) {
      var listening = listeningTo[ids[i]];

      // If listening doesn't exist, this object is not currently
      // listening to obj. Break out early.
      if (!listening) break;

      listening.obj.off(name, callback, this);
    }
    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;

    return this;
  };

  // The reducing API that removes a callback from the `events` object.
  var offApi = function(events, name, callback, options) {
    if (!events) return;

    var i = 0, listening;
    var context = options.context, listeners = options.listeners;

    // Delete all events listeners and "drop" events.
    if (!name && !callback && !context) {
      var ids = _.keys(listeners);
      for (; i < ids.length; i++) {
        listening = listeners[ids[i]];
        delete listeners[listening.id];
        delete listening.listeningTo[listening.objId];
      }
      return;
    }

    var names = name ? [name] : _.keys(events);
    for (; i < names.length; i++) {
      name = names[i];
      var handlers = events[name];

      // Bail out if there are no events stored.
      if (!handlers) break;

      // Replace events if there are any remaining.  Otherwise, clean up.
      var remaining = [];
      for (var j = 0; j < handlers.length; j++) {
        var handler = handlers[j];
        if (
          callback && callback !== handler.callback &&
            callback !== handler.callback._callback ||
              context && context !== handler.context
        ) {
          remaining.push(handler);
        } else {
          listening = handler.listening;
          if (listening && --listening.count === 0) {
            delete listeners[listening.id];
            delete listening.listeningTo[listening.objId];
          }
        }
      }

      // Update tail event if the list has any events.  Otherwise, clean up.
      if (remaining.length) {
        events[name] = remaining;
      } else {
        delete events[name];
      }
    }
    if (_.size(events)) return events;
  };

  // Bind an event to only be triggered a single time. After the first time
  // the callback is invoked, its listener will be removed. If multiple events
  // are passed in using the space-separated syntax, the handler will fire
  // once for each event, not once for a combination of all events.
  Events.once =  function(name, callback, context) {
    // Map the event into a `{event: once}` object.
    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));
    return this.on(events, void 0, context);
  };

  // Inversion-of-control versions of `once`.
  Events.listenToOnce =  function(obj, name, callback) {
    // Map the event into a `{event: once}` object.
    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));
    return this.listenTo(obj, events);
  };

  // Reduces the event callbacks into a map of `{event: onceWrapper}`.
  // `offer` unbinds the `onceWrapper` after it has been called.
  var onceMap = function(map, name, callback, offer) {
    if (callback) {
      var once = map[name] = _.once(function() {
        offer(name, once);
        callback.apply(this, arguments);
      });
      once._callback = callback;
    }
    return map;
  };

  // Trigger one or many events, firing all bound callbacks. Callbacks are
  // passed the same arguments as `trigger` is, apart from the event name
  // (unless you're listening on `"all"`, which will cause your callback to
  // receive the true name of the event as the first argument).
  Events.trigger =  function(name) {
    if (!this._events) return this;

    var length = Math.max(0, arguments.length - 1);
    var args = Array(length);
    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];

    eventsApi(triggerApi, this._events, name, void 0, args);
    return this;
  };

  // Handles triggering the appropriate event callbacks.
  var triggerApi = function(objEvents, name, cb, args) {
    if (objEvents) {
      var events = objEvents[name];
      var allEvents = objEvents.all;
      if (events && allEvents) allEvents = allEvents.slice();
      if (events) triggerEvents(events, args);
      if (allEvents) triggerEvents(allEvents, [name].concat(args));
    }
    return objEvents;
  };

  // A difficult-to-believe, but optimized internal dispatch function for
  // triggering events. Tries to keep the usual cases speedy (most internal
  // Backbone events have 3 arguments).
  var triggerEvents = function(events, args) {
    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];
    switch (args.length) {
      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;
      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;
      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;
      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;
      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;
    }
  };

  // Aliases for backwards compatibility.
  Events.bind   = Events.on;
  Events.unbind = Events.off;

  // Allow the `Backbone` object to serve as a global event bus, for folks who
  // want global "pubsub" in a convenient place.
  _.extend(Backbone, Events);

  // Backbone.Model
  // --------------

  // Backbone **Models** are the basic data object in the framework --
  // frequently representing a row in a table in a database on your server.
  // A discrete chunk of data and a bunch of useful, related methods for
  // performing computations and transformations on that data.

  // Create a new model with the specified attributes. A client id (`cid`)
  // is automatically generated and assigned for you.
  var Model = Backbone.Model = function(attributes, options) {
    var attrs = attributes || {};
    options || (options = {});
    this.cid = _.uniqueId(this.cidPrefix);
    this.attributes = {};
    if (options.collection) this.collection = options.collection;
    if (options.parse) attrs = this.parse(attrs, options) || {};
    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));
    this.set(attrs, options);
    this.changed = {};
    this.initialize.apply(this, arguments);
  };

  // Attach all inheritable methods to the Model prototype.
  _.extend(Model.prototype, Events, {

    // A hash of attributes whose current and previous value differ.
    changed: null,

    // The value returned during the last failed validation.
    validationError: null,

    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
    // CouchDB users may want to set this to `"_id"`.
    idAttribute: 'id',

    // The prefix is used to create the client id which is used to identify models locally.
    // You may want to override this if you're experiencing name clashes with model ids.
    cidPrefix: 'c',

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Return a copy of the model's `attributes` object.
    toJSON: function(options) {
      return _.clone(this.attributes);
    },

    // Proxy `Backbone.sync` by default -- but override this if you need
    // custom syncing semantics for *this* particular model.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Get the value of an attribute.
    get: function(attr) {
      return this.attributes[attr];
    },

    // Get the HTML-escaped value of an attribute.
    escape: function(attr) {
      return _.escape(this.get(attr));
    },

    // Returns `true` if the attribute contains a value that is not null
    // or undefined.
    has: function(attr) {
      return this.get(attr) != null;
    },

    // Special-cased proxy to underscore's `_.matches` method.
    matches: function(attrs) {
      return !!_.iteratee(attrs, this)(this.attributes);
    },

    // Set a hash of model attributes on the object, firing `"change"`. This is
    // the core primitive operation of a model, updating the data and notifying
    // anyone who needs to know about the change in state. The heart of the beast.
    set: function(key, val, options) {
      if (key == null) return this;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      var attrs;
      if (typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options || (options = {});

      // Run validation.
      if (!this._validate(attrs, options)) return false;

      // Extract attributes and options.
      var unset      = options.unset;
      var silent     = options.silent;
      var changes    = [];
      var changing   = this._changing;
      this._changing = true;

      if (!changing) {
        this._previousAttributes = _.clone(this.attributes);
        this.changed = {};
      }

      var current = this.attributes;
      var changed = this.changed;
      var prev    = this._previousAttributes;

      // For each `set` attribute, update or delete the current value.
      for (var attr in attrs) {
        val = attrs[attr];
        if (!_.isEqual(current[attr], val)) changes.push(attr);
        if (!_.isEqual(prev[attr], val)) {
          changed[attr] = val;
        } else {
          delete changed[attr];
        }
        unset ? delete current[attr] : current[attr] = val;
      }

      // Update the `id`.
      this.id = this.get(this.idAttribute);

      // Trigger all relevant attribute changes.
      if (!silent) {
        if (changes.length) this._pending = options;
        for (var i = 0; i < changes.length; i++) {
          this.trigger('change:' + changes[i], this, current[changes[i]], options);
        }
      }

      // You might be wondering why there's a `while` loop here. Changes can
      // be recursively nested within `"change"` events.
      if (changing) return this;
      if (!silent) {
        while (this._pending) {
          options = this._pending;
          this._pending = false;
          this.trigger('change', this, options);
        }
      }
      this._pending = false;
      this._changing = false;
      return this;
    },

    // Remove an attribute from the model, firing `"change"`. `unset` is a noop
    // if the attribute doesn't exist.
    unset: function(attr, options) {
      return this.set(attr, void 0, _.extend({}, options, {unset: true}));
    },

    // Clear all attributes on the model, firing `"change"`.
    clear: function(options) {
      var attrs = {};
      for (var key in this.attributes) attrs[key] = void 0;
      return this.set(attrs, _.extend({}, options, {unset: true}));
    },

    // Determine if the model has changed since the last `"change"` event.
    // If you specify an attribute name, determine if that attribute has changed.
    hasChanged: function(attr) {
      if (attr == null) return !_.isEmpty(this.changed);
      return _.has(this.changed, attr);
    },

    // Return an object containing all the attributes that have changed, or
    // false if there are no changed attributes. Useful for determining what
    // parts of a view need to be updated and/or what attributes need to be
    // persisted to the server. Unset attributes will be set to undefined.
    // You can also pass an attributes object to diff against the model,
    // determining if there *would be* a change.
    changedAttributes: function(diff) {
      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
      var old = this._changing ? this._previousAttributes : this.attributes;
      var changed = {};
      for (var attr in diff) {
        var val = diff[attr];
        if (_.isEqual(old[attr], val)) continue;
        changed[attr] = val;
      }
      return _.size(changed) ? changed : false;
    },

    // Get the previous value of an attribute, recorded at the time the last
    // `"change"` event was fired.
    previous: function(attr) {
      if (attr == null || !this._previousAttributes) return null;
      return this._previousAttributes[attr];
    },

    // Get all of the attributes of the model at the time of the previous
    // `"change"` event.
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    // Fetch the model from the server, merging the response with the model's
    // local attributes. Any changed attributes will trigger a "change" event.
    fetch: function(options) {
      options = _.extend({parse: true}, options);
      var model = this;
      var success = options.success;
      options.success = function(resp) {
        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
        if (!model.set(serverAttrs, options)) return false;
        if (success) success.call(options.context, model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Set a hash of model attributes, and sync the model to the server.
    // If the server returns an attributes hash that differs, the model's
    // state will be `set` again.
    save: function(key, val, options) {
      // Handle both `"key", value` and `{key: value}` -style arguments.
      var attrs;
      if (key == null || typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options = _.extend({validate: true, parse: true}, options);
      var wait = options.wait;

      // If we're not waiting and attributes exist, save acts as
      // `set(attr).save(null, opts)` with validation. Otherwise, check if
      // the model will be valid when the attributes, if any, are set.
      if (attrs && !wait) {
        if (!this.set(attrs, options)) return false;
      } else {
        if (!this._validate(attrs, options)) return false;
      }

      // After a successful server-side save, the client is (optionally)
      // updated with the server-side state.
      var model = this;
      var success = options.success;
      var attributes = this.attributes;
      options.success = function(resp) {
        // Ensure attributes are restored during synchronous saves.
        model.attributes = attributes;
        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);
        if (serverAttrs && !model.set(serverAttrs, options)) return false;
        if (success) success.call(options.context, model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);

      // Set temporary attributes if `{wait: true}` to properly find new ids.
      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);

      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');
      if (method === 'patch' && !options.attrs) options.attrs = attrs;
      var xhr = this.sync(method, this, options);

      // Restore attributes.
      this.attributes = attributes;

      return xhr;
    },

    // Destroy this model on the server if it was already persisted.
    // Optimistically removes the model from its collection, if it has one.
    // If `wait: true` is passed, waits for the server to respond before removal.
    destroy: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;
      var wait = options.wait;

      var destroy = function() {
        model.stopListening();
        model.trigger('destroy', model, model.collection, options);
      };

      options.success = function(resp) {
        if (wait) destroy();
        if (success) success.call(options.context, model, resp, options);
        if (!model.isNew()) model.trigger('sync', model, resp, options);
      };

      var xhr = false;
      if (this.isNew()) {
        _.defer(options.success);
      } else {
        wrapError(this, options);
        xhr = this.sync('delete', this, options);
      }
      if (!wait) destroy();
      return xhr;
    },

    // Default URL for the model's representation on the server -- if you're
    // using Backbone's restful methods, override this to change the endpoint
    // that will be called.
    url: function() {
      var base =
        _.result(this, 'urlRoot') ||
        _.result(this.collection, 'url') ||
        urlError();
      if (this.isNew()) return base;
      var id = this.get(this.idAttribute);
      return base.replace(/[^\/]$/, '$&/') + encodeURIComponent(id);
    },

    // **parse** converts a response into the hash of attributes to be `set` on
    // the model. The default implementation is just to pass the response along.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new model with identical attributes to this one.
    clone: function() {
      return new this.constructor(this.attributes);
    },

    // A model is new if it has never been saved to the server, and lacks an id.
    isNew: function() {
      return !this.has(this.idAttribute);
    },

    // Check if the model is currently in a valid state.
    isValid: function(options) {
      return this._validate({}, _.defaults({validate: true}, options));
    },

    // Run validation against the next complete set of model attributes,
    // returning `true` if all is well. Otherwise, fire an `"invalid"` event.
    _validate: function(attrs, options) {
      if (!options.validate || !this.validate) return true;
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validationError = this.validate(attrs, options) || null;
      if (!error) return true;
      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));
      return false;
    }

  });

  // Underscore methods that we want to implement on the Model, mapped to the
  // number of arguments they take.
  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,
      omit: 0, chain: 1, isEmpty: 1 };

  // Mix in each Underscore method as a proxy to `Model#attributes`.
  addUnderscoreMethods(Model, modelMethods, 'attributes');

  // Backbone.Collection
  // -------------------

  // If models tend to represent a single row of data, a Backbone Collection is
  // more analogous to a table full of data ... or a small slice or page of that
  // table, or a collection of rows that belong together for a particular reason
  // -- all of the messages in this particular folder, all of the documents
  // belonging to this particular author, and so on. Collections maintain
  // indexes of their models, both in order, and for lookup by `id`.

  // Create a new **Collection**, perhaps to contain a specific type of `model`.
  // If a `comparator` is specified, the Collection will maintain
  // its models in sort order, as they're added and removed.
  var Collection = Backbone.Collection = function(models, options) {
    options || (options = {});
    if (options.model) this.model = options.model;
    if (options.comparator !== void 0) this.comparator = options.comparator;
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) this.reset(models, _.extend({silent: true}, options));
  };

  // Default options for `Collection#set`.
  var setOptions = {add: true, remove: true, merge: true};
  var addOptions = {add: true, remove: false};

  // Splices `insert` into `array` at index `at`.
  var splice = function(array, insert, at) {
    at = Math.min(Math.max(at, 0), array.length);
    var tail = Array(array.length - at);
    var length = insert.length;
    for (var i = 0; i < tail.length; i++) tail[i] = array[i + at];
    for (i = 0; i < length; i++) array[i + at] = insert[i];
    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];
  };

  // Define the Collection's inheritable methods.
  _.extend(Collection.prototype, Events, {

    // The default model for a collection is just a **Backbone.Model**.
    // This should be overridden in most cases.
    model: Model,

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // The JSON representation of a Collection is an array of the
    // models' attributes.
    toJSON: function(options) {
      return this.map(function(model) { return model.toJSON(options); });
    },

    // Proxy `Backbone.sync` by default.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Add a model, or list of models to the set. `models` may be Backbone
    // Models or raw JavaScript objects to be converted to Models, or any
    // combination of the two.
    add: function(models, options) {
      return this.set(models, _.extend({merge: false}, options, addOptions));
    },

    // Remove a model, or a list of models from the set.
    remove: function(models, options) {
      options = _.extend({}, options);
      var singular = !_.isArray(models);
      models = singular ? [models] : _.clone(models);
      var removed = this._removeModels(models, options);
      if (!options.silent && removed) this.trigger('update', this, options);
      return singular ? removed[0] : removed;
    },

    // Update a collection by `set`-ing a new list of models, adding new ones,
    // removing models that are no longer present, and merging models that
    // already exist in the collection, as necessary. Similar to **Model#set**,
    // the core operation for updating the data contained by the collection.
    set: function(models, options) {
      if (models == null) return;

      options = _.defaults({}, options, setOptions);
      if (options.parse && !this._isModel(models)) models = this.parse(models, options);

      var singular = !_.isArray(models);
      models = singular ? [models] : models.slice();

      var at = options.at;
      if (at != null) at = +at;
      if (at < 0) at += this.length + 1;

      var set = [];
      var toAdd = [];
      var toRemove = [];
      var modelMap = {};

      var add = options.add;
      var merge = options.merge;
      var remove = options.remove;

      var sort = false;
      var sortable = this.comparator && (at == null) && options.sort !== false;
      var sortAttr = _.isString(this.comparator) ? this.comparator : null;

      // Turn bare objects into model references, and prevent invalid models
      // from being added.
      var model;
      for (var i = 0; i < models.length; i++) {
        model = models[i];

        // If a duplicate is found, prevent it from being added and
        // optionally merge it into the existing model.
        var existing = this.get(model);
        if (existing) {
          if (merge && model !== existing) {
            var attrs = this._isModel(model) ? model.attributes : model;
            if (options.parse) attrs = existing.parse(attrs, options);
            existing.set(attrs, options);
            if (sortable && !sort) sort = existing.hasChanged(sortAttr);
          }
          if (!modelMap[existing.cid]) {
            modelMap[existing.cid] = true;
            set.push(existing);
          }
          models[i] = existing;

        // If this is a new, valid model, push it to the `toAdd` list.
        } else if (add) {
          model = models[i] = this._prepareModel(model, options);
          if (model) {
            toAdd.push(model);
            this._addReference(model, options);
            modelMap[model.cid] = true;
            set.push(model);
          }
        }
      }

      // Remove stale models.
      if (remove) {
        for (i = 0; i < this.length; i++) {
          model = this.models[i];
          if (!modelMap[model.cid]) toRemove.push(model);
        }
        if (toRemove.length) this._removeModels(toRemove, options);
      }

      // See if sorting is needed, update `length` and splice in new models.
      var orderChanged = false;
      var replace = !sortable && add && remove;
      if (set.length && replace) {
        orderChanged = this.length != set.length || _.some(this.models, function(model, index) {
          return model !== set[index];
        });
        this.models.length = 0;
        splice(this.models, set, 0);
        this.length = this.models.length;
      } else if (toAdd.length) {
        if (sortable) sort = true;
        splice(this.models, toAdd, at == null ? this.length : at);
        this.length = this.models.length;
      }

      // Silently sort the collection if appropriate.
      if (sort) this.sort({silent: true});

      // Unless silenced, it's time to fire all appropriate add/sort events.
      if (!options.silent) {
        for (i = 0; i < toAdd.length; i++) {
          if (at != null) options.index = at + i;
          model = toAdd[i];
          model.trigger('add', model, this, options);
        }
        if (sort || orderChanged) this.trigger('sort', this, options);
        if (toAdd.length || toRemove.length) this.trigger('update', this, options);
      }

      // Return the added (or merged) model (or models).
      return singular ? models[0] : models;
    },

    // When you have more items than you want to add or remove individually,
    // you can reset the entire set with a new list of models, without firing
    // any granular `add` or `remove` events. Fires `reset` when finished.
    // Useful for bulk operations and optimizations.
    reset: function(models, options) {
      options = options ? _.clone(options) : {};
      for (var i = 0; i < this.models.length; i++) {
        this._removeReference(this.models[i], options);
      }
      options.previousModels = this.models;
      this._reset();
      models = this.add(models, _.extend({silent: true}, options));
      if (!options.silent) this.trigger('reset', this, options);
      return models;
    },

    // Add a model to the end of the collection.
    push: function(model, options) {
      return this.add(model, _.extend({at: this.length}, options));
    },

    // Remove a model from the end of the collection.
    pop: function(options) {
      var model = this.at(this.length - 1);
      return this.remove(model, options);
    },

    // Add a model to the beginning of the collection.
    unshift: function(model, options) {
      return this.add(model, _.extend({at: 0}, options));
    },

    // Remove a model from the beginning of the collection.
    shift: function(options) {
      var model = this.at(0);
      return this.remove(model, options);
    },

    // Slice out a sub-array of models from the collection.
    slice: function() {
      return slice.apply(this.models, arguments);
    },

    // Get a model from the set by id.
    get: function(obj) {
      if (obj == null) return void 0;
      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);
      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];
    },

    // Get the model at the given index.
    at: function(index) {
      if (index < 0) index += this.length;
      return this.models[index];
    },

    // Return models with matching attributes. Useful for simple cases of
    // `filter`.
    where: function(attrs, first) {
      return this[first ? 'find' : 'filter'](attrs);
    },

    // Return the first model with matching attributes. Useful for simple cases
    // of `find`.
    findWhere: function(attrs) {
      return this.where(attrs, true);
    },

    // Force the collection to re-sort itself. You don't need to call this under
    // normal circumstances, as the set will maintain sort order as each item
    // is added.
    sort: function(options) {
      var comparator = this.comparator;
      if (!comparator) throw new Error('Cannot sort a set without a comparator');
      options || (options = {});

      var length = comparator.length;
      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);

      // Run sort based on type of `comparator`.
      if (length === 1 || _.isString(comparator)) {
        this.models = this.sortBy(comparator);
      } else {
        this.models.sort(comparator);
      }
      if (!options.silent) this.trigger('sort', this, options);
      return this;
    },

    // Pluck an attribute from each model in the collection.
    pluck: function(attr) {
      return _.invoke(this.models, 'get', attr);
    },

    // Fetch the default set of models for this collection, resetting the
    // collection when they arrive. If `reset: true` is passed, the response
    // data will be passed through the `reset` method instead of `set`.
    fetch: function(options) {
      options = _.extend({parse: true}, options);
      var success = options.success;
      var collection = this;
      options.success = function(resp) {
        var method = options.reset ? 'reset' : 'set';
        collection[method](resp, options);
        if (success) success.call(options.context, collection, resp, options);
        collection.trigger('sync', collection, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Create a new instance of a model in this collection. Add the model to the
    // collection immediately, unless `wait: true` is passed, in which case we
    // wait for the server to agree.
    create: function(model, options) {
      options = options ? _.clone(options) : {};
      var wait = options.wait;
      model = this._prepareModel(model, options);
      if (!model) return false;
      if (!wait) this.add(model, options);
      var collection = this;
      var success = options.success;
      options.success = function(model, resp, callbackOpts) {
        if (wait) collection.add(model, callbackOpts);
        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);
      };
      model.save(null, options);
      return model;
    },

    // **parse** converts a response into a list of models to be added to the
    // collection. The default implementation is just to pass it through.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new collection with an identical list of models as this one.
    clone: function() {
      return new this.constructor(this.models, {
        model: this.model,
        comparator: this.comparator
      });
    },

    // Define how to uniquely identify models in the collection.
    modelId: function (attrs) {
      return attrs[this.model.prototype.idAttribute || 'id'];
    },

    // Private method to reset all internal state. Called when the collection
    // is first initialized or reset.
    _reset: function() {
      this.length = 0;
      this.models = [];
      this._byId  = {};
    },

    // Prepare a hash of attributes (or other model) to be added to this
    // collection.
    _prepareModel: function(attrs, options) {
      if (this._isModel(attrs)) {
        if (!attrs.collection) attrs.collection = this;
        return attrs;
      }
      options = options ? _.clone(options) : {};
      options.collection = this;
      var model = new this.model(attrs, options);
      if (!model.validationError) return model;
      this.trigger('invalid', this, model.validationError, options);
      return false;
    },

    // Internal method called by both remove and set.
    _removeModels: function(models, options) {
      var removed = [];
      for (var i = 0; i < models.length; i++) {
        var model = this.get(models[i]);
        if (!model) continue;

        var index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;

        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }

        removed.push(model);
        this._removeReference(model, options);
      }
      return removed.length ? removed : false;
    },

    // Method for checking whether an object should be considered a model for
    // the purposes of adding to the collection.
    _isModel: function (model) {
      return model instanceof Model;
    },

    // Internal method to create a model's ties to a collection.
    _addReference: function(model, options) {
      this._byId[model.cid] = model;
      var id = this.modelId(model.attributes);
      if (id != null) this._byId[id] = model;
      model.on('all', this._onModelEvent, this);
    },

    // Internal method to sever a model's ties to a collection.
    _removeReference: function(model, options) {
      delete this._byId[model.cid];
      var id = this.modelId(model.attributes);
      if (id != null) delete this._byId[id];
      if (this === model.collection) delete model.collection;
      model.off('all', this._onModelEvent, this);
    },

    // Internal method called every time a model in the set fires an event.
    // Sets need to update their indexes when models change ids. All other
    // events simply proxy through. "add" and "remove" events that originate
    // in other collections are ignored.
    _onModelEvent: function(event, model, collection, options) {
      if ((event === 'add' || event === 'remove') && collection !== this) return;
      if (event === 'destroy') this.remove(model, options);
      if (event === 'change') {
        var prevId = this.modelId(model.previousAttributes());
        var id = this.modelId(model.attributes);
        if (prevId !== id) {
          if (prevId != null) delete this._byId[prevId];
          if (id != null) this._byId[id] = model;
        }
      }
      this.trigger.apply(this, arguments);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  // 90% of the core usefulness of Backbone Collections is actually implemented
  // right here:
  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,
      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,
      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,
      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,
      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,
      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,
      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,
      sortBy: 3, indexBy: 3};

  // Mix in each Underscore method as a proxy to `Collection#models`.
  addUnderscoreMethods(Collection, collectionMethods, 'models');

  // Backbone.View
  // -------------

  // Backbone Views are almost more convention than they are actual code. A View
  // is simply a JavaScript object that represents a logical chunk of UI in the
  // DOM. This might be a single item, an entire list, a sidebar or panel, or
  // even the surrounding frame which wraps your whole app. Defining a chunk of
  // UI as a **View** allows you to define your DOM events declaratively, without
  // having to worry about render order ... and makes it easy for the view to
  // react to specific changes in the state of your models.

  // Creating a Backbone.View creates its initial element outside of the DOM,
  // if an existing element is not provided...
  var View = Backbone.View = function(options) {
    this.cid = _.uniqueId('view');
    _.extend(this, _.pick(options, viewOptions));
    this._ensureElement();
    this.initialize.apply(this, arguments);
  };

  // Cached regex to split keys for `delegate`.
  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be set as properties.
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];

  // Set up all inheritable **Backbone.View** properties and methods.
  _.extend(View.prototype, Events, {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    // jQuery delegate for element lookup, scoped to DOM elements within the
    // current view. This should be preferred to global lookups where possible.
    $: function(selector) {
      return this.$el.find(selector);
    },

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // **render** is the core function that your view should override, in order
    // to populate its element (`this.el`), with the appropriate HTML. The
    // convention is for **render** to always return `this`.
    render: function() {
      return this;
    },

    // Remove this view by taking the element out of the DOM, and removing any
    // applicable Backbone.Events listeners.
    remove: function() {
      this._removeElement();
      this.stopListening();
      return this;
    },

    // Remove this view's element from the document and all event listeners
    // attached to it. Exposed for subclasses using an alternative DOM
    // manipulation API.
    _removeElement: function() {
      this.$el.remove();
    },

    // Change the view's element (`this.el` property) and re-delegate the
    // view's events on the new element.
    setElement: function(element) {
      this.undelegateEvents();
      this._setElement(element);
      this.delegateEvents();
      return this;
    },

    // Creates the `this.el` and `this.$el` references for this view using the
    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery
    // context or an element. Subclasses can override this to utilize an
    // alternative DOM manipulation API and are only required to set the
    // `this.el` property.
    _setElement: function(el) {
      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);
      this.el = this.$el[0];
    },

    // Set callbacks, where `this.events` is a hash of
    //
    // *{"event selector": "callback"}*
    //
    //     {
    //       'mousedown .title':  'edit',
    //       'click .button':     'save',
    //       'click .open':       function(e) { ... }
    //     }
    //
    // pairs. Callbacks will be bound to the view, with `this` set properly.
    // Uses event delegation for efficiency.
    // Omitting the selector binds the event to `this.el`.
    delegateEvents: function(events) {
      events || (events = _.result(this, 'events'));
      if (!events) return this;
      this.undelegateEvents();
      for (var key in events) {
        var method = events[key];
        if (!_.isFunction(method)) method = this[method];
        if (!method) continue;
        var match = key.match(delegateEventSplitter);
        this.delegate(match[1], match[2], _.bind(method, this));
      }
      return this;
    },

    // Add a single event listener to the view's element (or a child element
    // using `selector`). This only works for delegate-able events: not `focus`,
    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.
    delegate: function(eventName, selector, listener) {
      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);
      return this;
    },

    // Clears all callbacks previously bound to the view by `delegateEvents`.
    // You usually don't need to use this, but may wish to if you have multiple
    // Backbone views attached to the same DOM element.
    undelegateEvents: function() {
      if (this.$el) this.$el.off('.delegateEvents' + this.cid);
      return this;
    },

    // A finer-grained `undelegateEvents` for removing a single delegated event.
    // `selector` and `listener` are both optional.
    undelegate: function(eventName, selector, listener) {
      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);
      return this;
    },

    // Produces a DOM element to be assigned to your view. Exposed for
    // subclasses using an alternative DOM manipulation API.
    _createElement: function(tagName) {
      return document.createElement(tagName);
    },

    // Ensure that the View has a DOM element to render into.
    // If `this.el` is a string, pass it through `$()`, take the first
    // matching element, and re-assign it to `el`. Otherwise, create
    // an element from the `id`, `className` and `tagName` properties.
    _ensureElement: function() {
      if (!this.el) {
        var attrs = _.extend({}, _.result(this, 'attributes'));
        if (this.id) attrs.id = _.result(this, 'id');
        if (this.className) attrs['class'] = _.result(this, 'className');
        this.setElement(this._createElement(_.result(this, 'tagName')));
        this._setAttributes(attrs);
      } else {
        this.setElement(_.result(this, 'el'));
      }
    },

    // Set attributes from a hash on this view's element.  Exposed for
    // subclasses using an alternative DOM manipulation API.
    _setAttributes: function(attributes) {
      this.$el.attr(attributes);
    }

  });

  // Backbone.sync
  // -------------

  // Override this function to change the manner in which Backbone persists
  // models to the server. You will be passed the type of request, and the
  // model in question. By default, makes a RESTful Ajax request
  // to the model's `url()`. Some possible customizations could be:
  //
  // * Use `setTimeout` to batch rapid-fire updates into a single request.
  // * Send up the models as XML instead of JSON.
  // * Persist models via WebSockets instead of Ajax.
  //
  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
  // as `POST`, with a `_method` parameter containing the true HTTP method,
  // as well as all requests with the body as `application/x-www-form-urlencoded`
  // instead of `application/json` with the model in a param named `model`.
  // Useful when interfacing with server-side languages like **PHP** that make
  // it difficult to read the body of `PUT` requests.
  Backbone.sync = function(method, model, options) {
    var type = methodMap[method];

    // Default options, unless specified.
    _.defaults(options || (options = {}), {
      emulateHTTP: Backbone.emulateHTTP,
      emulateJSON: Backbone.emulateJSON
    });

    // Default JSON-request options.
    var params = {type: type, dataType: 'json'};

    // Ensure that we have a URL.
    if (!options.url) {
      params.url = _.result(model, 'url') || urlError();
    }

    // Ensure that we have the appropriate request data.
    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {
      params.contentType = 'application/json';
      params.data = JSON.stringify(options.attrs || model.toJSON(options));
    }

    // For older servers, emulate JSON by encoding the request into an HTML-form.
    if (options.emulateJSON) {
      params.contentType = 'application/x-www-form-urlencoded';
      params.data = params.data ? {model: params.data} : {};
    }

    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
    // And an `X-HTTP-Method-Override` header.
    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {
      params.type = 'POST';
      if (options.emulateJSON) params.data._method = type;
      var beforeSend = options.beforeSend;
      options.beforeSend = function(xhr) {
        xhr.setRequestHeader('X-HTTP-Method-Override', type);
        if (beforeSend) return beforeSend.apply(this, arguments);
      };
    }

    // Don't process data on a non-GET request.
    if (params.type !== 'GET' && !options.emulateJSON) {
      params.processData = false;
    }

    // Pass along `textStatus` and `errorThrown` from jQuery.
    var error = options.error;
    options.error = function(xhr, textStatus, errorThrown) {
      options.textStatus = textStatus;
      options.errorThrown = errorThrown;
      if (error) error.call(options.context, xhr, textStatus, errorThrown);
    };

    // Make the request, allowing the user to override any Ajax options.
    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));
    model.trigger('request', model, xhr, options);
    return xhr;
  };

  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
  var methodMap = {
    'create': 'POST',
    'update': 'PUT',
    'patch':  'PATCH',
    'delete': 'DELETE',
    'read':   'GET'
  };

  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
  // Override this if you'd like to use a different library.
  Backbone.ajax = function() {
    return Backbone.$.ajax.apply(Backbone.$, arguments);
  };

  // Backbone.Router
  // ---------------

  // Routers map faux-URLs to actions, and fire events when routes are
  // matched. Creating a new one sets its `routes` hash, if not set statically.
  var Router = Backbone.Router = function(options) {
    options || (options = {});
    if (options.routes) this.routes = options.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var optionalParam = /\((.*?)\)/g;
  var namedParam    = /(\(\?)?:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;

  // Set up all inheritable **Backbone.Router** properties and methods.
  _.extend(Router.prototype, Events, {

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Manually bind a single named route to a callback. For example:
    //
    //     this.route('search/:query/p:num', 'search', function(query, num) {
    //       ...
    //     });
    //
    route: function(route, name, callback) {
      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
      if (_.isFunction(name)) {
        callback = name;
        name = '';
      }
      if (!callback) callback = this[name];
      var router = this;
      Backbone.history.route(route, function(fragment) {
        var args = router._extractParameters(route, fragment);
        if (router.execute(callback, args, name) !== false) {
          router.trigger.apply(router, ['route:' + name].concat(args));
          router.trigger('route', name, args);
          Backbone.history.trigger('route', router, name, args);
        }
      });
      return this;
    },

    // Execute a route handler with the provided parameters.  This is an
    // excellent place to do pre-route setup or post-route cleanup.
    execute: function(callback, args, name) {
      if (callback) callback.apply(this, args);
    },

    // Simple proxy to `Backbone.history` to save a fragment into the history.
    navigate: function(fragment, options) {
      Backbone.history.navigate(fragment, options);
      return this;
    },

    // Bind all defined routes to `Backbone.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) return;
      this.routes = _.result(this, 'routes');
      var route, routes = _.keys(this.routes);
      while ((route = routes.pop()) != null) {
        this.route(route, this.routes[route]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(optionalParam, '(?:$1)?')
                   .replace(namedParam, function(match, optional) {
                     return optional ? match : '([^/?]+)';
                   })
                   .replace(splatParam, '([^?]*?)');
      return new RegExp('^' + route + '(?:\\?([\\s\\S]*))?$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted decoded parameters. Empty or unmatched parameters will be
    // treated as `null` to normalize cross-browser behavior.
    _extractParameters: function(route, fragment) {
      var params = route.exec(fragment).slice(1);
      return _.map(params, function(param, i) {
        // Don't decode the search params.
        if (i === params.length - 1) return param || null;
        return param ? decodeURIComponent(param) : null;
      });
    }

  });

  // Backbone.History
  // ----------------

  // Handles cross-browser history management, based on either
  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or
  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)
  // and URL fragments. If the browser supports neither (old IE, natch),
  // falls back to polling.
  var History = Backbone.History = function() {
    this.handlers = [];
    this.checkUrl = _.bind(this.checkUrl, this);

    // Ensure that `History` can be used outside of the browser.
    if (typeof window !== 'undefined') {
      this.location = window.location;
      this.history = window.history;
    }
  };

  // Cached regex for stripping a leading hash/slash and trailing space.
  var routeStripper = /^[#\/]|\s+$/g;

  // Cached regex for stripping leading and trailing slashes.
  var rootStripper = /^\/+|\/+$/g;

  // Cached regex for stripping urls of hash.
  var pathStripper = /#.*$/;

  // Has the history handling already been started?
  History.started = false;

  // Set up all inheritable **Backbone.History** properties and methods.
  _.extend(History.prototype, Events, {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Are we at the app root?
    atRoot: function() {
      var path = this.location.pathname.replace(/[^\/]$/, '$&/');
      return path === this.root && !this.getSearch();
    },

    // Does the pathname match the root?
    matchRoot: function() {
      var path = this.decodeFragment(this.location.pathname);
      var root = path.slice(0, this.root.length - 1) + '/';
      return root === this.root;
    },

    // Unicode characters in `location.pathname` are percent encoded so they're
    // decoded for comparison. `%25` should not be decoded since it may be part
    // of an encoded parameter.
    decodeFragment: function(fragment) {
      return decodeURI(fragment.replace(/%25/g, '%2525'));
    },

    // In IE6, the hash fragment and search params are incorrect if the
    // fragment contains `?`.
    getSearch: function() {
      var match = this.location.href.replace(/#.*/, '').match(/\?.+/);
      return match ? match[0] : '';
    },

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(window) {
      var match = (window || this).location.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the pathname and search params, without the root.
    getPath: function() {
      var path = this.decodeFragment(
        this.location.pathname + this.getSearch()
      ).slice(this.root.length - 1);
      return path.charAt(0) === '/' ? path.slice(1) : path;
    },

    // Get the cross-browser normalized URL fragment from the path or hash.
    getFragment: function(fragment) {
      if (fragment == null) {
        if (this._usePushState || !this._wantsHashChange) {
          fragment = this.getPath();
        } else {
          fragment = this.getHash();
        }
      }
      return fragment.replace(routeStripper, '');
    },

    // Start the hash change handling, returning `true` if the current URL matches
    // an existing route, and `false` otherwise.
    start: function(options) {
      if (History.started) throw new Error('Backbone.history has already been started');
      History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options          = _.extend({root: '/'}, this.options, options);
      this.root             = this.options.root;
      this._wantsHashChange = this.options.hashChange !== false;
      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);
      this._useHashChange   = this._wantsHashChange && this._hasHashChange;
      this._wantsPushState  = !!this.options.pushState;
      this._hasPushState    = !!(this.history && this.history.pushState);
      this._usePushState    = this._wantsPushState && this._hasPushState;
      this.fragment         = this.getFragment();

      // Normalize root to always include a leading and trailing slash.
      this.root = ('/' + this.root + '/').replace(rootStripper, '/');

      // Transition from hashChange to pushState or vice versa if both are
      // requested.
      if (this._wantsHashChange && this._wantsPushState) {

        // If we've started off with a route from a `pushState`-enabled
        // browser, but we're currently in a browser that doesn't support it...
        if (!this._hasPushState && !this.atRoot()) {
          var root = this.root.slice(0, -1) || '/';
          this.location.replace(root + '#' + this.getPath());
          // Return immediately as browser will do redirect to new url
          return true;

        // Or if we've started out with a hash-based route, but we're currently
        // in a browser where it could be `pushState`-based instead...
        } else if (this._hasPushState && this.atRoot()) {
          this.navigate(this.getHash(), {replace: true});
        }

      }

      // Proxy an iframe to handle location events if the browser doesn't
      // support the `hashchange` event, HTML5 history, or the user wants
      // `hashChange` but not `pushState`.
      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
        this.iframe = document.createElement('iframe');
        this.iframe.src = 'javascript:0';
        this.iframe.style.display = 'none';
        this.iframe.tabIndex = -1;
        var body = document.body;
        // Using `appendChild` will throw on IE < 9 if the document is not ready.
        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;
        iWindow.document.open();
        iWindow.document.close();
        iWindow.location.hash = '#' + this.fragment;
      }

      // Add a cross-platform `addEventListener` shim for older browsers.
      var addEventListener = window.addEventListener || function (eventName, listener) {
        return attachEvent('on' + eventName, listener);
      };

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._usePushState) {
        addEventListener('popstate', this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        addEventListener('hashchange', this.checkUrl, false);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }

      if (!this.options.silent) return this.loadUrl();
    },

    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      // Add a cross-platform `removeEventListener` shim for older browsers.
      var removeEventListener = window.removeEventListener || function (eventName, listener) {
        return detachEvent('on' + eventName, listener);
      };

      // Remove window listeners.
      if (this._usePushState) {
        removeEventListener('popstate', this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        removeEventListener('hashchange', this.checkUrl, false);
      }

      // Clean up the iframe if necessary.
      if (this.iframe) {
        document.body.removeChild(this.iframe);
        this.iframe = null;
      }

      // Some environments will throw when clearing an undefined interval.
      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);
      History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();

      // If the user pressed the back button, the iframe's hash will have
      // changed and we should use that for comparison.
      if (current === this.fragment && this.iframe) {
        current = this.getHash(this.iframe.contentWindow);
      }

      if (current === this.fragment) return false;
      if (this.iframe) this.navigate(current);
      this.loadUrl();
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragment) {
      // If the root doesn't match, no routes can match either.
      if (!this.matchRoot()) return false;
      fragment = this.fragment = this.getFragment(fragment);
      return _.some(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the history.
    navigate: function(fragment, options) {
      if (!History.started) return false;
      if (!options || options === true) options = {trigger: !!options};

      // Normalize the fragment.
      fragment = this.getFragment(fragment || '');

      // Don't include a trailing slash on the root.
      var root = this.root;
      if (fragment === '' || fragment.charAt(0) === '?') {
        root = root.slice(0, -1) || '/';
      }
      var url = root + fragment;

      // Strip the hash and decode for matching.
      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));

      if (this.fragment === fragment) return;
      this.fragment = fragment;

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._usePushState) {
        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this._updateHash(this.location, fragment, options.replace);
        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {
          var iWindow = this.iframe.contentWindow;

          // Opening and closing the iframe tricks IE7 and earlier to push a
          // history entry on hash-tag change.  When replace is true, we don't
          // want this.
          if (!options.replace) {
            iWindow.document.open();
            iWindow.document.close();
          }

          this._updateHash(iWindow.location, fragment, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        return this.location.assign(url);
      }
      if (options.trigger) return this.loadUrl(fragment);
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        var href = location.href.replace(/(javascript:|#).*$/, '');
        location.replace(href + '#' + fragment);
      } else {
        // Some browsers require that `hash` contains a leading #.
        location.hash = '#' + fragment;
      }
    }

  });

  // Create the default Backbone.history.
  Backbone.history = new History;

  // Helpers
  // -------

  // Helper function to correctly set up the prototype chain for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var extend = function(protoProps, staticProps) {
    var parent = this;
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent constructor.
    if (protoProps && _.has(protoProps, 'constructor')) {
      child = protoProps.constructor;
    } else {
      child = function(){ return parent.apply(this, arguments); };
    }

    // Add static properties to the constructor function, if supplied.
    _.extend(child, parent, staticProps);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent` constructor function.
    var Surrogate = function(){ this.constructor = child; };
    Surrogate.prototype = parent.prototype;
    child.prototype = new Surrogate;

    // Add prototype properties (instance properties) to the subclass,
    // if supplied.
    if (protoProps) _.extend(child.prototype, protoProps);

    // Set a convenience property in case the parent's prototype is needed
    // later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Set up inheritance for the model, collection, router, view and history.
  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;

  // Throw an error when a URL is needed, and none is supplied.
  var urlError = function() {
    throw new Error('A "url" property or function must be specified');
  };

  // Wrap an optional error callback with a fallback error event.
  var wrapError = function(model, options) {
    var error = options.error;
    options.error = function(resp) {
      if (error) error.call(options.context, model, resp, options);
      model.trigger('error', model, resp, options);
    };
  };

  return Backbone;

}));

define('utils',['require','exports','module','jquery','underscore'],function (require, exports, module) {
    var $ = require('jquery');
    var _ = require('underscore');

    jQuery.maskScreen = function () {
        $('body').append('<div class="mask"></div>')
    }

    jQuery.removeScreen = function (time) {
        if ($('.mask').length > 0) {
            setTimeout(function () {
                $('.mask').remove();
            }, time);
        }
    }

    //toast
    jQuery.jtoast = function (text) {
        $('.jtoast').remove();

        var $j = $('<div class="jtoast"><span>' + text + '</span></div>');
        $('body').append($j);

        var time, pos;
        var _LONG = 5 * 1000;
        var _SHORT = 3 * 1000;
        var _TOP = 'top';
        var _MIDDLE = 'middle';
        var _BOTTOM = 'bottom';

        //默认参数
        var options = {
            duration: 'SHORT',
            position: 'MIDDLE',
            background: ''
        }

        //持续时间
        if (arguments[1]) {
            options.duration = arguments[1];
        }

        //展示位置
        if (arguments[2]) {
            options.position = arguments[2];
        }

        //颜色
        if (arguments[3]) {
            options.background = arguments[3];
        }

        $j.addClass(options.background);

        if (typeof options.position == 'string') {
            switch (options.position) {
                case 'TOP':
                    pos = _TOP;
                    break;
                case 'MIDDLE':
                    pos = _MIDDLE;
                    break;
                case 'BOTTOM':
                    pos = _BOTTOM;
                    break;
            }
        } else {
            console.warn('参数错误');
            return;
        }
        $j.addClass(pos);

        if (typeof options.duration == 'string') {
            switch (options.duration) {
                case 'LONG':
                    time = _LONG;
                    break;
                case 'SHORT':
                    time = _SHORT;
                    break;
            }
        } else if (options.duration == 'number') {
            time = duration * 1000;
        }

        $j.addClass('in');
        setTimeout(function () {
            $j.addClass('out');
            setTimeout(function () {
                $j.remove();
            }, 300);
        }, time);
    }

    //format图文消息
    jQuery.formatText = function (content) {
        var $content = $(content);

        var new_content = '';
        $.each($content, function (i, v) {
            $(v).css({
                'font-size': '1em',
                'line-height': '1.8',
                'color': '#555'
            });

            $(v).find('span').css({
                'font-size': '1em',
                'line-height': '1.8',
                'color': '#555'
            });

            $(v).find('img').css({
                width: '100%'
            });

            $(v).find('img').parent().css({
                'text-indent': 0,
                'margin': 0,
                'padding': 0,
                'max-width': '100%'
            });

            $(v).find('a').prop('href', 'javascript:;');

            new_content += $(v).get(0).outerHTML;
        });

        return new_content;
    }

    //加载条
    jQuery.fn.loadingMask = function (option, retryCallback) {
        // 定义插件构造类
        function LoadingMask($el, options) {
            this.$el = $el;
            this.options = options;
            this.$mask = $('<div class="loading-mask"></div>');
            this.$content = $('<div class="inner-text"></div>');
            this.$ball = $('<div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>');

            this.init();
        }
        LoadingMask.prototype = {
            init: function () {
                var maskDefaultCss = {
                    // top: 0,
                    // left: 0,
                    // width: orgiWidth,
                    // height: orgiHeight
                };

                this.$el.append(this.$mask);
                this.$content.html(this.$ball).css(this.options.contentCss);

                this.$ball.css(this.options.ballCss);

                setTimeout(_.bind(function () {
                    this.$mask.html(this.$content).css($.extend({}, maskDefaultCss, this.options.maskCss));
                }, this), 100);
            },
            hide: function () {
                setTimeout(_.bind(function () {
                    this.$mask.css({
                        opacity: 0
                    }).remove();
                    this.$el.removeData('loadingMask');
                }, this), 200);
            }
        };

        // 插件真正入口
        var $this = $(this);
        var plugin = $this.data('loadingMask');
        var options = $.extend({}, $.fn.loadingMask.defaults, typeof option == 'object' && option);

        if (!plugin) { // 没有绑定插件的情况下, 初始化一次插件
            plugin = new LoadingMask($this, options);
            $this.data('loadingMask', plugin);
        }

        if (typeof option == 'string') { // 直接调用插件方法
            plugin[option].apply(plugin, jQuery.makeArray(arguments).slice(1));
        }
    };

    // 插件默认配置
    jQuery.fn.loadingMask.defaults = {
        maskCss: {},
        content: '',
        contentCss: {},
        maskClass: '',
        ballCss: {}
    };

    /**
     * 录音键
     * 聊天室限定
     */
    jQuery.fn.recordVoice = function (option, retryCallback) {
        // 定义插件构造类
        function RecordVoid($el, options) {
            this.$el = $el;
            this.options = options;

            this.init();
        }
        RecordVoid.prototype = {
            refresh: function () {
                //重新初始化
                $('.voice-mask p').html('正在录音');
                $('.voice-mask').hide(); //隐藏遮罩层
                clearInterval(this.count_interval); //清除时间循环
                this.initArg();  //重新初始化参数
            },
            initArg: function () {
                this.start_p = 0;   //点击初始位移
                this.is_cancel = false; //是否选择取消录音操作
                this.cancel_limit = 100;    //取消录音位移
                this.record_time = 30;   //最大录音时长
                this.record_count_time = 0; //录音计时
                this.count_interval = null; //计时器
                this.record_end = 1;    //是否录音完成
            },
            init: function () {
                this.initArg();

                /**
                 * 确认用户权限打开
                 */
                if (window.cordova) {
                    this.record_end = 0;
                    window.plugins.audioRecorderAPI.record(_.bind(function (msg) {
                        this.record_end = 1;
                        // alert(msg);
                        console.log('默认开启录音');
                    }, this), _.bind(function (msg) {
                        this.record_end = 1;
                        console.log('默认开启录音');
                    }, this), 1);
                }

                /**
                 * 向上位移超过cancel_limit,可取消录音
                 */
                this.$el.on('touchstart', _.bind(function (e) {
                    if (!this.record_end) {
                        return;
                    }

                    this.start_p = $.getTouchPosition(e);

                    $('.voice-mask').show();
                    /**
                     * 开始录音
                     * 开启录音计时
                     */
                    this.record_end = 0;

                    this.count_interval = setInterval(_.bind(function () {
                        this.record_count_time++;
                        console.log(this.record_count_time);

                        //当时长等于指定录音时长
                        if (this.record_count_time == this.record_time) {
                            this.$el.trigger('touchend');
                        }
                    }, this), 1000);

                    if (window.cordova) {
                        window.plugins.audioRecorderAPI.record(_.bind(function (msg) {
                            // this.options.success(msg);
                            // this.refresh();
                            console.log('too long');
                        }, this), _.bind(function (msg) {
                            this.options.error(msg);
                            this.refresh();
                        }, this), 1000);
                    } else {
                        console.log('开始录音');
                    }
                }, this));

                this.$el.on('touchmove', _.bind(function (e) {
                    var p = $.getTouchPosition(e);
                    var diff = this.start_p.y - p.y;

                    if (diff > this.cancel_limit) {
                        this.is_cancel = true;
                        $('.voice-mask p').html('松开手指，取消发送');
                    } else {
                        this.is_cancel = false;
                        $('.voice-mask p').html('正在录音');
                    }

                    e.preventDefault();
                }, this), false);

                this.$el.on('touchend', _.bind(function () {
                    if (this.record_end) {
                        return;
                    }

                    /**
                     * 录音时间太短不做发送处理
                     */
                    if (this.record_count_time < 1) {
                        if (window.cordova) {
                            window.plugins.audioRecorderAPI.stop(function (msg) {
                                cosnole.log('cancelok: ' + msg);
                            }, function (msg) {
                                console.log('cancelerror: ' + msg);
                            });
                        }

                        $.toast('录音时间太短', 'cancel');
                        this.refresh();
                        return;
                    }

                    /**
                     * 准备发送处理
                     */
                    if (this.is_cancel) {
                        //取消录音
                        if (window.cordova) {
                            window.plugins.audioRecorderAPI.stop(function (msg) {
                                cosnole.log('cancelok: ' + msg);
                            }, function (msg) {
                                console.log('cancelerror: ' + msg);
                            });
                        } else {
                            console.log('取消录音');
                        }
                    } else {
                        //成功录音
                        if (window.cordova) {
                            window.plugins.audioRecorderAPI.stop(_.bind(function (msg) {
                                this.options.success(msg);
                            }, this), _.bind(function (msg) {
                                this.options.error(msg);
                            }, this));
                        } else {
                            this.options.success('测试url');
                        }
                    }

                    this.refresh();

                }, this));
            }
        };

        // 插件真正入口
        var $this = $(this);
        var plugin = $this.data('recordVoice');
        var options = $.extend({}, $.fn.recordVoice.defaults, typeof option == 'object' && option);

        if (!plugin) { // 没有绑定插件的情况下, 初始化一次插件
            plugin = new RecordVoid($this, options);
            $this.data('recordVoice', plugin);
        }

        if (typeof option == 'string') { // 直接调用插件方法
            plugin[option].apply(plugin, jQuery.makeArray(arguments).slice(1));
        }
    };

    // 插件默认配置
    jQuery.fn.recordVoice.defaults = {
        success: $.noop,
        stop: $.noop,
        error: $.noop
    };

    jQuery.updateApp = function (msg, downloadFn) {
        //安卓机指定
        if (window.cordova && device.platform != 'Android') {
            return;
        }

        if ($('.update-app').length <= 0) {
            var msg_str = '';

            if(msg){
                var msg_arr = msg.split('\n');
                $.each(msg_arr, function(i,v){
                    msg_str += '<p>'+v+'</p>'
                });
            }
            
            var html = [
                '<div class="updateMask update-app">',
                '<div class="updatePanel">',
                '<div class="updateTitle text-center">更新提示</div>',
                '<div class="updateContentWrapper">',
                msg_str,
                '</div>',
                '<div class="updateAction">',
                '<div class="font-blue update-app-download">下载</div>',
                '<div class="update-app-close">关闭</div>',
                '</div>',
                '</div>',
                '</div>'
            ];

            var $dom = $(html.join(''));

            $('body').append($dom);

            $dom.find('.update-app-download').on('tap', function () {
                //下载方法
                downloadFn();
                $dom.remove();
            });

            $dom.find('.update-app-close').on('tap', function () {
                $dom.remove();
            });
        }
    }

    /**
     * 捕捉错误
     */
    function catchError(e) {
        /*
            EvalError: raised when an error occurs executing code in eval()  
            RangeError: raised when a numeric variable or parameter is outside of its valid range  
            ReferenceError: raised when de-referencing an invalid reference  
            SyntaxError: raised when a syntax error occurs while parsing code in eval()  
            TypeError: raised when a variable or parameter is not a valid type  
            URIError: raised when encodeURI() or decodeURI() are passed invalid parameters  
        */

        var str = ('【页面发生错误】' + e.name + ": " + e.message);

        console.log(str);
        if (e instanceof EvalError) {
            console.log('raised when an error occurs executing code in eval()');
        } else if (e instanceof RangeError) {
            console.log('raised when a numeric variable or parameter is outside of its valid range');
        } else if (e instanceof ReferenceError) {
            console.log('raised when de-referencing an invalid reference');
        } else if (e instanceof SyntaxError) {
            console.log('raised when a syntax error occurs while parsing code in eval()');
        } else if (e instanceof TypeError) {
            console.log('raised when a variable or parameter is not a valid type');
        } else if (e instanceof URIError) {
            console.log('raised when encodeURI() or decodeURI() are passed invalid parameters');
        } else {
            console.log('Error');
        }

        return str;
    }

    /**
	 * 计算字符数目
	 **/
    function getStrBytesLength(str) {
        var bytesCount = 0;
        for (var i = 0; i < str.length; i++) {
            var c = str.charAt(i);
            if (/^[\u0000-\u00ff]$/.test(c)) { //匹配双字节
                bytesCount += 1;
            } else {
                bytesCount += 2;
            }
        }
        return bytesCount;
    }

    /**
     * 转换日期
     */
    function formatDateTime(stamp) {
        var now = new Date(stamp);
        var yy = now.getFullYear();      //年
        var mm = now.getMonth() + 1;     //月
        var dd = now.getDate();          //日
        var hh = now.getHours();         //时
        var ii = now.getMinutes();       //分
        var ss = now.getSeconds();       //秒

        var clock = yy + "-";
        if (mm < 10) clock += "0";
        clock += mm + "-";
        if (dd < 10) clock += "0";
        clock += dd + " ";
        if (hh < 10) clock += "0";
        clock += hh + ":";
        if (ii < 10) clock += "0";
        clock += ii + ":";
        if (ss < 10) clock += "0";
        clock += ss;
        return clock;
    }

    /**
     * 倒计时
     */
    function formatTimeLengthSimple(length) {
        var timer = ['00', '00', '00'];

        var h = Math.floor(length / 3600);
        if (h) {
            var hh = h;
            if (h < 10) {
                hh = '0' + h;
            }

            timer[0] = hh;
            length = length - h * 3600;
        }

        if (length) {
            var m = Math.floor(length / 60);
            if (m) {
                var mm = m;
                if (m < 10) {
                    mm = '0' + m;
                }

                timer[1] = mm;
                length = length - m * 60;
            }
        }

        if (length) {
            var s = length;
            var ss = s;
            if (s < 10) {
                ss = '0' + s;
            }

            timer[2] = ss;
        }

        if (!h) {
            str = timer[1] + ':' + timer[2];
        } else {
            str = timer.join(':');
        }

        // console.log(str);
        return str;
    }

    return {
        catchError: catchError,
        getStrBytesLength: getStrBytesLength,
        formatDateTime: formatDateTime,
        formatTimeLengthSimple: formatTimeLengthSimple
    }

});

//Touch events are from zepto/touch.js
(function($) {
    var touch = {},
    touchTimeout;

    function parentIfText(node) {
        return 'tagName' in node ? node: node.parentNode;
    }

    function swipeDirection(x1, x2, y1, y2) {
        var xDelta = Math.abs(x1 - x2),
        yDelta = Math.abs(y1 - y2);
        if (xDelta >= yDelta) {
            return (x1 - x2 > 0 ? 'Left': 'Right');
        } else {
            return (y1 - y2 > 0 ? 'Up': 'Down');
        }
    }

    var longTapDelay = 750;
    function longTap() {
        if (touch.last && (Date.now() - touch.last >= longTapDelay)) {
            touch.el.trigger('longTap');
            touch = {};
        }
    }
    $(document).ready(function() {
        $(document.body).bind('touchstart', function(e) {
            e = e.originalEvent; 
            var now = Date.now(),
            delta = now - (touch.last || now);
            touch.el = $(parentIfText(e.touches[0].target));
            touchTimeout && clearTimeout(touchTimeout);
            touch.x1 = e.touches[0].pageX;
            touch.y1 = e.touches[0].pageY;
            if (delta > 0 && delta <= 250) touch.isDoubleTap = true;
            touch.last = now;
            setTimeout(longTap, longTapDelay);
        }).bind('touchmove', function(e) {
            e = e.originalEvent; 
            touch.x2 = e.touches[0].pageX;
            touch.y2 = e.touches[0].pageY;
        }).bind('touchend', function(e) {
            e = e.originalEvent; 
            if (!touch.el) {
                touch = {};
                return;
            }
            if (touch.isDoubleTap) {
                touch.el.trigger('doubleTap');
                touch = {};
            } else if (Math.abs(touch.x1 - touch.x2) > 5 || Math.abs(touch.y1 - touch.y2) > 5) { (Math.abs(touch.x1 - touch.x2) > 30 || Math.abs(touch.y1 - touch.y2) > 30) && touch.el.trigger('swipe') && touch.el.trigger('swipe' + (swipeDirection(touch.x1, touch.x2, touch.y1, touch.y2)));
            touch.x1 = touch.x2 = touch.y1 = touch.y2 = touch.last = 0;
            touch = {};
            } else if ('last' in touch) {
                touch.el.trigger('tap');
                touchTimeout = setTimeout(function() {
                    touchTimeout = null;
                    if (touch.el) touch.el.trigger('singleTap');
                    touch = {};
                },
                250);
            }
        }).bind('touchcancel', function() {
            touch = {}
        });
    });

    ['swipe', 'swipeLeft', 'swipeRight', 'swipeUp', 'swipeDown', 'doubleTap', 'tap', 'singleTap', 'longTap'].forEach(function(m) {
        $.fn[m] = function(callback) {
            return this.bind(m, callback)
        }
    });
})(jQuery);

(function($) {
    redirectMouseToTouch = function(type, originalEvent) {

        //stop propagation, and remove default behavior for everything but INPUT, TEXTAREA & SELECT fields
        // originalEvent.stopPropagation();
        if (originalEvent.target.tagName.toUpperCase().indexOf("SELECT") == - 1 && originalEvent.target.tagName.toUpperCase().indexOf("TEXTAREA") == - 1 && originalEvent.target.tagName.toUpperCase().indexOf("INPUT") == - 1) //SELECT, TEXTAREA & INPUT
            {
                originalEvent.stopPropagation();
            }

            var touchevt = document.createEvent("Event");
            touchevt.initEvent(type, true, true);
            touchevt.touches = new Array();
            touchevt.touches[0] = new Object();
            touchevt.touches[0].pageX = originalEvent.pageX;
            touchevt.touches[0].pageY = originalEvent.pageY;
            touchevt.touches[0].target = originalEvent.target;
            touchevt.changedTouches = touchevt.touches; //for jqtouch
            touchevt.targetTouches = touchevt.touches; //for jqtouch
            touchevt.target = originalEvent.target;
            originalEvent.target.dispatchEvent(touchevt);
            return touchevt;
    }

    emulateTouchEvents = function() {
        var ee = document;

        document.mouseMoving = false;

        document.addEventListener("mousedown", function(e) {
            try {
                this.mouseMoving = true;
                var touchevt = redirectMouseToTouch("touchstart", e);
                if (document.ontouchstart) document.ontouchstart(touchevt);
                if (e.target.ontouchstart) e.target.ontouchstart(e);

            } catch(e) {}
        });

        //ee[x].onmouseup=function(e)
        document.addEventListener("mouseup", function(e) {
            try {
                this.mouseMoving = false;

                var touchevt = redirectMouseToTouch("touchend", e);
                if (document.ontouchend) document.ontouchend(touchevt);
                if (e.target.ontouchend) e.target.ontouchend(e);
            }
            catch(e) {}
        });
        //ee[x].onmousemove=function(e)
        document.addEventListener("mousemove", function(e) {
            try {
                if (!this.mouseMoving) return;
                var touchevt = redirectMouseToTouch("touchmove", e);
                if (document.ontouchmove) document.ontouchmove(touchevt);
                if (e.target.ontouchmove) e.target.ontouchmove(e);
            }
            catch(e) {}
        });
    }
    if(!((window.DocumentTouch && document instanceof DocumentTouch) || 'ontouchstart' in window)){
        emulateTouchEvents();
        window.addEventListener("resize", function() {
            var touchevt = document.createEvent("Event");
            touchevt.initEvent("orientationchange", true, true);
            document.dispatchEvent(touchevt);
        },
        false);
    }
})(jQuery);

define("touch", ["jquery"], function(){});

/** 
* jQuery WeUI V0.8.2 
* By 言川
* http://lihongxun945.github.io/jquery-weui/
 */
/* global $:true */
/* global WebKitCSSMatrix:true */

(function($) {
  "use strict";

  $.fn.transitionEnd = function(callback) {
    var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],
      i, dom = this;

    function fireCallBack(e) {
      /*jshint validthis:true */
      if (e.target !== this) return;
      callback.call(this, e);
      for (i = 0; i < events.length; i++) {
        dom.off(events[i], fireCallBack);
      }
    }
    if (callback) {
      for (i = 0; i < events.length; i++) {
        dom.on(events[i], fireCallBack);
      }
    }
    return this;
  };

  $.support = (function() {
    var support = {
      touch: !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch)
    };
    return support;
  })();

  $.touchEvents = {
    start: $.support.touch ? 'touchstart' : 'mousedown',
    move: $.support.touch ? 'touchmove' : 'mousemove',
    end: $.support.touch ? 'touchend' : 'mouseup'
  };

  $.getTouchPosition = function(e) {
    e = e.originalEvent || e; //jquery wrap the originevent
    if(e.type === 'touchstart' || e.type === 'touchmove' || e.type === 'touchend') {
      return {
        x: e.targetTouches[0].pageX,
        y: e.targetTouches[0].pageY
      };
    } else {
      return {
        x: e.pageX,
        y: e.pageY
      };
    }
  };

  $.fn.scrollHeight = function() {
    return this[0].scrollHeight;
  };

  $.fn.transform = function(transform) {
    for (var i = 0; i < this.length; i++) {
      var elStyle = this[i].style;
      elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;
    }
    return this;
  };
  $.fn.transition = function(duration) {
    if (typeof duration !== 'string') {
      duration = duration + 'ms';
    }
    for (var i = 0; i < this.length; i++) {
      var elStyle = this[i].style;
      elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;
    }
    return this;
  };

  $.getTranslate = function (el, axis) {
    var matrix, curTransform, curStyle, transformMatrix;

    // automatic axis detection
    if (typeof axis === 'undefined') {
      axis = 'x';
    }

    curStyle = window.getComputedStyle(el, null);
    if (window.WebKitCSSMatrix) {
      // Some old versions of Webkit choke when 'none' is passed; pass
      // empty string instead in this case
      transformMatrix = new WebKitCSSMatrix(curStyle.webkitTransform === 'none' ? '' : curStyle.webkitTransform);
    }
    else {
      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
      matrix = transformMatrix.toString().split(',');
    }

    if (axis === 'x') {
      //Latest Chrome and webkits Fix
      if (window.WebKitCSSMatrix)
        curTransform = transformMatrix.m41;
      //Crazy IE10 Matrix
      else if (matrix.length === 16)
        curTransform = parseFloat(matrix[12]);
      //Normal Browsers
      else
        curTransform = parseFloat(matrix[4]);
    }
    if (axis === 'y') {
      //Latest Chrome and webkits Fix
      if (window.WebKitCSSMatrix)
        curTransform = transformMatrix.m42;
      //Crazy IE10 Matrix
      else if (matrix.length === 16)
        curTransform = parseFloat(matrix[13]);
      //Normal Browsers
      else
        curTransform = parseFloat(matrix[5]);
    }

    return curTransform || 0;
  };
  $.requestAnimationFrame = function (callback) {
    if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);
    else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);
    else if (window.mozRequestAnimationFrame) return window.mozRequestAnimationFrame(callback);
    else {
      return window.setTimeout(callback, 1000 / 60);
    }
  };

  $.cancelAnimationFrame = function (id) {
    if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);
    else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);
    else if (window.mozCancelAnimationFrame) return window.mozCancelAnimationFrame(id);
    else {
      return window.clearTimeout(id);
    }  
  };

  $.fn.join = function(arg) {
    return this.toArray().join(arg);
  }
})($);

/*===========================
  Template7 Template engine
  ===========================*/
/* global $:true */
/* jshint unused:false */
/* jshint forin:false */
+function ($) {
  "use strict";
  $.Template7 = $.t7 = (function () {
    function isArray(arr) {
      return Object.prototype.toString.apply(arr) === '[object Array]';
    }
    function isObject(obj) {
      return obj instanceof Object;
    }
    function isFunction(func) {
      return typeof func === 'function';
    }
    var cache = {};
    function helperToSlices(string) {
      var helperParts = string.replace(/[{}#}]/g, '').split(' ');
      var slices = [];
      var shiftIndex, i, j;
      for (i = 0; i < helperParts.length; i++) {
        var part = helperParts[i];
        if (i === 0) slices.push(part);
        else {
          if (part.indexOf('"') === 0) {
            // Plain String
            if (part.match(/"/g).length === 2) {
              // One word string
              slices.push(part);
            }
            else {
              // Find closed Index
              shiftIndex = 0;
              for (j = i + 1; j < helperParts.length; j++) {
                part += ' ' + helperParts[j];
                if (helperParts[j].indexOf('"') >= 0) {
                  shiftIndex = j;
                  slices.push(part);
                  break;
                }
              }
              if (shiftIndex) i = shiftIndex;
            }
          }
          else {
            if (part.indexOf('=') > 0) {
              // Hash
              var hashParts = part.split('=');
              var hashName = hashParts[0];
              var hashContent = hashParts[1];
              if (hashContent.match(/"/g).length !== 2) {
                shiftIndex = 0;
                for (j = i + 1; j < helperParts.length; j++) {
                  hashContent += ' ' + helperParts[j];
                  if (helperParts[j].indexOf('"') >= 0) {
                    shiftIndex = j;
                    break;
                  }
                }
                if (shiftIndex) i = shiftIndex;
              }
              var hash = [hashName, hashContent.replace(/"/g,'')];
              slices.push(hash);
            }
            else {
              // Plain variable
              slices.push(part);
            }
          }
        }
      }
      return slices;
    }
    function stringToBlocks(string) {
      var blocks = [], i, j, k;
      if (!string) return [];
      var _blocks = string.split(/({{[^{^}]*}})/);
      for (i = 0; i < _blocks.length; i++) {
        var block = _blocks[i];
        if (block === '') continue;
        if (block.indexOf('{{') < 0) {
          blocks.push({
            type: 'plain',
            content: block
          });
        }
        else {
          if (block.indexOf('{/') >= 0) {
            continue;
          }
          if (block.indexOf('{#') < 0 && block.indexOf(' ') < 0 && block.indexOf('else') < 0) {
            // Simple variable
            blocks.push({
              type: 'variable',
              contextName: block.replace(/[{}]/g, '')
            });
            continue;
          }
          // Helpers
          var helperSlices = helperToSlices(block);
          var helperName = helperSlices[0];
          var helperContext = [];
          var helperHash = {};
          for (j = 1; j < helperSlices.length; j++) {
            var slice = helperSlices[j];
            if (isArray(slice)) {
              // Hash
              helperHash[slice[0]] = slice[1] === 'false' ? false : slice[1];
            }
            else {
              helperContext.push(slice);
            }
          }

          if (block.indexOf('{#') >= 0) {
            // Condition/Helper
            var helperStartIndex = i;
            var helperContent = '';
            var elseContent = '';
            var toSkip = 0;
            var shiftIndex;
            var foundClosed = false, foundElse = false, foundClosedElse = false, depth = 0;
            for (j = i + 1; j < _blocks.length; j++) {
              if (_blocks[j].indexOf('{{#') >= 0) {
                depth ++;
              }
              if (_blocks[j].indexOf('{{/') >= 0) {
                depth --;
              }
              if (_blocks[j].indexOf('{{#' + helperName) >= 0) {
                helperContent += _blocks[j];
                if (foundElse) elseContent += _blocks[j];
                toSkip ++;
              }
              else if (_blocks[j].indexOf('{{/' + helperName) >= 0) {
                if (toSkip > 0) {
                  toSkip--;
                  helperContent += _blocks[j];
                  if (foundElse) elseContent += _blocks[j];
                }
                else {
                  shiftIndex = j;
                  foundClosed = true;
                  break;
                }
              }
              else if (_blocks[j].indexOf('else') >= 0 && depth === 0) {
                foundElse = true;
              }
              else {
                if (!foundElse) helperContent += _blocks[j];
                if (foundElse) elseContent += _blocks[j];
              }

            }
            if (foundClosed) {
              if (shiftIndex) i = shiftIndex;
              blocks.push({
                type: 'helper',
                helperName: helperName,
                contextName: helperContext,
                content: helperContent,
                inverseContent: elseContent,
                hash: helperHash
              });
            }
          }
          else if (block.indexOf(' ') > 0) {
            blocks.push({
              type: 'helper',
              helperName: helperName,
              contextName: helperContext,
              hash: helperHash
            });
          }
        }
      }
      return blocks;
    }
    var Template7 = function (template) {
      var t = this;
      t.template = template;

      function getCompileFn(block, depth) {
        if (block.content) return compile(block.content, depth);
        else return function () {return ''; };
      }
      function getCompileInverse(block, depth) {
        if (block.inverseContent) return compile(block.inverseContent, depth);
        else return function () {return ''; };
      }
      function getCompileVar(name, ctx) {
        var variable, parts, levelsUp = 0, initialCtx = ctx;
        if (name.indexOf('../') === 0) {
          levelsUp = name.split('../').length - 1;
          var newDepth = ctx.split('_')[1] - levelsUp;
          ctx = 'ctx_' + (newDepth >= 1 ? newDepth : 1);
          parts = name.split('../')[levelsUp].split('.');
        }
        else if (name.indexOf('@global') === 0) {
          ctx = '$.Template7.global';
          parts = name.split('@global.')[1].split('.');
        }
        else if (name.indexOf('@root') === 0) {
          ctx = 'ctx_1';
          parts = name.split('@root.')[1].split('.');
        }
        else {
          parts = name.split('.');
        }
        variable = ctx;
        for (var i = 0; i < parts.length; i++) {
          var part = parts[i];
          if (part.indexOf('@') === 0) {
            if (i > 0) {
              variable += '[(data && data.' + part.replace('@', '') + ')]';
            }
            else {
              variable = '(data && data.' + name.replace('@', '') + ')';
            }
          }
          else {
            if (isFinite(part)) {
              variable += '[' + part + ']';
            }
            else {
              if (part.indexOf('this') === 0) {
                variable = part.replace('this', ctx);
              }
              else {
                variable += '.' + part;       
              }
            }
          }
        }

        return variable;
      }
      function getCompiledArguments(contextArray, ctx) {
        var arr = [];
        for (var i = 0; i < contextArray.length; i++) {
          if (contextArray[i].indexOf('"') === 0) arr.push(contextArray[i]);
          else {
            arr.push(getCompileVar(contextArray[i], ctx));
          }
        }
        return arr.join(', ');
      }
      function compile(template, depth) {
        depth = depth || 1;
        template = template || t.template;
        if (typeof template !== 'string') {
          throw new Error('Template7: Template must be a string');
        }
        var blocks = stringToBlocks(template);
        if (blocks.length === 0) {
          return function () { return ''; };
        }
        var ctx = 'ctx_' + depth;
        var resultString = '(function (' + ctx + ', data) {\n';
        if (depth === 1) {
          resultString += 'function isArray(arr){return Object.prototype.toString.apply(arr) === \'[object Array]\';}\n';
          resultString += 'function isFunction(func){return (typeof func === \'function\');}\n';
          resultString += 'function c(val, ctx) {if (typeof val !== "undefined") {if (isFunction(val)) {return val.call(ctx);} else return val;} else return "";}\n';
        }
        resultString += 'var r = \'\';\n';
        var i, j, context;
        for (i = 0; i < blocks.length; i++) {
          var block = blocks[i];
          // Plain block
          if (block.type === 'plain') {
            resultString += 'r +=\'' + (block.content).replace(/\r/g, '\\r').replace(/\n/g, '\\n').replace(/'/g, '\\' + '\'') + '\';';
            continue;
          }
          var variable, compiledArguments;
          // Variable block
          if (block.type === 'variable') {
            variable = getCompileVar(block.contextName, ctx);
            resultString += 'r += c(' + variable + ', ' + ctx + ');';
          }
          // Helpers block
          if (block.type === 'helper') {
            if (block.helperName in t.helpers) {
              compiledArguments = getCompiledArguments(block.contextName, ctx);
              resultString += 'r += ($.Template7.helpers.' + block.helperName + ').call(' + ctx + ', ' + (compiledArguments && (compiledArguments + ', ')) +'{hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';
            }
            else {
              if (block.contextName.length > 0) {
                throw new Error('Template7: Missing helper: "' + block.helperName + '"');
              }
              else {
                variable = getCompileVar(block.helperName, ctx);
                resultString += 'if (' + variable + ') {';
                resultString += 'if (isArray(' + variable + ')) {';
                resultString += 'r += ($.Template7.helpers.each).call(' + ctx + ', ' + variable + ', {hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';
                resultString += '}else {';
                resultString += 'r += ($.Template7.helpers.with).call(' + ctx + ', ' + variable + ', {hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block, depth+1) + ', inverse: ' + getCompileInverse(block, depth+1) + ', root: ctx_1});';
                resultString += '}}';
              }
            }
          }
        }
        resultString += '\nreturn r;})';
        return eval.call(window, resultString);
      }
      t.compile = function (template) {
        if (!t.compiled) {
          t.compiled = compile(template);
        }
        return t.compiled;
      };
    };
    Template7.prototype = {
      options: {},
      helpers: {
        'if': function (context, options) {
          if (isFunction(context)) { context = context.call(this); }
          if (context) {
            return options.fn(this, options.data);
          }
          else {
            return options.inverse(this, options.data);
          }
        },
        'unless': function (context, options) {
          if (isFunction(context)) { context = context.call(this); }
          if (!context) {
            return options.fn(this, options.data);
          }
          else {
            return options.inverse(this, options.data);
          }
        },
        'each': function (context, options) {
          var ret = '', i = 0;
          if (isFunction(context)) { context = context.call(this); }
          if (isArray(context)) {
            if (options.hash.reverse) {
              context = context.reverse();
            }
            for (i = 0; i < context.length; i++) {
              ret += options.fn(context[i], {first: i === 0, last: i === context.length - 1, index: i});
            }
            if (options.hash.reverse) {
              context = context.reverse();
            }
          }
          else {
            for (var key in context) {
              i++;
              ret += options.fn(context[key], {key: key});
            }
          }
          if (i > 0) return ret;
          else return options.inverse(this);
        },
        'with': function (context, options) {
          if (isFunction(context)) { context = context.call(this); }
          return options.fn(context);
        },
        'join': function (context, options) {
          if (isFunction(context)) { context = context.call(this); }
          return context.join(options.hash.delimiter || options.hash.delimeter);
        },
        'js': function (expression, options) {
          var func;
          if (expression.indexOf('return')>=0) {
            func = '(function(){'+expression+'})';
          }
          else {
            func = '(function(){return ('+expression+')})';
          }
          return eval.call(this, func).call(this);
        },
        'js_compare': function (expression, options) {
          var func;
          if (expression.indexOf('return')>=0) {
            func = '(function(){'+expression+'})';
          }
          else {
            func = '(function(){return ('+expression+')})';
          }
          var condition = eval.call(this, func).call(this);
          if (condition) {
            return options.fn(this, options.data);
          }
          else {
            return options.inverse(this, options.data);   
          }
        }
      }
    };
    var t7 = function (template, data) {
      if (arguments.length === 2) {
        var instance = new Template7(template);
        var rendered = instance.compile()(data);
        instance = null;
        return (rendered);
      }
      else return new Template7(template);
    };
    t7.registerHelper = function (name, fn) {
      Template7.prototype.helpers[name] = fn;
    };
    t7.unregisterHelper = function (name) {
      Template7.prototype.helpers[name] = undefined;  
      delete Template7.prototype.helpers[name];
    };

    t7.compile = function (template, options) {
      var instance = new Template7(template, options);
      return instance.compile();
    };

    t7.options = Template7.prototype.options;
    t7.helpers = Template7.prototype.helpers;
    return t7;
  })();
}($);

/*! Hammer.JS - v2.0.8 - 2016-04-23
 * http://hammerjs.github.io/
 *
 * Copyright (c) 2016 Jorik Tangelder;
 * Licensed under the MIT license */
(function(window, document, exportName, undefined) {
  'use strict';

var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];
var TEST_ELEMENT = document.createElement('div');

var TYPE_FUNCTION = 'function';

var round = Math.round;
var abs = Math.abs;
var now = Date.now;

/**
 * set a timeout with a given scope
 * @param {Function} fn
 * @param {Number} timeout
 * @param {Object} context
 * @returns {number}
 */
function setTimeoutContext(fn, timeout, context) {
    return setTimeout(bindFn(fn, context), timeout);
}

/**
 * if the argument is an array, we want to execute the fn on each entry
 * if it aint an array we don't want to do a thing.
 * this is used by all the methods that accept a single and array argument.
 * @param {*|Array} arg
 * @param {String} fn
 * @param {Object} [context]
 * @returns {Boolean}
 */
function invokeArrayArg(arg, fn, context) {
    if (Array.isArray(arg)) {
        each(arg, context[fn], context);
        return true;
    }
    return false;
}

/**
 * walk objects and arrays
 * @param {Object} obj
 * @param {Function} iterator
 * @param {Object} context
 */
function each(obj, iterator, context) {
    var i;

    if (!obj) {
        return;
    }

    if (obj.forEach) {
        obj.forEach(iterator, context);
    } else if (obj.length !== undefined) {
        i = 0;
        while (i < obj.length) {
            iterator.call(context, obj[i], i, obj);
            i++;
        }
    } else {
        for (i in obj) {
            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
        }
    }
}

/**
 * wrap a method with a deprecation warning and stack trace
 * @param {Function} method
 * @param {String} name
 * @param {String} message
 * @returns {Function} A new function wrapping the supplied method.
 */
function deprecate(method, name, message) {
    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\n' + message + ' AT \n';
    return function() {
        var e = new Error('get-stack-trace');
        var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, '')
            .replace(/^\s+at\s+/gm, '')
            .replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';

        var log = window.console && (window.console.warn || window.console.log);
        if (log) {
            log.call(window.console, deprecationMessage, stack);
        }
        return method.apply(this, arguments);
    };
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} target
 * @param {...Object} objects_to_assign
 * @returns {Object} target
 */
var assign;
if (typeof Object.assign !== 'function') {
    assign = function assign(target) {
        if (target === undefined || target === null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }

        var output = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source !== undefined && source !== null) {
                for (var nextKey in source) {
                    if (source.hasOwnProperty(nextKey)) {
                        output[nextKey] = source[nextKey];
                    }
                }
            }
        }
        return output;
    };
} else {
    assign = Object.assign;
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} dest
 * @param {Object} src
 * @param {Boolean} [merge=false]
 * @returns {Object} dest
 */
var extend = deprecate(function extend(dest, src, merge) {
    var keys = Object.keys(src);
    var i = 0;
    while (i < keys.length) {
        if (!merge || (merge && dest[keys[i]] === undefined)) {
            dest[keys[i]] = src[keys[i]];
        }
        i++;
    }
    return dest;
}, 'extend', 'Use `assign`.');

/**
 * merge the values from src in the dest.
 * means that properties that exist in dest will not be overwritten by src
 * @param {Object} dest
 * @param {Object} src
 * @returns {Object} dest
 */
var merge = deprecate(function merge(dest, src) {
    return extend(dest, src, true);
}, 'merge', 'Use `assign`.');

/**
 * simple class inheritance
 * @param {Function} child
 * @param {Function} base
 * @param {Object} [properties]
 */
function inherit(child, base, properties) {
    var baseP = base.prototype,
        childP;

    childP = child.prototype = Object.create(baseP);
    childP.constructor = child;
    childP._super = baseP;

    if (properties) {
        assign(childP, properties);
    }
}

/**
 * simple function bind
 * @param {Function} fn
 * @param {Object} context
 * @returns {Function}
 */
function bindFn(fn, context) {
    return function boundFn() {
        return fn.apply(context, arguments);
    };
}

/**
 * let a boolean value also be a function that must return a boolean
 * this first item in args will be used as the context
 * @param {Boolean|Function} val
 * @param {Array} [args]
 * @returns {Boolean}
 */
function boolOrFn(val, args) {
    if (typeof val == TYPE_FUNCTION) {
        return val.apply(args ? args[0] || undefined : undefined, args);
    }
    return val;
}

/**
 * use the val2 when val1 is undefined
 * @param {*} val1
 * @param {*} val2
 * @returns {*}
 */
function ifUndefined(val1, val2) {
    return (val1 === undefined) ? val2 : val1;
}

/**
 * addEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function addEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.addEventListener(type, handler, false);
    });
}

/**
 * removeEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function removeEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.removeEventListener(type, handler, false);
    });
}

/**
 * find if a node is in the given parent
 * @method hasParent
 * @param {HTMLElement} node
 * @param {HTMLElement} parent
 * @return {Boolean} found
 */
function hasParent(node, parent) {
    while (node) {
        if (node == parent) {
            return true;
        }
        node = node.parentNode;
    }
    return false;
}

/**
 * small indexOf wrapper
 * @param {String} str
 * @param {String} find
 * @returns {Boolean} found
 */
function inStr(str, find) {
    return str.indexOf(find) > -1;
}

/**
 * split string on whitespace
 * @param {String} str
 * @returns {Array} words
 */
function splitStr(str) {
    return str.trim().split(/\s+/g);
}

/**
 * find if a array contains the object using indexOf or a simple polyFill
 * @param {Array} src
 * @param {String} find
 * @param {String} [findByKey]
 * @return {Boolean|Number} false when not found, or the index
 */
function inArray(src, find, findByKey) {
    if (src.indexOf && !findByKey) {
        return src.indexOf(find);
    } else {
        var i = 0;
        while (i < src.length) {
            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {
                return i;
            }
            i++;
        }
        return -1;
    }
}

/**
 * convert array-like objects to real arrays
 * @param {Object} obj
 * @returns {Array}
 */
function toArray(obj) {
    return Array.prototype.slice.call(obj, 0);
}

/**
 * unique array with objects based on a key (like 'id') or just by the array's value
 * @param {Array} src [{id:1},{id:2},{id:1}]
 * @param {String} [key]
 * @param {Boolean} [sort=False]
 * @returns {Array} [{id:1},{id:2}]
 */
function uniqueArray(src, key, sort) {
    var results = [];
    var values = [];
    var i = 0;

    while (i < src.length) {
        var val = key ? src[i][key] : src[i];
        if (inArray(values, val) < 0) {
            results.push(src[i]);
        }
        values[i] = val;
        i++;
    }

    if (sort) {
        if (!key) {
            results = results.sort();
        } else {
            results = results.sort(function sortUniqueArray(a, b) {
                return a[key] > b[key];
            });
        }
    }

    return results;
}

/**
 * get the prefixed property
 * @param {Object} obj
 * @param {String} property
 * @returns {String|Undefined} prefixed
 */
function prefixed(obj, property) {
    var prefix, prop;
    var camelProp = property[0].toUpperCase() + property.slice(1);

    var i = 0;
    while (i < VENDOR_PREFIXES.length) {
        prefix = VENDOR_PREFIXES[i];
        prop = (prefix) ? prefix + camelProp : property;

        if (prop in obj) {
            return prop;
        }
        i++;
    }
    return undefined;
}

/**
 * get a unique id
 * @returns {number} uniqueId
 */
var _uniqueId = 1;
function uniqueId() {
    return _uniqueId++;
}

/**
 * get the window object of an element
 * @param {HTMLElement} element
 * @returns {DocumentView|Window}
 */
function getWindowForElement(element) {
    var doc = element.ownerDocument || element;
    return (doc.defaultView || doc.parentWindow || window);
}

var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

var SUPPORT_TOUCH = ('ontouchstart' in window);
var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;
var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);

var INPUT_TYPE_TOUCH = 'touch';
var INPUT_TYPE_PEN = 'pen';
var INPUT_TYPE_MOUSE = 'mouse';
var INPUT_TYPE_KINECT = 'kinect';

var COMPUTE_INTERVAL = 25;

var INPUT_START = 1;
var INPUT_MOVE = 2;
var INPUT_END = 4;
var INPUT_CANCEL = 8;

var DIRECTION_NONE = 1;
var DIRECTION_LEFT = 2;
var DIRECTION_RIGHT = 4;
var DIRECTION_UP = 8;
var DIRECTION_DOWN = 16;

var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

var PROPS_XY = ['x', 'y'];
var PROPS_CLIENT_XY = ['clientX', 'clientY'];

/**
 * create new input type manager
 * @param {Manager} manager
 * @param {Function} callback
 * @returns {Input}
 * @constructor
 */
function Input(manager, callback) {
    var self = this;
    this.manager = manager;
    this.callback = callback;
    this.element = manager.element;
    this.target = manager.options.inputTarget;

    // smaller wrapper around the handler, for the scope and the enabled state of the manager,
    // so when disabled the input events are completely bypassed.
    this.domHandler = function(ev) {
        if (boolOrFn(manager.options.enable, [manager])) {
            self.handler(ev);
        }
    };

    this.init();

}

Input.prototype = {
    /**
     * should handle the inputEvent data and trigger the callback
     * @virtual
     */
    handler: function() { },

    /**
     * bind the events
     */
    init: function() {
        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    },

    /**
     * unbind the events
     */
    destroy: function() {
        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    }
};

/**
 * create new input type manager
 * called by the Manager constructor
 * @param {Hammer} manager
 * @returns {Input}
 */
function createInputInstance(manager) {
    var Type;
    var inputClass = manager.options.inputClass;

    if (inputClass) {
        Type = inputClass;
    } else if (SUPPORT_POINTER_EVENTS) {
        Type = PointerEventInput;
    } else if (SUPPORT_ONLY_TOUCH) {
        Type = TouchInput;
    } else if (!SUPPORT_TOUCH) {
        Type = MouseInput;
    } else {
        Type = TouchMouseInput;
    }
    return new (Type)(manager, inputHandler);
}

/**
 * handle input events
 * @param {Manager} manager
 * @param {String} eventType
 * @param {Object} input
 */
function inputHandler(manager, eventType, input) {
    var pointersLen = input.pointers.length;
    var changedPointersLen = input.changedPointers.length;
    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));
    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));

    input.isFirst = !!isFirst;
    input.isFinal = !!isFinal;

    if (isFirst) {
        manager.session = {};
    }

    // source event is the normalized value of the domEvents
    // like 'touchstart, mouseup, pointerdown'
    input.eventType = eventType;

    // compute scale, rotation etc
    computeInputData(manager, input);

    // emit secret event
    manager.emit('hammer.input', input);

    manager.recognize(input);
    manager.session.prevInput = input;
}

/**
 * extend the data with some usable properties like scale, rotate, velocity etc
 * @param {Object} manager
 * @param {Object} input
 */
function computeInputData(manager, input) {
    var session = manager.session;
    var pointers = input.pointers;
    var pointersLength = pointers.length;

    // store the first input to calculate the distance and direction
    if (!session.firstInput) {
        session.firstInput = simpleCloneInputData(input);
    }

    // to compute scale and rotation we need to store the multiple touches
    if (pointersLength > 1 && !session.firstMultiple) {
        session.firstMultiple = simpleCloneInputData(input);
    } else if (pointersLength === 1) {
        session.firstMultiple = false;
    }

    var firstInput = session.firstInput;
    var firstMultiple = session.firstMultiple;
    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;

    var center = input.center = getCenter(pointers);
    input.timeStamp = now();
    input.deltaTime = input.timeStamp - firstInput.timeStamp;

    input.angle = getAngle(offsetCenter, center);
    input.distance = getDistance(offsetCenter, center);

    computeDeltaXY(session, input);
    input.offsetDirection = getDirection(input.deltaX, input.deltaY);

    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
    input.overallVelocityX = overallVelocity.x;
    input.overallVelocityY = overallVelocity.y;
    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;

    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;

    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >
        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);

    computeIntervalInputData(session, input);

    // find the correct target
    var target = manager.element;
    if (hasParent(input.srcEvent.target, target)) {
        target = input.srcEvent.target;
    }
    input.target = target;
}

function computeDeltaXY(session, input) {
    var center = input.center;
    var offset = session.offsetDelta || {};
    var prevDelta = session.prevDelta || {};
    var prevInput = session.prevInput || {};

    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
        prevDelta = session.prevDelta = {
            x: prevInput.deltaX || 0,
            y: prevInput.deltaY || 0
        };

        offset = session.offsetDelta = {
            x: center.x,
            y: center.y
        };
    }

    input.deltaX = prevDelta.x + (center.x - offset.x);
    input.deltaY = prevDelta.y + (center.y - offset.y);
}

/**
 * velocity is calculated every x ms
 * @param {Object} session
 * @param {Object} input
 */
function computeIntervalInputData(session, input) {
    var last = session.lastInterval || input,
        deltaTime = input.timeStamp - last.timeStamp,
        velocity, velocityX, velocityY, direction;

    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
        var deltaX = input.deltaX - last.deltaX;
        var deltaY = input.deltaY - last.deltaY;

        var v = getVelocity(deltaTime, deltaX, deltaY);
        velocityX = v.x;
        velocityY = v.y;
        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
        direction = getDirection(deltaX, deltaY);

        session.lastInterval = input;
    } else {
        // use latest velocity info if it doesn't overtake a minimum period
        velocity = last.velocity;
        velocityX = last.velocityX;
        velocityY = last.velocityY;
        direction = last.direction;
    }

    input.velocity = velocity;
    input.velocityX = velocityX;
    input.velocityY = velocityY;
    input.direction = direction;
}

/**
 * create a simple clone from the input used for storage of firstInput and firstMultiple
 * @param {Object} input
 * @returns {Object} clonedInputData
 */
function simpleCloneInputData(input) {
    // make a simple copy of the pointers because we will get a reference if we don't
    // we only need clientXY for the calculations
    var pointers = [];
    var i = 0;
    while (i < input.pointers.length) {
        pointers[i] = {
            clientX: round(input.pointers[i].clientX),
            clientY: round(input.pointers[i].clientY)
        };
        i++;
    }

    return {
        timeStamp: now(),
        pointers: pointers,
        center: getCenter(pointers),
        deltaX: input.deltaX,
        deltaY: input.deltaY
    };
}

/**
 * get the center of all the pointers
 * @param {Array} pointers
 * @return {Object} center contains `x` and `y` properties
 */
function getCenter(pointers) {
    var pointersLength = pointers.length;

    // no need to loop when only one touch
    if (pointersLength === 1) {
        return {
            x: round(pointers[0].clientX),
            y: round(pointers[0].clientY)
        };
    }

    var x = 0, y = 0, i = 0;
    while (i < pointersLength) {
        x += pointers[i].clientX;
        y += pointers[i].clientY;
        i++;
    }

    return {
        x: round(x / pointersLength),
        y: round(y / pointersLength)
    };
}

/**
 * calculate the velocity between two points. unit is in px per ms.
 * @param {Number} deltaTime
 * @param {Number} x
 * @param {Number} y
 * @return {Object} velocity `x` and `y`
 */
function getVelocity(deltaTime, x, y) {
    return {
        x: x / deltaTime || 0,
        y: y / deltaTime || 0
    };
}

/**
 * get the direction between two points
 * @param {Number} x
 * @param {Number} y
 * @return {Number} direction
 */
function getDirection(x, y) {
    if (x === y) {
        return DIRECTION_NONE;
    }

    if (abs(x) >= abs(y)) {
        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
    }
    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}

/**
 * calculate the absolute distance between two points
 * @param {Object} p1 {x, y}
 * @param {Object} p2 {x, y}
 * @param {Array} [props] containing x and y keys
 * @return {Number} distance
 */
function getDistance(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];

    return Math.sqrt((x * x) + (y * y));
}

/**
 * calculate the angle between two coordinates
 * @param {Object} p1
 * @param {Object} p2
 * @param {Array} [props] containing x and y keys
 * @return {Number} angle
 */
function getAngle(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];
    return Math.atan2(y, x) * 180 / Math.PI;
}

/**
 * calculate the rotation degrees between two pointersets
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} rotation
 */
function getRotation(start, end) {
    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
}

/**
 * calculate the scale factor between two pointersets
 * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} scale
 */
function getScale(start, end) {
    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
}

var MOUSE_INPUT_MAP = {
    mousedown: INPUT_START,
    mousemove: INPUT_MOVE,
    mouseup: INPUT_END
};

var MOUSE_ELEMENT_EVENTS = 'mousedown';
var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

/**
 * Mouse events input
 * @constructor
 * @extends Input
 */
function MouseInput() {
    this.evEl = MOUSE_ELEMENT_EVENTS;
    this.evWin = MOUSE_WINDOW_EVENTS;

    this.pressed = false; // mousedown state

    Input.apply(this, arguments);
}

inherit(MouseInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function MEhandler(ev) {
        var eventType = MOUSE_INPUT_MAP[ev.type];

        // on start we want to have the left mouse button down
        if (eventType & INPUT_START && ev.button === 0) {
            this.pressed = true;
        }

        if (eventType & INPUT_MOVE && ev.which !== 1) {
            eventType = INPUT_END;
        }

        // mouse must be down
        if (!this.pressed) {
            return;
        }

        if (eventType & INPUT_END) {
            this.pressed = false;
        }

        this.callback(this.manager, eventType, {
            pointers: [ev],
            changedPointers: [ev],
            pointerType: INPUT_TYPE_MOUSE,
            srcEvent: ev
        });
    }
});

var POINTER_INPUT_MAP = {
    pointerdown: INPUT_START,
    pointermove: INPUT_MOVE,
    pointerup: INPUT_END,
    pointercancel: INPUT_CANCEL,
    pointerout: INPUT_CANCEL
};

// in IE10 the pointer types is defined as an enum
var IE10_POINTER_TYPE_ENUM = {
    2: INPUT_TYPE_TOUCH,
    3: INPUT_TYPE_PEN,
    4: INPUT_TYPE_MOUSE,
    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
};

var POINTER_ELEMENT_EVENTS = 'pointerdown';
var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

// IE10 has prefixed support, and case-sensitive
if (window.MSPointerEvent && !window.PointerEvent) {
    POINTER_ELEMENT_EVENTS = 'MSPointerDown';
    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
}

/**
 * Pointer events input
 * @constructor
 * @extends Input
 */
function PointerEventInput() {
    this.evEl = POINTER_ELEMENT_EVENTS;
    this.evWin = POINTER_WINDOW_EVENTS;

    Input.apply(this, arguments);

    this.store = (this.manager.session.pointerEvents = []);
}

inherit(PointerEventInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function PEhandler(ev) {
        var store = this.store;
        var removePointer = false;

        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;

        var isTouch = (pointerType == INPUT_TYPE_TOUCH);

        // get index of the event in the store
        var storeIndex = inArray(store, ev.pointerId, 'pointerId');

        // start and mouse must be down
        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
            if (storeIndex < 0) {
                store.push(ev);
                storeIndex = store.length - 1;
            }
        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
            removePointer = true;
        }

        // it not found, so the pointer hasn't been down (so it's probably a hover)
        if (storeIndex < 0) {
            return;
        }

        // update the event in the store
        store[storeIndex] = ev;

        this.callback(this.manager, eventType, {
            pointers: store,
            changedPointers: [ev],
            pointerType: pointerType,
            srcEvent: ev
        });

        if (removePointer) {
            // remove from the store
            store.splice(storeIndex, 1);
        }
    }
});

var SINGLE_TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Touch events input
 * @constructor
 * @extends Input
 */
function SingleTouchInput() {
    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
    this.started = false;

    Input.apply(this, arguments);
}

inherit(SingleTouchInput, Input, {
    handler: function TEhandler(ev) {
        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

        // should we handle the touch events?
        if (type === INPUT_START) {
            this.started = true;
        }

        if (!this.started) {
            return;
        }

        var touches = normalizeSingleTouches.call(this, ev, type);

        // when done, reset the started state
        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
            this.started = false;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function normalizeSingleTouches(ev, type) {
    var all = toArray(ev.touches);
    var changed = toArray(ev.changedTouches);

    if (type & (INPUT_END | INPUT_CANCEL)) {
        all = uniqueArray(all.concat(changed), 'identifier', true);
    }

    return [all, changed];
}

var TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Multi-user touch events input
 * @constructor
 * @extends Input
 */
function TouchInput() {
    this.evTarget = TOUCH_TARGET_EVENTS;
    this.targetIds = {};

    Input.apply(this, arguments);
}

inherit(TouchInput, Input, {
    handler: function MTEhandler(ev) {
        var type = TOUCH_INPUT_MAP[ev.type];
        var touches = getTouches.call(this, ev, type);
        if (!touches) {
            return;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function getTouches(ev, type) {
    var allTouches = toArray(ev.touches);
    var targetIds = this.targetIds;

    // when there is only one touch, the process can be simplified
    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
        targetIds[allTouches[0].identifier] = true;
        return [allTouches, allTouches];
    }

    var i,
        targetTouches,
        changedTouches = toArray(ev.changedTouches),
        changedTargetTouches = [],
        target = this.target;

    // get target touches from touches
    targetTouches = allTouches.filter(function(touch) {
        return hasParent(touch.target, target);
    });

    // collect touches
    if (type === INPUT_START) {
        i = 0;
        while (i < targetTouches.length) {
            targetIds[targetTouches[i].identifier] = true;
            i++;
        }
    }

    // filter changed touches to only contain touches that exist in the collected target ids
    i = 0;
    while (i < changedTouches.length) {
        if (targetIds[changedTouches[i].identifier]) {
            changedTargetTouches.push(changedTouches[i]);
        }

        // cleanup removed touches
        if (type & (INPUT_END | INPUT_CANCEL)) {
            delete targetIds[changedTouches[i].identifier];
        }
        i++;
    }

    if (!changedTargetTouches.length) {
        return;
    }

    return [
        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),
        changedTargetTouches
    ];
}

/**
 * Combined touch and mouse input
 *
 * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
 * This because touch devices also emit mouse events while doing a touch.
 *
 * @constructor
 * @extends Input
 */

var DEDUP_TIMEOUT = 2500;
var DEDUP_DISTANCE = 25;

function TouchMouseInput() {
    Input.apply(this, arguments);

    var handler = bindFn(this.handler, this);
    this.touch = new TouchInput(this.manager, handler);
    this.mouse = new MouseInput(this.manager, handler);

    this.primaryTouch = null;
    this.lastTouches = [];
}

inherit(TouchMouseInput, Input, {
    /**
     * handle mouse and touch events
     * @param {Hammer} manager
     * @param {String} inputEvent
     * @param {Object} inputData
     */
    handler: function TMEhandler(manager, inputEvent, inputData) {
        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
            return;
        }

        // when we're in a touch event, record touches to  de-dupe synthetic mouse event
        if (isTouch) {
            recordTouches.call(this, inputEvent, inputData);
        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {
            return;
        }

        this.callback(manager, inputEvent, inputData);
    },

    /**
     * remove the event listeners
     */
    destroy: function destroy() {
        this.touch.destroy();
        this.mouse.destroy();
    }
});

function recordTouches(eventType, eventData) {
    if (eventType & INPUT_START) {
        this.primaryTouch = eventData.changedPointers[0].identifier;
        setLastTouch.call(this, eventData);
    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
        setLastTouch.call(this, eventData);
    }
}

function setLastTouch(eventData) {
    var touch = eventData.changedPointers[0];

    if (touch.identifier === this.primaryTouch) {
        var lastTouch = {x: touch.clientX, y: touch.clientY};
        this.lastTouches.push(lastTouch);
        var lts = this.lastTouches;
        var removeLastTouch = function() {
            var i = lts.indexOf(lastTouch);
            if (i > -1) {
                lts.splice(i, 1);
            }
        };
        setTimeout(removeLastTouch, DEDUP_TIMEOUT);
    }
}

function isSyntheticEvent(eventData) {
    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;
    for (var i = 0; i < this.lastTouches.length; i++) {
        var t = this.lastTouches[i];
        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);
        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
            return true;
        }
    }
    return false;
}

var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

// magical touchAction value
var TOUCH_ACTION_COMPUTE = 'compute';
var TOUCH_ACTION_AUTO = 'auto';
var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
var TOUCH_ACTION_NONE = 'none';
var TOUCH_ACTION_PAN_X = 'pan-x';
var TOUCH_ACTION_PAN_Y = 'pan-y';
var TOUCH_ACTION_MAP = getTouchActionProps();

/**
 * Touch Action
 * sets the touchAction property or uses the js alternative
 * @param {Manager} manager
 * @param {String} value
 * @constructor
 */
function TouchAction(manager, value) {
    this.manager = manager;
    this.set(value);
}

TouchAction.prototype = {
    /**
     * set the touchAction value on the element or enable the polyfill
     * @param {String} value
     */
    set: function(value) {
        // find out the touch-action by the event handlers
        if (value == TOUCH_ACTION_COMPUTE) {
            value = this.compute();
        }

        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
        }
        this.actions = value.toLowerCase().trim();
    },

    /**
     * just re-set the touchAction value
     */
    update: function() {
        this.set(this.manager.options.touchAction);
    },

    /**
     * compute the value for the touchAction property based on the recognizer's settings
     * @returns {String} value
     */
    compute: function() {
        var actions = [];
        each(this.manager.recognizers, function(recognizer) {
            if (boolOrFn(recognizer.options.enable, [recognizer])) {
                actions = actions.concat(recognizer.getTouchAction());
            }
        });
        return cleanTouchActions(actions.join(' '));
    },

    /**
     * this method is called on each input cycle and provides the preventing of the browser behavior
     * @param {Object} input
     */
    preventDefaults: function(input) {
        var srcEvent = input.srcEvent;
        var direction = input.offsetDirection;

        // if the touch action did prevented once this session
        if (this.manager.session.prevented) {
            srcEvent.preventDefault();
            return;
        }

        var actions = this.actions;
        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];

        if (hasNone) {
            //do not prevent defaults if this is a tap gesture

            var isTapPointer = input.pointers.length === 1;
            var isTapMovement = input.distance < 2;
            var isTapTouchTime = input.deltaTime < 250;

            if (isTapPointer && isTapMovement && isTapTouchTime) {
                return;
            }
        }

        if (hasPanX && hasPanY) {
            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
            return;
        }

        if (hasNone ||
            (hasPanY && direction & DIRECTION_HORIZONTAL) ||
            (hasPanX && direction & DIRECTION_VERTICAL)) {
            return this.preventSrc(srcEvent);
        }
    },

    /**
     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
     * @param {Object} srcEvent
     */
    preventSrc: function(srcEvent) {
        this.manager.session.prevented = true;
        srcEvent.preventDefault();
    }
};

/**
 * when the touchActions are collected they are not a valid value, so we need to clean things up. *
 * @param {String} actions
 * @returns {*}
 */
function cleanTouchActions(actions) {
    // none
    if (inStr(actions, TOUCH_ACTION_NONE)) {
        return TOUCH_ACTION_NONE;
    }

    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

    // if both pan-x and pan-y are set (different recognizers
    // for different directions, e.g. horizontal pan but vertical swipe?)
    // we need none (as otherwise with pan-x pan-y combined none of these
    // recognizers will work, since the browser would handle all panning
    if (hasPanX && hasPanY) {
        return TOUCH_ACTION_NONE;
    }

    // pan-x OR pan-y
    if (hasPanX || hasPanY) {
        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
    }

    // manipulation
    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
        return TOUCH_ACTION_MANIPULATION;
    }

    return TOUCH_ACTION_AUTO;
}

function getTouchActionProps() {
    if (!NATIVE_TOUCH_ACTION) {
        return false;
    }
    var touchMap = {};
    var cssSupports = window.CSS && window.CSS.supports;
    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {

        // If css.supports is not supported but there is native touch-action assume it supports
        // all values. This is the case for IE 10 and 11.
        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;
    });
    return touchMap;
}

/**
 * Recognizer flow explained; *
 * All recognizers have the initial state of POSSIBLE when a input session starts.
 * The definition of a input session is from the first input until the last input, with all it's movement in it. *
 * Example session for mouse-input: mousedown -> mousemove -> mouseup
 *
 * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
 * which determines with state it should be.
 *
 * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
 * POSSIBLE to give it another change on the next cycle.
 *
 *               Possible
 *                  |
 *            +-----+---------------+
 *            |                     |
 *      +-----+-----+               |
 *      |           |               |
 *   Failed      Cancelled          |
 *                          +-------+------+
 *                          |              |
 *                      Recognized       Began
 *                                         |
 *                                      Changed
 *                                         |
 *                                  Ended/Recognized
 */
var STATE_POSSIBLE = 1;
var STATE_BEGAN = 2;
var STATE_CHANGED = 4;
var STATE_ENDED = 8;
var STATE_RECOGNIZED = STATE_ENDED;
var STATE_CANCELLED = 16;
var STATE_FAILED = 32;

/**
 * Recognizer
 * Every recognizer needs to extend from this class.
 * @constructor
 * @param {Object} options
 */
function Recognizer(options) {
    this.options = assign({}, this.defaults, options || {});

    this.id = uniqueId();

    this.manager = null;

    // default is enable true
    this.options.enable = ifUndefined(this.options.enable, true);

    this.state = STATE_POSSIBLE;

    this.simultaneous = {};
    this.requireFail = [];
}

Recognizer.prototype = {
    /**
     * @virtual
     * @type {Object}
     */
    defaults: {},

    /**
     * set options
     * @param {Object} options
     * @return {Recognizer}
     */
    set: function(options) {
        assign(this.options, options);

        // also update the touchAction, in case something changed about the directions/enabled state
        this.manager && this.manager.touchAction.update();
        return this;
    },

    /**
     * recognize simultaneous with an other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    recognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
            return this;
        }

        var simultaneous = this.simultaneous;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (!simultaneous[otherRecognizer.id]) {
            simultaneous[otherRecognizer.id] = otherRecognizer;
            otherRecognizer.recognizeWith(this);
        }
        return this;
    },

    /**
     * drop the simultaneous link. it doesnt remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRecognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        delete this.simultaneous[otherRecognizer.id];
        return this;
    },

    /**
     * recognizer can only run when an other is failing
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    requireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
            return this;
        }

        var requireFail = this.requireFail;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (inArray(requireFail, otherRecognizer) === -1) {
            requireFail.push(otherRecognizer);
            otherRecognizer.requireFailure(this);
        }
        return this;
    },

    /**
     * drop the requireFailure link. it does not remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRequireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        var index = inArray(this.requireFail, otherRecognizer);
        if (index > -1) {
            this.requireFail.splice(index, 1);
        }
        return this;
    },

    /**
     * has require failures boolean
     * @returns {boolean}
     */
    hasRequireFailures: function() {
        return this.requireFail.length > 0;
    },

    /**
     * if the recognizer can recognize simultaneous with an other recognizer
     * @param {Recognizer} otherRecognizer
     * @returns {Boolean}
     */
    canRecognizeWith: function(otherRecognizer) {
        return !!this.simultaneous[otherRecognizer.id];
    },

    /**
     * You should use `tryEmit` instead of `emit` directly to check
     * that all the needed recognizers has failed before emitting.
     * @param {Object} input
     */
    emit: function(input) {
        var self = this;
        var state = this.state;

        function emit(event) {
            self.manager.emit(event, input);
        }

        // 'panstart' and 'panmove'
        if (state < STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }

        emit(self.options.event); // simple 'eventName' events

        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)
            emit(input.additionalEvent);
        }

        // panend and pancancel
        if (state >= STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }
    },

    /**
     * Check that all the require failure recognizers has failed,
     * if true, it emits a gesture event,
     * otherwise, setup the state to FAILED.
     * @param {Object} input
     */
    tryEmit: function(input) {
        if (this.canEmit()) {
            return this.emit(input);
        }
        // it's failing anyway
        this.state = STATE_FAILED;
    },

    /**
     * can we emit?
     * @returns {boolean}
     */
    canEmit: function() {
        var i = 0;
        while (i < this.requireFail.length) {
            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
                return false;
            }
            i++;
        }
        return true;
    },

    /**
     * update the recognizer
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        // make a new copy of the inputData
        // so we can change the inputData without messing up the other recognizers
        var inputDataClone = assign({}, inputData);

        // is is enabled and allow recognizing?
        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
            this.reset();
            this.state = STATE_FAILED;
            return;
        }

        // reset when we've reached the end
        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
            this.state = STATE_POSSIBLE;
        }

        this.state = this.process(inputDataClone);

        // the recognizer has recognized a gesture
        // so trigger an event
        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
            this.tryEmit(inputDataClone);
        }
    },

    /**
     * return the state of the recognizer
     * the actual recognizing happens in this method
     * @virtual
     * @param {Object} inputData
     * @returns {Const} STATE
     */
    process: function(inputData) { }, // jshint ignore:line

    /**
     * return the preferred touch-action
     * @virtual
     * @returns {Array}
     */
    getTouchAction: function() { },

    /**
     * called when the gesture isn't allowed to recognize
     * like when another is being recognized or it is disabled
     * @virtual
     */
    reset: function() { }
};

/**
 * get a usable string, used as event postfix
 * @param {Const} state
 * @returns {String} state
 */
function stateStr(state) {
    if (state & STATE_CANCELLED) {
        return 'cancel';
    } else if (state & STATE_ENDED) {
        return 'end';
    } else if (state & STATE_CHANGED) {
        return 'move';
    } else if (state & STATE_BEGAN) {
        return 'start';
    }
    return '';
}

/**
 * direction cons to string
 * @param {Const} direction
 * @returns {String}
 */
function directionStr(direction) {
    if (direction == DIRECTION_DOWN) {
        return 'down';
    } else if (direction == DIRECTION_UP) {
        return 'up';
    } else if (direction == DIRECTION_LEFT) {
        return 'left';
    } else if (direction == DIRECTION_RIGHT) {
        return 'right';
    }
    return '';
}

/**
 * get a recognizer by name if it is bound to a manager
 * @param {Recognizer|String} otherRecognizer
 * @param {Recognizer} recognizer
 * @returns {Recognizer}
 */
function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
    var manager = recognizer.manager;
    if (manager) {
        return manager.get(otherRecognizer);
    }
    return otherRecognizer;
}

/**
 * This recognizer is just used as a base for the simple attribute recognizers.
 * @constructor
 * @extends Recognizer
 */
function AttrRecognizer() {
    Recognizer.apply(this, arguments);
}

inherit(AttrRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof AttrRecognizer
     */
    defaults: {
        /**
         * @type {Number}
         * @default 1
         */
        pointers: 1
    },

    /**
     * Used to check if it the recognizer receives valid input, like input.distance > 10.
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {Boolean} recognized
     */
    attrTest: function(input) {
        var optionPointers = this.options.pointers;
        return optionPointers === 0 || input.pointers.length === optionPointers;
    },

    /**
     * Process the input and return the state for the recognizer
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {*} State
     */
    process: function(input) {
        var state = this.state;
        var eventType = input.eventType;

        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
        var isValid = this.attrTest(input);

        // on cancel input and we've recognized before, return STATE_CANCELLED
        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
            return state | STATE_CANCELLED;
        } else if (isRecognized || isValid) {
            if (eventType & INPUT_END) {
                return state | STATE_ENDED;
            } else if (!(state & STATE_BEGAN)) {
                return STATE_BEGAN;
            }
            return state | STATE_CHANGED;
        }
        return STATE_FAILED;
    }
});

/**
 * Pan
 * Recognized when the pointer is down and moved in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function PanRecognizer() {
    AttrRecognizer.apply(this, arguments);

    this.pX = null;
    this.pY = null;
}

inherit(PanRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PanRecognizer
     */
    defaults: {
        event: 'pan',
        threshold: 10,
        pointers: 1,
        direction: DIRECTION_ALL
    },

    getTouchAction: function() {
        var direction = this.options.direction;
        var actions = [];
        if (direction & DIRECTION_HORIZONTAL) {
            actions.push(TOUCH_ACTION_PAN_Y);
        }
        if (direction & DIRECTION_VERTICAL) {
            actions.push(TOUCH_ACTION_PAN_X);
        }
        return actions;
    },

    directionTest: function(input) {
        var options = this.options;
        var hasMoved = true;
        var distance = input.distance;
        var direction = input.direction;
        var x = input.deltaX;
        var y = input.deltaY;

        // lock to axis?
        if (!(direction & options.direction)) {
            if (options.direction & DIRECTION_HORIZONTAL) {
                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;
                hasMoved = x != this.pX;
                distance = Math.abs(input.deltaX);
            } else {
                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;
                hasMoved = y != this.pY;
                distance = Math.abs(input.deltaY);
            }
        }
        input.direction = direction;
        return hasMoved && distance > options.threshold && direction & options.direction;
    },

    attrTest: function(input) {
        return AttrRecognizer.prototype.attrTest.call(this, input) &&
            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));
    },

    emit: function(input) {

        this.pX = input.deltaX;
        this.pY = input.deltaY;

        var direction = directionStr(input.direction);

        if (direction) {
            input.additionalEvent = this.options.event + direction;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Pinch
 * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
 * @constructor
 * @extends AttrRecognizer
 */
function PinchRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(PinchRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'pinch',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
    },

    emit: function(input) {
        if (input.scale !== 1) {
            var inOut = input.scale < 1 ? 'in' : 'out';
            input.additionalEvent = this.options.event + inOut;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Press
 * Recognized when the pointer is down for x ms without any movement.
 * @constructor
 * @extends Recognizer
 */
function PressRecognizer() {
    Recognizer.apply(this, arguments);

    this._timer = null;
    this._input = null;
}

inherit(PressRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PressRecognizer
     */
    defaults: {
        event: 'press',
        pointers: 1,
        time: 251, // minimal time of the pointer to be pressed
        threshold: 9 // a minimal movement is ok, but keep it low
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_AUTO];
    },

    process: function(input) {
        var options = this.options;
        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTime = input.deltaTime > options.time;

        this._input = input;

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {
            this.reset();
        } else if (input.eventType & INPUT_START) {
            this.reset();
            this._timer = setTimeoutContext(function() {
                this.state = STATE_RECOGNIZED;
                this.tryEmit();
            }, options.time, this);
        } else if (input.eventType & INPUT_END) {
            return STATE_RECOGNIZED;
        }
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function(input) {
        if (this.state !== STATE_RECOGNIZED) {
            return;
        }

        if (input && (input.eventType & INPUT_END)) {
            this.manager.emit(this.options.event + 'up', input);
        } else {
            this._input.timeStamp = now();
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Rotate
 * Recognized when two or more pointer are moving in a circular motion.
 * @constructor
 * @extends AttrRecognizer
 */
function RotateRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(RotateRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof RotateRecognizer
     */
    defaults: {
        event: 'rotate',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
    }
});

/**
 * Swipe
 * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function SwipeRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(SwipeRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof SwipeRecognizer
     */
    defaults: {
        event: 'swipe',
        threshold: 10,
        velocity: 0.3,
        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
        pointers: 1
    },

    getTouchAction: function() {
        return PanRecognizer.prototype.getTouchAction.call(this);
    },

    attrTest: function(input) {
        var direction = this.options.direction;
        var velocity;

        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
            velocity = input.overallVelocity;
        } else if (direction & DIRECTION_HORIZONTAL) {
            velocity = input.overallVelocityX;
        } else if (direction & DIRECTION_VERTICAL) {
            velocity = input.overallVelocityY;
        }

        return this._super.attrTest.call(this, input) &&
            direction & input.offsetDirection &&
            input.distance > this.options.threshold &&
            input.maxPointers == this.options.pointers &&
            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
    },

    emit: function(input) {
        var direction = directionStr(input.offsetDirection);
        if (direction) {
            this.manager.emit(this.options.event + direction, input);
        }

        this.manager.emit(this.options.event, input);
    }
});

/**
 * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
 * between the given interval and position. The delay option can be used to recognize multi-taps without firing
 * a single tap.
 *
 * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
 * multi-taps being recognized.
 * @constructor
 * @extends Recognizer
 */
function TapRecognizer() {
    Recognizer.apply(this, arguments);

    // previous time and center,
    // used for tap counting
    this.pTime = false;
    this.pCenter = false;

    this._timer = null;
    this._input = null;
    this.count = 0;
}

inherit(TapRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'tap',
        pointers: 1,
        taps: 1,
        interval: 300, // max time between the multi-tap taps
        time: 250, // max time of the pointer to be down (like finger on the screen)
        threshold: 9, // a minimal movement is ok, but keep it low
        posThreshold: 10 // a multi-tap can be a bit off the initial position
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_MANIPULATION];
    },

    process: function(input) {
        var options = this.options;

        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTouchTime = input.deltaTime < options.time;

        this.reset();

        if ((input.eventType & INPUT_START) && (this.count === 0)) {
            return this.failTimeout();
        }

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (validMovement && validTouchTime && validPointers) {
            if (input.eventType != INPUT_END) {
                return this.failTimeout();
            }

            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;
            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;

            this.pTime = input.timeStamp;
            this.pCenter = input.center;

            if (!validMultiTap || !validInterval) {
                this.count = 1;
            } else {
                this.count += 1;
            }

            this._input = input;

            // if tap count matches we have recognized it,
            // else it has began recognizing...
            var tapCount = this.count % options.taps;
            if (tapCount === 0) {
                // no failing requirements, immediately trigger the tap event
                // or wait as long as the multitap interval to trigger
                if (!this.hasRequireFailures()) {
                    return STATE_RECOGNIZED;
                } else {
                    this._timer = setTimeoutContext(function() {
                        this.state = STATE_RECOGNIZED;
                        this.tryEmit();
                    }, options.interval, this);
                    return STATE_BEGAN;
                }
            }
        }
        return STATE_FAILED;
    },

    failTimeout: function() {
        this._timer = setTimeoutContext(function() {
            this.state = STATE_FAILED;
        }, this.options.interval, this);
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function() {
        if (this.state == STATE_RECOGNIZED) {
            this._input.tapCount = this.count;
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Simple way to create a manager with a default set of recognizers.
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Hammer(element, options) {
    options = options || {};
    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
    return new Manager(element, options);
}

/**
 * @const {string}
 */
Hammer.VERSION = '2.0.8';

/**
 * default settings
 * @namespace
 */
Hammer.defaults = {
    /**
     * set if DOM events are being triggered.
     * But this is slower and unused by simple implementations, so disabled by default.
     * @type {Boolean}
     * @default false
     */
    domEvents: false,

    /**
     * The value for the touchAction property/fallback.
     * When set to `compute` it will magically set the correct value based on the added recognizers.
     * @type {String}
     * @default compute
     */
    touchAction: TOUCH_ACTION_COMPUTE,

    /**
     * @type {Boolean}
     * @default true
     */
    enable: true,

    /**
     * EXPERIMENTAL FEATURE -- can be removed/changed
     * Change the parent input target element.
     * If Null, then it is being set the to main element.
     * @type {Null|EventTarget}
     * @default null
     */
    inputTarget: null,

    /**
     * force an input class
     * @type {Null|Function}
     * @default null
     */
    inputClass: null,

    /**
     * Default recognizer setup when calling `Hammer()`
     * When creating a new Manager these will be skipped.
     * @type {Array}
     */
    preset: [
        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
        [RotateRecognizer, {enable: false}],
        [PinchRecognizer, {enable: false}, ['rotate']],
        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],
        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],
        [TapRecognizer],
        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],
        [PressRecognizer]
    ],

    /**
     * Some CSS properties can be used to improve the working of Hammer.
     * Add them to this method and they will be set when creating a new Manager.
     * @namespace
     */
    cssProps: {
        /**
         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userSelect: 'none',

        /**
         * Disable the Windows Phone grippers when pressing an element.
         * @type {String}
         * @default 'none'
         */
        touchSelect: 'none',

        /**
         * Disables the default callout shown when you touch and hold a touch target.
         * On iOS, when you touch and hold a touch target such as a link, Safari displays
         * a callout containing information about the link. This property allows you to disable that callout.
         * @type {String}
         * @default 'none'
         */
        touchCallout: 'none',

        /**
         * Specifies whether zooming is enabled. Used by IE10>
         * @type {String}
         * @default 'none'
         */
        contentZooming: 'none',

        /**
         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userDrag: 'none',

        /**
         * Overrides the highlight color shown when the user taps a link or a JavaScript
         * clickable element in iOS. This property obeys the alpha value, if specified.
         * @type {String}
         * @default 'rgba(0,0,0,0)'
         */
        tapHighlightColor: 'rgba(0,0,0,0)'
    }
};

var STOP = 1;
var FORCED_STOP = 2;

/**
 * Manager
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Manager(element, options) {
    this.options = assign({}, Hammer.defaults, options || {});

    this.options.inputTarget = this.options.inputTarget || element;

    this.handlers = {};
    this.session = {};
    this.recognizers = [];
    this.oldCssProps = {};

    this.element = element;
    this.input = createInputInstance(this);
    this.touchAction = new TouchAction(this, this.options.touchAction);

    toggleCssProps(this, true);

    each(this.options.recognizers, function(item) {
        var recognizer = this.add(new (item[0])(item[1]));
        item[2] && recognizer.recognizeWith(item[2]);
        item[3] && recognizer.requireFailure(item[3]);
    }, this);
}

Manager.prototype = {
    /**
     * set options
     * @param {Object} options
     * @returns {Manager}
     */
    set: function(options) {
        assign(this.options, options);

        // Options that need a little more setup
        if (options.touchAction) {
            this.touchAction.update();
        }
        if (options.inputTarget) {
            // Clean up existing event listeners and reinitialize
            this.input.destroy();
            this.input.target = options.inputTarget;
            this.input.init();
        }
        return this;
    },

    /**
     * stop recognizing for this session.
     * This session will be discarded, when a new [input]start event is fired.
     * When forced, the recognizer cycle is stopped immediately.
     * @param {Boolean} [force]
     */
    stop: function(force) {
        this.session.stopped = force ? FORCED_STOP : STOP;
    },

    /**
     * run the recognizers!
     * called by the inputHandler function on every movement of the pointers (touches)
     * it walks through all the recognizers and tries to detect the gesture that is being made
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        var session = this.session;
        if (session.stopped) {
            return;
        }

        // run the touch-action polyfill
        this.touchAction.preventDefaults(inputData);

        var recognizer;
        var recognizers = this.recognizers;

        // this holds the recognizer that is being recognized.
        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
        // if no recognizer is detecting a thing, it is set to `null`
        var curRecognizer = session.curRecognizer;

        // reset when the last recognizer is recognized
        // or when we're in a new session
        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {
            curRecognizer = session.curRecognizer = null;
        }

        var i = 0;
        while (i < recognizers.length) {
            recognizer = recognizers[i];

            // find out if we are allowed try to recognize the input for this one.
            // 1.   allow if the session is NOT forced stopped (see the .stop() method)
            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
            //      that is being recognized.
            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
            //      this can be setup with the `recognizeWith()` method on the recognizer.
            if (session.stopped !== FORCED_STOP && ( // 1
                    !curRecognizer || recognizer == curRecognizer || // 2
                    recognizer.canRecognizeWith(curRecognizer))) { // 3
                recognizer.recognize(inputData);
            } else {
                recognizer.reset();
            }

            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
            // current active recognizer. but only if we don't already have an active recognizer
            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
                curRecognizer = session.curRecognizer = recognizer;
            }
            i++;
        }
    },

    /**
     * get a recognizer by its event name.
     * @param {Recognizer|String} recognizer
     * @returns {Recognizer|Null}
     */
    get: function(recognizer) {
        if (recognizer instanceof Recognizer) {
            return recognizer;
        }

        var recognizers = this.recognizers;
        for (var i = 0; i < recognizers.length; i++) {
            if (recognizers[i].options.event == recognizer) {
                return recognizers[i];
            }
        }
        return null;
    },

    /**
     * add a recognizer to the manager
     * existing recognizers with the same event name will be removed
     * @param {Recognizer} recognizer
     * @returns {Recognizer|Manager}
     */
    add: function(recognizer) {
        if (invokeArrayArg(recognizer, 'add', this)) {
            return this;
        }

        // remove existing
        var existing = this.get(recognizer.options.event);
        if (existing) {
            this.remove(existing);
        }

        this.recognizers.push(recognizer);
        recognizer.manager = this;

        this.touchAction.update();
        return recognizer;
    },

    /**
     * remove a recognizer by name or instance
     * @param {Recognizer|String} recognizer
     * @returns {Manager}
     */
    remove: function(recognizer) {
        if (invokeArrayArg(recognizer, 'remove', this)) {
            return this;
        }

        recognizer = this.get(recognizer);

        // let's make sure this recognizer exists
        if (recognizer) {
            var recognizers = this.recognizers;
            var index = inArray(recognizers, recognizer);

            if (index !== -1) {
                recognizers.splice(index, 1);
                this.touchAction.update();
            }
        }

        return this;
    },

    /**
     * bind event
     * @param {String} events
     * @param {Function} handler
     * @returns {EventEmitter} this
     */
    on: function(events, handler) {
        if (events === undefined) {
            return;
        }
        if (handler === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            handlers[event] = handlers[event] || [];
            handlers[event].push(handler);
        });
        return this;
    },

    /**
     * unbind event, leave emit blank to remove all handlers
     * @param {String} events
     * @param {Function} [handler]
     * @returns {EventEmitter} this
     */
    off: function(events, handler) {
        if (events === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            if (!handler) {
                delete handlers[event];
            } else {
                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
            }
        });
        return this;
    },

    /**
     * emit event to the listeners
     * @param {String} event
     * @param {Object} data
     */
    emit: function(event, data) {
        // we also want to trigger dom events
        if (this.options.domEvents) {
            triggerDomEvent(event, data);
        }

        // no handlers, so skip it all
        var handlers = this.handlers[event] && this.handlers[event].slice();
        if (!handlers || !handlers.length) {
            return;
        }

        data.type = event;
        data.preventDefault = function() {
            data.srcEvent.preventDefault();
        };

        var i = 0;
        while (i < handlers.length) {
            handlers[i](data);
            i++;
        }
    },

    /**
     * destroy the manager and unbinds all events
     * it doesn't unbind dom events, that is the user own responsibility
     */
    destroy: function() {
        this.element && toggleCssProps(this, false);

        this.handlers = {};
        this.session = {};
        this.input.destroy();
        this.element = null;
    }
};

/**
 * add/remove the css properties as defined in manager.options.cssProps
 * @param {Manager} manager
 * @param {Boolean} add
 */
function toggleCssProps(manager, add) {
    var element = manager.element;
    if (!element.style) {
        return;
    }
    var prop;
    each(manager.options.cssProps, function(value, name) {
        prop = prefixed(element.style, name);
        if (add) {
            manager.oldCssProps[prop] = element.style[prop];
            element.style[prop] = value;
        } else {
            element.style[prop] = manager.oldCssProps[prop] || '';
        }
    });
    if (!add) {
        manager.oldCssProps = {};
    }
}

/**
 * trigger dom event
 * @param {String} event
 * @param {Object} data
 */
function triggerDomEvent(event, data) {
    var gestureEvent = document.createEvent('Event');
    gestureEvent.initEvent(event, true, true);
    gestureEvent.gesture = data;
    data.target.dispatchEvent(gestureEvent);
}

assign(Hammer, {
    INPUT_START: INPUT_START,
    INPUT_MOVE: INPUT_MOVE,
    INPUT_END: INPUT_END,
    INPUT_CANCEL: INPUT_CANCEL,

    STATE_POSSIBLE: STATE_POSSIBLE,
    STATE_BEGAN: STATE_BEGAN,
    STATE_CHANGED: STATE_CHANGED,
    STATE_ENDED: STATE_ENDED,
    STATE_RECOGNIZED: STATE_RECOGNIZED,
    STATE_CANCELLED: STATE_CANCELLED,
    STATE_FAILED: STATE_FAILED,

    DIRECTION_NONE: DIRECTION_NONE,
    DIRECTION_LEFT: DIRECTION_LEFT,
    DIRECTION_RIGHT: DIRECTION_RIGHT,
    DIRECTION_UP: DIRECTION_UP,
    DIRECTION_DOWN: DIRECTION_DOWN,
    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
    DIRECTION_VERTICAL: DIRECTION_VERTICAL,
    DIRECTION_ALL: DIRECTION_ALL,

    Manager: Manager,
    Input: Input,
    TouchAction: TouchAction,

    TouchInput: TouchInput,
    MouseInput: MouseInput,
    PointerEventInput: PointerEventInput,
    TouchMouseInput: TouchMouseInput,
    SingleTouchInput: SingleTouchInput,

    Recognizer: Recognizer,
    AttrRecognizer: AttrRecognizer,
    Tap: TapRecognizer,
    Pan: PanRecognizer,
    Swipe: SwipeRecognizer,
    Pinch: PinchRecognizer,
    Rotate: RotateRecognizer,
    Press: PressRecognizer,

    on: addEventListeners,
    off: removeEventListeners,
    each: each,
    merge: merge,
    extend: extend,
    assign: assign,
    inherit: inherit,
    bindFn: bindFn,
    prefixed: prefixed
});

// this prevents errors when Hammer is loaded in the presence of an AMD
//  style loader but by script tag, not by the loader.
var freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line
freeGlobal.Hammer = Hammer;

if (typeof define === 'function' && define.amd) {
    define('jquery-weui',[],function() {
        return Hammer;
    });
} else if (typeof module != 'undefined' && module.exports) {
    module.exports = Hammer;
} else {
    window[exportName] = Hammer;
}

})(window, document, 'Hammer');

+ function($) {
  "use strict";

  var defaults;
  
  $.modal = function(params, onOpen) {
    params = $.extend({}, defaults, params);


    var buttons = params.buttons;

    var buttonsHtml = buttons.map(function(d, i) {
      return '<a href="javascript:;" class="weui_btn_dialog ' + (d.className || "") + '">' + d.text + '</a>';
    }).join("");

    var tpl = '<div class="weui_dialog">' +
                '<div class="weui_dialog_hd"><strong class="weui_dialog_title">' + params.title + '</strong></div>' +
                ( params.text ? '<div class="weui_dialog_bd">'+params.text+'</div>' : '')+
                '<div class="weui_dialog_ft">' + buttonsHtml + '</div>' +
              '</div>';
    
    var dialog = $.openModal(tpl, onOpen);

    dialog.find(".weui_btn_dialog").each(function(i, e) {
      var el = $(e);
      el.click(function() {
        //先关闭对话框，再调用回调函数
        if(params.autoClose) $.closeModal();

        if(buttons[i].onClick) {
          buttons[i].onClick.call(dialog);
        }
      });
    });

    return dialog;
  };

  $.openModal = function(tpl, onOpen) {
    var mask = $("<div class='weui_mask'></div>").appendTo(document.body);
    mask.show();

    var dialog = $(tpl).appendTo(document.body);
 
    if (onOpen) {
      dialog.transitionEnd(function () {
        onOpen.call(dialog);
      });
    }   

    dialog.show();
    mask.addClass("weui_mask_visible");
    dialog.addClass("weui_dialog_visible");


    return dialog;
  }

  $.closeModal = function() {
    $(".weui_mask_visible").removeClass("weui_mask_visible").transitionEnd(function() {
      $(this).remove();
    });
    $(".weui_dialog_visible").removeClass("weui_dialog_visible").transitionEnd(function() {
      $(this).remove();
    });
  };

  $.alert = function(text, title, onOK) {
    var config;
    if (typeof text === 'object') {
      config = text;
    } else {
      if (typeof title === 'function') {
        onOK = arguments[1];
        title = undefined;
      }

      config = {
        text: text,
        title: title,
        onOK: onOK
      }
    }
    return $.modal({
      text: config.text,
      title: config.title,
      buttons: [{
        text: defaults.buttonOK,
        className: "primary",
        onClick: config.onOK
      }]
    });
  }

  $.confirm = function(text, title, onOK, onCancel) {
    var config;
    if (typeof text === 'object') {
      config = text
    } else {
      if (typeof title === 'function') {
        onCancel = arguments[2];
        onOK = arguments[1];
        title = undefined;
      }

      config = {
        text: text,
        title: title,
        onOK: onOK,
        onCancel: onCancel
      }
    }
    return $.modal({
      text: config.text,
      title: config.title,
      buttons: [
      {
        text: defaults.buttonCancel,
        className: "default",
        onClick: config.onCancel
      },
      {
        text: defaults.buttonOK,
        className: "primary",
        onClick: config.onOK
      }]
    });
  };

  //如果参数过多，建议通过 config 对象进行配置，而不是传入多个参数。
  $.prompt = function(text, title, onOK, onCancel, input) {
    var config;
    if (typeof text === 'object') {
      config = text;
    } else {
      if (typeof title === 'function') {
        input = arguments[3];
        onCancel = arguments[2];
        onOK = arguments[1];
        title = undefined;
      }
      config = {
        text: text,
        title: title,
        input: input,
        onOK: onOK,
        onCancel: onCancel,
        empty: false  //allow empty
      }
    }

    var modal = $.modal({
      text: '<p class="weui-prompt-text">'+(config.text || '')+'</p><input type="text" class="weui_input weui-prompt-input" id="weui-prompt-input" value="' + (config.input || '') + '" />',
      title: config.title,
      autoClose: false,
      buttons: [
      {
        text: defaults.buttonCancel,
        className: "default",
        onClick: function () {
          $.closeModal();
          config.onCancel && config.onCancel.call(modal);
        }
      },
      {
        text: defaults.buttonOK,
        className: "primary",
        onClick: function() {
          var input = $("#weui-prompt-input").val();
          if (!config.empty && (input === "" || input === null)) {
            modal.find('.weui-prompt-input').focus()[0].select();
            return false;
          }
          $.closeModal();
          config.onOK && config.onOK.call(modal, input);
        }
      }]
    }, function () {
      this.find('.weui-prompt-input').focus()[0].select();
    });

    return modal;
  };

  //如果参数过多，建议通过 config 对象进行配置，而不是传入多个参数。
  $.login = function(text, title, onOK, onCancel, username, password) {
    var config;
    if (typeof text === 'object') {
      config = text;
    } else {
      if (typeof title === 'function') {
        password = arguments[4];
        username = arguments[3];
        onCancel = arguments[2];
        onOK = arguments[1];
        title = undefined;
      }
      config = {
        text: text,
        title: title,
        username: username,
        password: password,
        onOK: onOK,
        onCancel: onCancel
      }
    }

    var modal = $.modal({
      text: '<p class="weui-prompt-text">'+(config.text || '')+'</p>' +
            '<input type="text" class="weui_input weui-prompt-input" id="weui-prompt-username" value="' + (config.username || '') + '" placeholder="输入用户名" />' +
            '<input type="password" class="weui_input weui-prompt-input" id="weui-prompt-password" value="' + (config.password || '') + '" placeholder="输入密码" />',
      title: config.title,
      autoClose: false,
      buttons: [
      {
        text: defaults.buttonCancel,
        className: "default",
        onClick: function () {
          $.closeModal();
          config.onCancel && config.onCancel.call(modal);
        }
      }, {
        text: defaults.buttonOK,
        className: "primary",
        onClick: function() {
          var username = $("#weui-prompt-username").val();
          var password = $("#weui-prompt-password").val();
          if (!config.empty && (username === "" || username === null)) {
            modal.find('#weui-prompt-username').focus()[0].select();
            return false;
          }
          if (!config.empty && (password === "" || password === null)) {
            modal.find('#weui-prompt-password').focus()[0].select();
            return false;
          }
          $.closeModal();
          config.onOK && config.onOK.call(modal, username, password);
        }
      }]
    }, function () {
      this.find('#weui-prompt-username').focus()[0].select();
    });

    return modal;
  };

  defaults = $.modal.prototype.defaults = {
    title: "提示",
    text: undefined,
    buttonOK: "确定",
    buttonCancel: "取消",
    buttons: [{
      text: "确定",
      className: "primary"
    }],
    autoClose: true //点击按钮自动关闭对话框，如果你不希望点击按钮就关闭对话框，可以把这个设置为false
  };

}($);

+ function($) {
  "use strict";

  var defaults;
  
  var show = function(html, className) {

    className = className || "";
    var mask = $("<div class='weui_mask_transparent'></div>").appendTo(document.body);

    var tpl = '<div class="weui_toast ' + className + '">' + html + '</div>';
    var dialog = $(tpl).appendTo(document.body);

    dialog.show();
    dialog.addClass("weui_toast_visible");
  };

  var hide = function(callback) {
    $(".weui_mask_transparent").remove();
    $(".weui_toast_visible").removeClass("weui_toast_visible").transitionEnd(function() {
      var $this = $(this);
      $this.remove();
      callback && callback($this);
    });
  }

  $.toast = function(text, style, callback) {
    if(typeof style === "function") {
      callback = style;
    }
    var className;
    if(style == "cancel") {
      className = "weui_toast_cancel";
    } else if(style == "forbidden") {
      className = "weui_toast_forbidden";
    } else if(style == "text") {
      className = "weui_toast_text";
    }
    show('<i class="weui_icon_toast"></i><p class="weui_toast_content">' + (text || "已经完成") + '</p>', className);

    setTimeout(function() {
      hide(callback);
    }, toastDefaults.duration);
  }

  $.showLoading = function(text) {
    var html = '<div class="weui_loading">';
    for(var i=0;i<12;i++) {
      html += '<div class="weui_loading_leaf weui_loading_leaf_' + i + '"></div>';
    }
    html += '</div>';
    html += '<p class="weui_toast_content">' + (text || "数据加载中") + '</p>';
    show(html, 'weui_loading_toast');

    if(arguments[1] && typeof arguments[1] == 'function'){
        arguments[1]();
    }
  }

  $.hideLoading = function() {
    hide();
  }

  var toastDefaults = $.toast.prototype.defaults = {
    duration: 2000
  }

}($);

+ function($) {
  "use strict";

  var defaults;
  
  var show = function(params) {

    var mask = $("<div class='weui_mask weui_actions_mask'></div>").appendTo(document.body);

    var actions = params.actions || [];

    var actionsHtml = actions.map(function(d, i) {
      return '<div class="weui_actionsheet_cell ' + (d.className || "") + '">' + d.text + '</div>';
    }).join("");

    var titleHtml = "";
    
    if (params.title) {
      titleHtml = '<div class="weui_actionsheet_title">' + params.title + '</div>';
    }

    var tpl = '<div class="weui_actionsheet " id="weui_actionsheet">'+
                titleHtml +
                '<div class="weui_actionsheet_menu">'+
                actionsHtml +
                '</div>'+
                '<div class="weui_actionsheet_action">'+
                  '<div class="weui_actionsheet_cell weui_actionsheet_cancel">取消</div>'+
                  '</div>'+
                '</div>';
    var dialog = $(tpl).appendTo(document.body);

    dialog.find(".weui_actionsheet_menu .weui_actionsheet_cell, .weui_actionsheet_action .weui_actionsheet_cell").each(function(i, e) {
      $(e).click(function() {
        $.closeActions();
        params.onClose && params.onClose();
        if(actions[i] && actions[i].onClick) {
          actions[i].onClick();
        }
      })
    });

    mask.show();
    dialog.show();
    mask.addClass("weui_mask_visible");
    dialog.addClass("weui_actionsheet_toggle");
  };

  var hide = function() {
    $(".weui_mask").removeClass("weui_mask_visible").transitionEnd(function() {
      $(this).remove();
    });
    $(".weui_actionsheet").removeClass("weui_actionsheet_toggle").transitionEnd(function() {
      $(this).remove();
    });
  }

  $.actions = function(params) {
    params = $.extend({}, defaults, params);
    show(params);
  }

  $.closeActions = function() {
    hide();
  }

  $(document).on("click", ".weui_actions_mask", function() {
    $.closeActions();
  });

  var defaults = $.actions.prototype.defaults = {
    title: undefined,
    onClose: undefined,
    /*actions: [{
      text: "菜单",
      className: "color-danger",
      onClick: function() {
        console.log(1);
      }
    },{
      text: "菜单2",
      className: "color-success",
      onClick: function() {
        console.log(2);
      }
    }]*/
  }

}($);

/* ===============================================================================
************   Pull to refreh ************
=============================================================================== */
/* global $:true */

+function ($) {
  "use strict";

  var PTR = function(el) {
    this.container = $(el);
    this.distance = 50;
    this.attachEvents();
  }

  PTR.prototype.touchStart = function(e) {
    if(this.container.hasClass("refreshing")) return;
    var p = $.getTouchPosition(e);
    this.start = p;
    this.diffX = this.diffY = 0;
  };

  PTR.prototype.touchMove= function(e) {
    if(this.container.hasClass("refreshing")) return;
    if(!this.start) return false;
    if(this.container.scrollTop() > 0) return;
    
    var p = $.getTouchPosition(e);
    this.diffX = p.x - this.start.x;
    this.diffY = p.y - this.start.y;
    if(this.diffY < 0) return;
    this.container.addClass("touching");
    e.preventDefault();
    // e.stopPropagation();
    this.diffY = Math.pow(this.diffY, 0.8);
    this.container.css("transform", "translate3d(0, "+this.diffY+"px, 0)");

    if(this.diffY < this.distance) {
      this.container.removeClass("pull-up").addClass("pull-down");
    } else {
      this.container.removeClass("pull-down").addClass("pull-up");
    }
  };
  PTR.prototype.touchEnd = function() {
    this.start = false;
    if(this.diffY <= 0 || this.container.hasClass("refreshing")) return;
    this.container.removeClass("touching");
    this.container.removeClass("pull-down pull-up");
    this.container.css("transform", "");
    if(Math.abs(this.diffY) <= this.distance) {
    } else {
      this.container.addClass("refreshing");
      this.container.trigger("pull-to-refresh");
    }
  };

  PTR.prototype.attachEvents = function() {
    var el = this.container;
    el.addClass("weui-pull-to-refresh");
    el.on($.touchEvents.start, $.proxy(this.touchStart, this));
    el.on($.touchEvents.move, $.proxy(this.touchMove, this));
    el.on($.touchEvents.end, $.proxy(this.touchEnd, this));
  };

  var pullToRefresh = function(el) {
    new PTR(el);
  };

  var pullToRefreshDone = function(el) {
    $(el).addClass('refreshing-done');
    setTimeout(function(){
        $(el).removeClass("refreshing").removeClass('refreshing-done');
    }, 500);
  }

  $.fn.pullToRefresh = function() {
    return this.each(function() {
      pullToRefresh(this);
    });
  }

  $.fn.pullToRefreshDone = function() {
    return this.each(function() {
      pullToRefreshDone(this);
    });
  }

}($);

/* ===============================================================================
************   Infinite ************
=============================================================================== */
/* global $:true */
+function ($) {
  "use strict";


  var Infinite = function(el, distance) {
    this.container = $(el);
    this.container.data("infinite", this);
    this.distance = distance || 50;
    this.attachEvents();
  }

  Infinite.prototype.scroll = function() {
    var container = this.container;
    var offset = container.scrollHeight() - ($(window).height() + container.scrollTop());
    if(offset <= this.distance) {
      container.trigger("infinite");
    }
  }

  Infinite.prototype.attachEvents = function(off) {
    var el = this.container;
    var scrollContainer = (el[0].tagName.toUpperCase() === "BODY" ? $(document) : el);
    scrollContainer[off ? "off" : "on"]("scroll", $.proxy(this.scroll, this));
  };
  Infinite.prototype.detachEvents = function(off) {
    this.attachEvents(true);
  }

  var infinite = function(el) {
    attachEvents(el);
  }

  $.fn.infinite = function(distance) {
    return this.each(function() {
      new Infinite(this, distance);
    });
  }
  $.fn.destroyInfinite = function() {
    return this.each(function() {
      var infinite = $(this).data("infinite");
      if(infinite && infinite.detachEvents) infinite.detachEvents();
    });
  }

}($);

/* global $:true */
+function ($) {
  "use strict";

  var ITEM_ON = "weui_bar_item_on";

  var showTab = function(a) {
    var $a = $(a);
    if($a.hasClass(ITEM_ON)) return;
    var href = $a.attr("href");

    if(!/^#/.test(href)) return ;

    $a.parent().find("."+ITEM_ON).removeClass(ITEM_ON);
    $a.addClass(ITEM_ON);

    var bd = $a.parents(".weui_tab").find(".weui_tab_bd");

    bd.find(".weui_tab_bd_item_active").removeClass("weui_tab_bd_item_active");

    $(href).addClass("weui_tab_bd_item_active");
  }

  $.showTab = showTab;

  $(document).on("click", ".weui_tabbar_item, .weui_navbar_item", function(e) {
    var $a = $(e.currentTarget);
    var href = $a.attr("href");
    if($a.hasClass(ITEM_ON)) return;
    if(!/^#/.test(href)) return;

    e.preventDefault();

    showTab($a);
  });

}($);


/* global $:true */
+ function($) {
  "use strict";

  $(document).on("click", ".weui_search_bar label", function(e) {
    $(e.target).parents(".weui_search_bar").addClass("weui_search_focusing");
  }) 
  .on("blur", ".weui_search_input", function(e) {
    var $input = $(e.target);
    if(!$input.val()) $input.parents(".weui_search_bar").removeClass("weui_search_focusing");
  })
  .on("click", ".weui_search_cancel", function(e) {
    var $input = $(e.target).parents(".weui_search_bar").removeClass("weui_search_focusing").find(".weui_search_input").val("").blur();
  })
  .on("click", ".weui_icon_clear", function(e) {
    var $input = $(e.target).parents(".weui_search_bar").find(".weui_search_input").val("").focus();
  });

}($);

/*===========================
Device/OS Detection
===========================*/
/* global $:true */
;(function ($) {
    "use strict";
    var device = {};
    var ua = navigator.userAgent;

    var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
    var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
    var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
    var iphone = !ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);

    device.ios = device.android = device.iphone = device.ipad = device.androidChrome = false;
    
    // Android
    if (android) {
        device.os = 'android';
        device.osVersion = android[2];
        device.android = true;
        device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;
    }
    if (ipad || iphone || ipod) {
        device.os = 'ios';
        device.ios = true;
    }
    // iOS
    if (iphone && !ipod) {
        device.osVersion = iphone[2].replace(/_/g, '.');
        device.iphone = true;
    }
    if (ipad) {
        device.osVersion = ipad[2].replace(/_/g, '.');
        device.ipad = true;
    }
    if (ipod) {
        device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;
        device.iphone = true;
    }
    // iOS 8+ changed UA
    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {
        if (device.osVersion.split('.')[0] === '10') {
            device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];
        }
    }

    // Webview
    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);
        
    // Minimal UI
    if (device.os && device.os === 'ios') {
        var osVersionArr = device.osVersion.split('.');
        device.minimalUi = !device.webView &&
                            (ipod || iphone) &&
                            (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&
                            $('meta[name="viewport"]').length > 0 && $('meta[name="viewport"]').attr('content').indexOf('minimal-ui') >= 0;
    }

    // Check for status bar and fullscreen app mode
    var windowWidth = $(window).width();
    var windowHeight = $(window).height();
    device.statusBar = false;
    if (device.webView && (windowWidth * windowHeight === screen.width * screen.height)) {
        device.statusBar = true;
    }
    else {
        device.statusBar = false;
    }

    // Classes
    var classNames = [];

    // Pixel Ratio
    device.pixelRatio = window.devicePixelRatio || 1;
    classNames.push('pixel-ratio-' + Math.floor(device.pixelRatio));
    if (device.pixelRatio >= 2) {
        classNames.push('retina');
    }

    // OS classes
    if (device.os) {
        classNames.push(device.os, device.os + '-' + device.osVersion.split('.')[0], device.os + '-' + device.osVersion.replace(/\./g, '-'));
        if (device.os === 'ios') {
            var major = parseInt(device.osVersion.split('.')[0], 10);
            for (var i = major - 1; i >= 6; i--) {
                classNames.push('ios-gt-' + i);
            }
        }
        
    }
    // Status bar classes
    if (device.statusBar) {
        classNames.push('with-statusbar-overlay');
    }
    else {
        $('html').removeClass('with-statusbar-overlay');
    }

    // Add html classes
    if (classNames.length > 0) $('html').addClass(classNames.join(' '));

    $.device = device;
})($);

/*======================================================
************   Picker   ************
======================================================*/
/* global $:true */
/* jshint unused:false */
/* jshint multistr:true */
+ function($) {
  "use strict";
  var Picker = function (params) {
      var p = this;
      var defaults = {
          updateValuesOnMomentum: false,
          updateValuesOnTouchmove: true,
          rotateEffect: false,
          momentumRatio: 7,
          freeMode: false,
          // Common settings
          scrollToInput: true,
          inputReadOnly: true,
          toolbar: true,
          toolbarCloseText: '完成',
          title: '请选择',
          toolbarTemplate: '<div class="toolbar">\
          <div class="toolbar-inner">\
          <a href="javascript:;" class="picker-button close-picker">{{closeText}}</a>\
          <h1 class="title">{{title}}</h1>\
          </div>\
          </div>',
      };
      params = params || {};
      for (var def in defaults) {
          if (typeof params[def] === 'undefined') {
              params[def] = defaults[def];
          }
      }
      p.params = params;
      p.cols = [];
      p.initialized = false;
      
      // Inline flag
      p.inline = p.params.container ? true : false;

      // 3D Transforms origin bug, only on safari
      var originBug = $.device.ios || (navigator.userAgent.toLowerCase().indexOf('safari') >= 0 && navigator.userAgent.toLowerCase().indexOf('chrome') < 0) && !$.device.android;

      // Should be converted to popover
      function isPopover() {
          var toPopover = false;
          if (!p.params.convertToPopover && !p.params.onlyInPopover) return toPopover;
          if (!p.inline && p.params.input) {
              if (p.params.onlyInPopover) toPopover = true;
              else {
                  if ($.device.ios) {
                      toPopover = $.device.ipad ? true : false;
                  }
                  else {
                      if ($(window).width() >= 768) toPopover = true;
                  }
              }
          } 
          return toPopover; 
      }
      function inPopover() {
          if (p.opened && p.container && p.container.length > 0 && p.container.parents('.popover').length > 0) return true;
          else return false;
      }

      // Value
      p.setValue = function (arrValues, transition) {
          var valueIndex = 0;
          for (var i = 0; i < p.cols.length; i++) {
              if (p.cols[i] && !p.cols[i].divider) {
                  p.cols[i].setValue(arrValues[valueIndex], transition);
                  valueIndex++;
              }
          }
      };
      p.updateValue = function () {
          var newValue = [];
          var newDisplayValue = [];
          for (var i = 0; i < p.cols.length; i++) {
              if (!p.cols[i].divider) {
                  newValue.push(p.cols[i].value);
                  newDisplayValue.push(p.cols[i].displayValue);
              }
          }
          if (newValue.indexOf(undefined) >= 0) {
              return;
          }
          p.value = newValue;
          p.displayValue = newDisplayValue;
          if (p.params.onChange) {
              p.params.onChange(p, p.value, p.displayValue);
          }
          if (p.input && p.input.length > 0) {
              $(p.input).val(p.params.formatValue ? p.params.formatValue(p, p.value, p.displayValue) : p.value.join(' '));
              $(p.input).trigger('change');
          }
      };

      // Columns Handlers
      p.initPickerCol = function (colElement, updateItems) {
          var colContainer = $(colElement);
          var colIndex = colContainer.index();
          var col = p.cols[colIndex];
          if (col.divider) return;
          col.container = colContainer;
          col.wrapper = col.container.find('.picker-items-col-wrapper');
          col.items = col.wrapper.find('.picker-item');
          
          var i, j;
          var wrapperHeight, itemHeight, itemsHeight, minTranslate, maxTranslate;
          col.replaceValues = function (values, displayValues) {
              col.destroyEvents();
              col.values = values;
              col.displayValues = displayValues;
              var newItemsHTML = p.columnHTML(col, true);
              col.wrapper.html(newItemsHTML);
              col.items = col.wrapper.find('.picker-item');
              col.calcSize();
              col.setValue(col.values[0], 0, true);
              col.initEvents();
          };
          col.calcSize = function () {
              if (p.params.rotateEffect) {
                  col.container.removeClass('picker-items-col-absolute');
                  if (!col.width) col.container.css({width:''});
              }
              var colWidth, colHeight;
              colWidth = 0;
              colHeight = col.container[0].offsetHeight;
              wrapperHeight = col.wrapper[0].offsetHeight;
              itemHeight = col.items[0].offsetHeight;
              itemsHeight = itemHeight * col.items.length;
              minTranslate = colHeight / 2 - itemsHeight + itemHeight / 2;
              maxTranslate = colHeight / 2 - itemHeight / 2;    
              if (col.width) {
                  colWidth = col.width;
                  if (parseInt(colWidth, 10) === colWidth) colWidth = colWidth + 'px';
                  col.container.css({width: colWidth});
              }
              if (p.params.rotateEffect) {
                  if (!col.width) {
                      col.items.each(function () {
                          var item = $(this);
                          item.css({width:'auto'});
                          colWidth = Math.max(colWidth, item[0].offsetWidth);
                          item.css({width:''});
                      });
                      col.container.css({width: (colWidth + 2) + 'px'});
                  }
                  col.container.addClass('picker-items-col-absolute');
              }
          };
          col.calcSize();
          
          col.wrapper.transform('translate3d(0,' + maxTranslate + 'px,0)').transition(0);


          var activeIndex = 0;
          var animationFrameId;

          // Set Value Function
          col.setValue = function (newValue, transition, valueCallbacks) {
              if (typeof transition === 'undefined') transition = '';
              var newActiveIndex = col.wrapper.find('.picker-item[data-picker-value="' + newValue + '"]').index();
              if(typeof newActiveIndex === 'undefined' || newActiveIndex === -1) {
                  return;
              }
              var newTranslate = -newActiveIndex * itemHeight + maxTranslate;
              // Update wrapper
              col.wrapper.transition(transition);
              col.wrapper.transform('translate3d(0,' + (newTranslate) + 'px,0)');
                  
              // Watch items
              if (p.params.updateValuesOnMomentum && col.activeIndex && col.activeIndex !== newActiveIndex ) {
                  $.cancelAnimationFrame(animationFrameId);
                  col.wrapper.transitionEnd(function(){
                      $.cancelAnimationFrame(animationFrameId);
                  });
                  updateDuringScroll();
              }

              // Update items
              col.updateItems(newActiveIndex, newTranslate, transition, valueCallbacks);
          };

          col.updateItems = function (activeIndex, translate, transition, valueCallbacks) {
              if (typeof translate === 'undefined') {
                  translate = $.getTranslate(col.wrapper[0], 'y');
              }
              if(typeof activeIndex === 'undefined') activeIndex = -Math.round((translate - maxTranslate)/itemHeight);
              if (activeIndex < 0) activeIndex = 0;
              if (activeIndex >= col.items.length) activeIndex = col.items.length - 1;
              var previousActiveIndex = col.activeIndex;
              col.activeIndex = activeIndex;
              /*
              col.wrapper.find('.picker-selected, .picker-after-selected, .picker-before-selected').removeClass('picker-selected picker-after-selected picker-before-selected');

              col.items.transition(transition);
              var selectedItem = col.items.eq(activeIndex).addClass('picker-selected').transform('');
              var prevItems = selectedItem.prevAll().addClass('picker-before-selected');
              var nextItems = selectedItem.nextAll().addClass('picker-after-selected');
              */
              //去掉 .picker-after-selected, .picker-before-selected 以提高性能
              col.wrapper.find('.picker-selected').removeClass('picker-selected');
              if (p.params.rotateEffect) {
                col.items.transition(transition);
              }
              var selectedItem = col.items.eq(activeIndex).addClass('picker-selected').transform('');

              if (valueCallbacks || typeof valueCallbacks === 'undefined') {
                  // Update values
                  col.value = selectedItem.attr('data-picker-value');
                  col.displayValue = col.displayValues ? col.displayValues[activeIndex] : col.value;
                  // On change callback
                  if (previousActiveIndex !== activeIndex) {
                      if (col.onChange) {
                          col.onChange(p, col.value, col.displayValue);
                      }
                      p.updateValue();
                  }
              }
                  
              // Set 3D rotate effect
              if (!p.params.rotateEffect) {
                  return;
              }
              var percentage = (translate - (Math.floor((translate - maxTranslate)/itemHeight) * itemHeight + maxTranslate)) / itemHeight;
              
              col.items.each(function () {
                  var item = $(this);
                  var itemOffsetTop = item.index() * itemHeight;
                  var translateOffset = maxTranslate - translate;
                  var itemOffset = itemOffsetTop - translateOffset;
                  var percentage = itemOffset / itemHeight;

                  var itemsFit = Math.ceil(col.height / itemHeight / 2) + 1;
                  
                  var angle = (-18*percentage);
                  if (angle > 180) angle = 180;
                  if (angle < -180) angle = -180;
                  // Far class
                  if (Math.abs(percentage) > itemsFit) item.addClass('picker-item-far');
                  else item.removeClass('picker-item-far');
                  // Set transform
                  item.transform('translate3d(0, ' + (-translate + maxTranslate) + 'px, ' + (originBug ? -110 : 0) + 'px) rotateX(' + angle + 'deg)');
              });
          };

          function updateDuringScroll() {
              animationFrameId = $.requestAnimationFrame(function () {
                  col.updateItems(undefined, undefined, 0);
                  updateDuringScroll();
              });
          }

          // Update items on init
          if (updateItems) col.updateItems(0, maxTranslate, 0);

          var allowItemClick = true;
          var isTouched, isMoved, touchStartY, touchCurrentY, touchStartTime, touchEndTime, startTranslate, returnTo, currentTranslate, prevTranslate, velocityTranslate, velocityTime;
          function handleTouchStart (e) {
              if (isMoved || isTouched) return;
              e.preventDefault();
              isTouched = true;
              var position = $.getTouchPosition(e);
              touchStartY = touchCurrentY = position.y;
              touchStartTime = (new Date()).getTime();
              
              allowItemClick = true;
              startTranslate = currentTranslate = $.getTranslate(col.wrapper[0], 'y');
          }
          function handleTouchMove (e) {
              if (!isTouched) return;
              e.preventDefault();
              allowItemClick = false;
              var position = $.getTouchPosition(e);
              touchCurrentY = position.y;
              if (!isMoved) {
                  // First move
                  $.cancelAnimationFrame(animationFrameId);
                  isMoved = true;
                  startTranslate = currentTranslate = $.getTranslate(col.wrapper[0], 'y');
                  col.wrapper.transition(0);
              }
              e.preventDefault();

              var diff = touchCurrentY - touchStartY;
              currentTranslate = startTranslate + diff;
              returnTo = undefined;

              // Normalize translate
              if (currentTranslate < minTranslate) {
                  currentTranslate = minTranslate - Math.pow(minTranslate - currentTranslate, 0.8);
                  returnTo = 'min';
              }
              if (currentTranslate > maxTranslate) {
                  currentTranslate = maxTranslate + Math.pow(currentTranslate - maxTranslate, 0.8);
                  returnTo = 'max';
              }
              // Transform wrapper
              col.wrapper.transform('translate3d(0,' + currentTranslate + 'px,0)');

              // Update items
              col.updateItems(undefined, currentTranslate, 0, p.params.updateValuesOnTouchmove);
              
              // Calc velocity
              velocityTranslate = currentTranslate - prevTranslate || currentTranslate;
              velocityTime = (new Date()).getTime();
              prevTranslate = currentTranslate;
          }
          function handleTouchEnd (e) {
              if (!isTouched || !isMoved) {
                  isTouched = isMoved = false;
                  return;
              }
              isTouched = isMoved = false;
              col.wrapper.transition('');
              if (returnTo) {
                  if (returnTo === 'min') {
                      col.wrapper.transform('translate3d(0,' + minTranslate + 'px,0)');
                  }
                  else col.wrapper.transform('translate3d(0,' + maxTranslate + 'px,0)');
              }
              touchEndTime = new Date().getTime();
              var velocity, newTranslate;
              if (touchEndTime - touchStartTime > 300) {
                  newTranslate = currentTranslate;
              }
              else {
                  velocity = Math.abs(velocityTranslate / (touchEndTime - velocityTime));
                  newTranslate = currentTranslate + velocityTranslate * p.params.momentumRatio;
              }

              newTranslate = Math.max(Math.min(newTranslate, maxTranslate), minTranslate);

              // Active Index
              var activeIndex = -Math.floor((newTranslate - maxTranslate)/itemHeight);

              // Normalize translate
              if (!p.params.freeMode) newTranslate = -activeIndex * itemHeight + maxTranslate;

              // Transform wrapper
              col.wrapper.transform('translate3d(0,' + (parseInt(newTranslate,10)) + 'px,0)');

              // Update items
              col.updateItems(activeIndex, newTranslate, '', true);

              // Watch items
              if (p.params.updateValuesOnMomentum) {
                  updateDuringScroll();
                  col.wrapper.transitionEnd(function(){
                      $.cancelAnimationFrame(animationFrameId);
                  });
              }

              // Allow click
              setTimeout(function () {
                  allowItemClick = true;
              }, 100);
          }

          function handleClick(e) {
              if (!allowItemClick) return;
              $.cancelAnimationFrame(animationFrameId);
              /*jshint validthis:true */
              var value = $(this).attr('data-picker-value');
              col.setValue(value);
          }

          col.initEvents = function (detach) {
              var method = detach ? 'off' : 'on';
              col.container[method]($.touchEvents.start, handleTouchStart);
              col.container[method]($.touchEvents.move, handleTouchMove);
              col.container[method]($.touchEvents.end, handleTouchEnd);
              col.items[method]('click', handleClick);
          };
          col.destroyEvents = function () {
              col.initEvents(true);
          };

          col.container[0].f7DestroyPickerCol = function () {
              col.destroyEvents();
          };

          col.initEvents();

      };
      p.destroyPickerCol = function (colContainer) {
          colContainer = $(colContainer);
          if ('f7DestroyPickerCol' in colContainer[0]) colContainer[0].f7DestroyPickerCol();
      };
      // Resize cols
      function resizeCols() {
          if (!p.opened) return;
          for (var i = 0; i < p.cols.length; i++) {
              if (!p.cols[i].divider) {
                  p.cols[i].calcSize();
                  p.cols[i].setValue(p.cols[i].value, 0, false);
              }
          }
      }
      $(window).on('resize', resizeCols);

      // HTML Layout
      p.columnHTML = function (col, onlyItems) {
          var columnItemsHTML = '';
          var columnHTML = '';
          if (col.divider) {
              columnHTML += '<div class="picker-items-col picker-items-col-divider ' + (col.textAlign ? 'picker-items-col-' + col.textAlign : '') + ' ' + (col.cssClass || '') + '">' + col.content + '</div>';
          }
          else {
              for (var j = 0; j < col.values.length; j++) {
                  columnItemsHTML += '<div class="picker-item" data-picker-value="' + col.values[j] + '">' + (col.displayValues ? col.displayValues[j] : col.values[j]) + '</div>';
              }
              columnHTML += '<div class="picker-items-col ' + (col.textAlign ? 'picker-items-col-' + col.textAlign : '') + ' ' + (col.cssClass || '') + '"><div class="picker-items-col-wrapper">' + columnItemsHTML + '</div></div>';
          }
          return onlyItems ? columnItemsHTML : columnHTML;
      };
      p.layout = function () {
          var pickerHTML = '';
          var pickerClass = '';
          var i;
          p.cols = [];
          var colsHTML = '';
          for (i = 0; i < p.params.cols.length; i++) {
              var col = p.params.cols[i];
              colsHTML += p.columnHTML(p.params.cols[i]);
              p.cols.push(col);
          }
          pickerClass = 'weui-picker-modal picker-columns ' + (p.params.cssClass || '') + (p.params.rotateEffect ? ' picker-3d' : '') + (p.params.cols.length === 1 ? ' picker-columns-single' : '');
          pickerHTML =
              '<div class="' + (pickerClass) + '">' +
                  (p.params.toolbar ? p.params.toolbarTemplate.replace(/{{closeText}}/g, p.params.toolbarCloseText).replace(/{{title}}/g, p.params.title) : '') +
                  '<div class="picker-modal-inner picker-items">' +
                      colsHTML +
                      '<div class="picker-center-highlight"></div>' +
                  '</div>' +
              '</div>';
              
          p.pickerHTML = pickerHTML;    
      };

      // Input Events
      function openOnInput(e) {
          e.preventDefault();
          if (p.opened) return;
          p.open();
          if (p.params.scrollToInput && !isPopover()) {
              var pageContent = p.input.parents('.content');
              if (pageContent.length === 0) return;

              var paddingTop = parseInt(pageContent.css('padding-top'), 10),
                  paddingBottom = parseInt(pageContent.css('padding-bottom'), 10),
                  pageHeight = pageContent[0].offsetHeight - paddingTop - p.container.height(),
                  pageScrollHeight = pageContent[0].scrollHeight - paddingTop - p.container.height(),
                  newPaddingBottom;
              var inputTop = p.input.offset().top - paddingTop + p.input[0].offsetHeight;
              if (inputTop > pageHeight) {
                  var scrollTop = pageContent.scrollTop() + inputTop - pageHeight;
                  if (scrollTop + pageHeight > pageScrollHeight) {
                      newPaddingBottom = scrollTop + pageHeight - pageScrollHeight + paddingBottom;
                      if (pageHeight === pageScrollHeight) {
                          newPaddingBottom = p.container.height();
                      }
                      pageContent.css({'padding-bottom': (newPaddingBottom) + 'px'});
                  }
                  pageContent.scrollTop(scrollTop, 300);
              }
          }
      }
      function closeOnHTMLClick(e) {
          if (inPopover()) return;
          if (p.input && p.input.length > 0) {
              if (e.target !== p.input[0] && $(e.target).parents('.weui-picker-modal').length === 0) p.close();
          }
          else {
              if ($(e.target).parents('.weui-picker-modal').length === 0) p.close();   
          }
      }

      if (p.params.input) {
          p.input = $(p.params.input);
          if (p.input.length > 0) {
              if (p.params.inputReadOnly) p.input.prop('readOnly', true);
              if (!p.inline) {
                  p.input.on('click', openOnInput);    
              }
              if (p.params.inputReadOnly) {
                  p.input.on('focus mousedown', function (e) {
                      e.preventDefault();
                  });
              }
          }
              
      }
      
      if (!p.inline) $('html').on('click', closeOnHTMLClick);

      // Open
      function onPickerClose() {
          p.opened = false;
          if (p.input && p.input.length > 0) p.input.parents('.page-content').css({'padding-bottom': ''});
          if (p.params.onClose) p.params.onClose(p);

          // Destroy events
          p.container.find('.picker-items-col').each(function () {
              p.destroyPickerCol(this);
          });
      }

      p.opened = false;
      p.open = function () {
          var toPopover = isPopover();

          if (!p.opened) {

              // Layout
              p.layout();

              // Append
              if (toPopover) {
                  p.pickerHTML = '<div class="popover popover-picker-columns"><div class="popover-inner">' + p.pickerHTML + '</div></div>';
                  p.popover = $.popover(p.pickerHTML, p.params.input, true);
                  p.container = $(p.popover).find('.weui-picker-modal');
                  $(p.popover).on('close', function () {
                      onPickerClose();
                  });
              }
              else if (p.inline) {
                  p.container = $(p.pickerHTML);
                  p.container.addClass('picker-modal-inline');
                  $(p.params.container).append(p.container);
              }
              else {
                  p.container = $($.openPicker(p.pickerHTML));
                  $(p.container)
                  .on('close', function () {
                      onPickerClose();
                  });
              }

              // Store picker instance
              p.container[0].f7Picker = p;

              // Init Events
              p.container.find('.picker-items-col').each(function () {
                  var updateItems = true;
                  if ((!p.initialized && p.params.value) || (p.initialized && p.value)) updateItems = false;
                  p.initPickerCol(this, updateItems);
              });
              
              // Set value
              if (!p.initialized) {
                  if (p.params.value) {
                      p.setValue(p.params.value, 0);
                  }
              }
              else {
                  if (p.value) p.setValue(p.value, 0);
              }
          }

          // Set flag
          p.opened = true;
          p.initialized = true;

          if (p.params.onOpen) p.params.onOpen(p);
      };

      // Close
      p.close = function (force) {
          if (!p.opened || p.inline) return;
          if (inPopover()) {
              $.closePicker(p.popover);
              return;
          }
          else {
              $.closePicker(p.container);
              return;
          }
      };

      // Destroy
      p.destroy = function () {
          p.close();
          if (p.params.input && p.input.length > 0) {
              p.input.off('click focus', openOnInput);
          }
          $('html').off('click', closeOnHTMLClick);
          $(window).off('resize', resizeCols);
      };

      if (p.inline) {
          p.open();
      }

      return p;
  };

  $(document).on("click", ".close-picker", function() {
    var pickerToClose = $('.weui-picker-modal.weui-picker-modal-visible');
    if (pickerToClose.length > 0) {
      $.closePicker(pickerToClose);
    }
  });

  //修复picker会滚动页面的bug
  $(document).on($.touchEvents.move, ".picker-modal-inner", function(e) {
    e.preventDefault();
  });


  $.openPicker = function(tpl, className, callback) {

    if(typeof className === "function") {
      callback = className;
      className = undefined;
    }

    $.closePicker();

    var container = $("<div class='weui-picker-container "+ (className || "") + "'></div>").appendTo(document.body);
    container.show();

    container.addClass("weui-picker-container-visible");

    //关于布局的问题，如果直接放在body上，则做动画的时候会撑开body高度而导致滚动条变化。
    var dialog = $(tpl).appendTo(container);
    
    dialog.width(); //通过取一次CSS值，强制浏览器不能把上下两行代码合并执行，因为合并之后会导致无法出现动画。

    dialog.addClass("weui-picker-modal-visible");

    callback && container.on("close", callback);

    return dialog;
  }

  $.updatePicker = function(tpl) {
    var container = $(".weui-picker-container-visible");
    if(!container[0]) return false;

    container.html("");

    var dialog = $(tpl).appendTo(container);

    dialog.addClass("weui-picker-modal-visible");

    return dialog;
  }

  $.closePicker = function(container, callback) {
    if(typeof container === "function") callback = container;
    $(".weui-picker-modal-visible").removeClass("weui-picker-modal-visible").transitionEnd(function() {
      $(this).parent().remove();
      callback && callback();
    }).trigger("close");
  };

  $.fn.picker = function(params) {
    var args = arguments;
    return this.each(function() {
      if(!this) return;
      var $this = $(this);
      
      var picker = $this.data("picker");
      if(!picker) {
        params = params || {};
        var inputValue = $this.val();
        if(params.value === undefined && inputValue !== "") {
          params.value = params.cols.length > 1 ? inputValue.split(" ") : [inputValue];
        }
        var p = $.extend({input: this}, params);
        picker = new Picker(p);
        $this.data("picker", picker);
      }
      if(typeof params === typeof "a") {
        picker[params].apply(picker, Array.prototype.slice.call(args, 1));
      }
    });
  };
}($);

/* global $:true */
+ function($) {
  "use strict";

  var defaults;

  var Select = function(input, config) {

    var self = this;
    this.config = config;

    //init empty data
    this.data = {
      values: '',
      titles: '',
      origins: [],
      length: 0
    };

    this.$input = $(input);
    this.$input.prop("readOnly", true);

    this.initConfig();

    config = this.config;

    this.$input.click($.proxy(this.open, this));

  }

  Select.prototype.initConfig = function() {
    this.config = $.extend({}, defaults, this.config);

    var config = this.config;

    if(!config.items || !config.items.length) return;

    config.items = config.items.map(function(d, i) {
      if(typeof d == typeof "a") {
        return {
          title: d,
          value: d
        };
      }

      return d;
    });


    this.tpl = $.t7.compile("<div class='weui-picker-modal weui-select-modal'>" + config.toolbarTemplate + (config.multi ? config.checkboxTemplate : config.radioTemplate) + "</div>");

    if(config.input !== undefined) this.$input.val(config.input);

    this.parseInitValue();

    this._init = true;
  }

  Select.prototype.updateInputValue = function(values, titles) {
    var v, t;
    if(this.config.multi) {
      v = values.join(this.config.split);
      t = titles.join(this.config.split);
    } else {
      v = values[0];
      t = titles[0];
    }

    //caculate origin data
    var origins = [];

    this.config.items.forEach(function(d) {
      values.each(function(i, dd) {
        if(d.value == dd) origins.push(d);
      });
    });

    this.$input.val(t).data("values", v);
    this.$input.attr("value", t).attr("data-values", v);

    var data = {
      values: v,
      titles: t,
      valuesArray: values,
      titlesArray: titles,
      origins: origins,
      length: origins.length
    };
    this.data = data;
    this.$input.trigger("change", data);
    this.config.onChange && this.config.onChange.call(this, data);
  }

  Select.prototype.parseInitValue = function() {
    var value = this.$input.val();
    var items = this.config.items;

    //如果input为空，只有在第一次初始化的时候才保留默认选择。因为后来就是用户自己取消了全部选择，不能再为他选中默认值。
    if( !this._init && (value === undefined || value == null || value === "")) return;

    var titles = this.config.multi ? value.split(this.config.split) : [value];
    for(var i=0;i<items.length;i++) {
      items[i].checked = false;
      for(var j=0;j<titles.length;j++) {
        if(items[i].title === titles[j]) {
          items[i].checked = true;
        }
      }
    }
  }

  Select.prototype._bind = function(dialog) {
    var self = this,
        config = this.config;
    dialog.on("change", function(e) {
      var checked = dialog.find("input:checked");
      var values = checked.map(function() {
        return $(this).val();
      });
      var titles = checked.map(function() {
        return $(this).data("title");
      });
      self.updateInputValue(values, titles);

      if(config.autoClose && !config.multi) $.closePicker();
    })
    .on("click", ".close-select", function() {
      self.close();
    });
  }

  //更新数据
  Select.prototype.update = function(config) {
    this.config = $.extend({}, this.config, config);
    this.initConfig();
    if(this._open) {
      this._bind($.updatePicker(this.getHTML()));
    }
  }
  
  Select.prototype.open = function(values, titles) {

    if(this._open) return;

    this.parseInitValue();

    var config = this.config;

    var dialog = this.dialog = $.openPicker(this.getHTML(), $.proxy(this.onClose, this));
    
    this._bind(dialog);

    this._open = true;
    if(config.onOpen) config.onOpen(this);
  }

  Select.prototype.close = function(callback, force) {
    var self = this,
        beforeClose = this.config.beforeClose;

    if(typeof callback === typeof true) {
      force === callback;
    }
    if(!force) {
      if(beforeClose && typeof beforeClose === 'function' && beforeClose.call(this, this.data.values, this.data.titles) === false) {
        return false
      }
      if(this.config.multi) {
        if(this.config.min !== undefined && this.data.length < this.config.min) {
          $.toast("请至少选择"+this.config.min+"个", "text");
          return false
        }
        if(this.config.max !== undefined && this.data.length > this.config.max) {
          $.toast("最多只能选择"+this.config.max+"个", "text");
          return false
        }
      }
    }
    $.closePicker(function() {
      self.onClose();
      callback && callback();
    });
  }

  Select.prototype.onClose = function() {
    this._open = false;
    if(this.config.onClose) this.config.onClose(this);
  }

  Select.prototype.getHTML = function(callback) {
    var config = this.config;
    return this.tpl({
      items: config.items,
      title: config.title,
      closeText: config.closeText
    })
  }


  $.fn.select = function(params, args) {

    return this.each(function() {
      var $this = $(this);
      if(!$this.data("weui-select")) $this.data("weui-select", new Select(this, params));

      var select = $this.data("weui-select");

      if(typeof params === typeof "a") select[params].call(select, args);

      return select;
    });
  }

  defaults = $.fn.select.prototype.defaults = {
    items: [],
    input: undefined, //输入框的初始值
    title: "请选择",
    multi: false,
    closeText: "确定",
    autoClose: true, //是否选择完成后自动关闭，只有单选模式下才有效
    onChange: undefined, //function
    beforeClose: undefined, // function 关闭之前，如果返回false则阻止关闭
    onClose: undefined, //function
    onOpen: undefined, //function
    split: ",",  //多选模式下的分隔符
    min: undefined, //多选模式下可用，最少选择数
    max: undefined, //单选模式下可用，最多选择数
    toolbarTemplate: '<div class="toolbar">\
      <div class="toolbar-inner">\
      <a href="javascript:;" class="picker-button close-select">{{closeText}}</a>\
      <h1 class="title">{{title}}</h1>\
      </div>\
      </div>',
    radioTemplate:
      '<div class="weui_cells weui_cells_radio">\
        {{#items}}\
        <label class="weui_cell weui_check_label" for="weui-select-id-{{this.title}}">\
          <div class="weui_cell_bd weui_cell_primary">\
            <p>{{this.title}}</p>\
          </div>\
          <div class="weui_cell_ft">\
            <input type="radio" class="weui_check" name="weui-select" id="weui-select-id-{{this.title}}" value="{{this.value}}" {{#if this.checked}}checked="checked"{{/if}} data-title="{{this.title}}">\
            <span class="weui_icon_checked"></span>\
          </div>\
        </label>\
        {{/items}}\
      </div>',
    checkboxTemplate:
      '<div class="weui_cells weui_cells_checkbox">\
        {{#items}}\
        <label class="weui_cell weui_check_label" for="weui-select-id-{{this.title}}">\
          <div class="weui_cell_bd weui_cell_primary">\
            <p>{{this.title}}</p>\
          </div>\
          <div class="weui_cell_ft">\
            <input type="checkbox" class="weui_check" name="weui-select" id="weui-select-id-{{this.title}}" value="{{this.value}}" {{#if this.checked}}checked="checked"{{/if}} data-title="{{this.title}}" >\
            <span class="weui_icon_checked"></span>\
          </div>\
        </label>\
        {{/items}}\
      </div>',
  }

}($);

/*======================================================
************   Calendar   ************
======================================================*/
/* global $:true */
/*jshint unused: false*/
+function ($) {
  "use strict";
  var rtl = false;
  var defaults;
  var Calendar = function (params) {
      var p = this;
      params = params || {};
      for (var def in defaults) {
          if (typeof params[def] === 'undefined') {
              params[def] = defaults[def];
          }
      }
      p.params = params;
      p.initialized = false;

      // Inline flag
      p.inline = p.params.container ? true : false;

      // Is horizontal
      p.isH = p.params.direction === 'horizontal';

      // RTL inverter
      var inverter = p.isH ? (rtl ? -1 : 1) : 1;

      // Animating flag
      p.animating = false;

      // Should be converted to popover
      function isPopover() {
          var toPopover = false;
          if (!p.params.convertToPopover && !p.params.onlyInPopover) return toPopover;
          if (!p.inline && p.params.input) {
              if (p.params.onlyInPopover) toPopover = true;
              else {
                  if ($.device.ios) {
                      toPopover = $.device.ipad ? true : false;
                  }
                  else {
                      if ($(window).width() >= 768) toPopover = true;
                  }
              }
          } 
          return toPopover; 
      }
      function inPopover() {
          if (p.opened && p.container && p.container.length > 0 && p.container.parents('.popover').length > 0) return true;
          else return false;
      }

      // Format date
      function formatDate(date) {
          date = new Date(date);
          var year = date.getFullYear();
          var month = date.getMonth();
          var month1 = month + 1;
          var day = date.getDate();
          var weekDay = date.getDay();
          return p.params.dateFormat
              .replace(/yyyy/g, year)
              .replace(/yy/g, (year + '').substring(2))
              .replace(/mm/g, month1 < 10 ? '0' + month1 : month1)
              .replace(/m/g, month1)
              .replace(/MM/g, p.params.monthNames[month])
              .replace(/M/g, p.params.monthNamesShort[month])
              .replace(/dd/g, day < 10 ? '0' + day : day)
              .replace(/d/g, day)
              .replace(/DD/g, p.params.dayNames[weekDay])
              .replace(/D/g, p.params.dayNamesShort[weekDay]);
      }


      // Value
      p.addValue = function (value) {
          if (p.params.multiple) {
              if (!p.value) p.value = [];
              var inValuesIndex;
              for (var i = 0; i < p.value.length; i++) {
                  if (new Date(value).getTime() === new Date(p.value[i]).getTime()) {
                      inValuesIndex = i;
                  }
              }
              if (typeof inValuesIndex === 'undefined') {
                  p.value.push(value);
              }
              else {
                  p.value.splice(inValuesIndex, 1);
              }
              p.updateValue();
          }
          else {
              p.value = [value];
              p.updateValue();
          }
      };
      p.setValue = function (arrValues) {
        var date = new Date(arrValues[0]);
        p.setYearMonth(date.getFullYear(), date.getMonth());
        p.addValue(+ date);
      };
      p.updateValue = function () {
          p.wrapper.find('.picker-calendar-day-selected').removeClass('picker-calendar-day-selected');
          var i, inputValue;
          for (i = 0; i < p.value.length; i++) {
              var valueDate = new Date(p.value[i]);
              p.wrapper.find('.picker-calendar-day[data-date="' + valueDate.getFullYear() + '-' + valueDate.getMonth() + '-' + valueDate.getDate() + '"]').addClass('picker-calendar-day-selected');
          }
          if (p.params.onChange) {
            p.params.onChange(p, p.value.map(formatDate), p.value.map(function (d) {
              return + new Date(typeof d === typeof 'a' ? d.split(/\D/).filter(function (a) { return !!a; }).join("-") : d);
            }));
          }
          if (p.input && p.input.length > 0) {
              if (p.params.formatValue) inputValue = p.params.formatValue(p, p.value);
              else {
                  inputValue = [];
                  for (i = 0; i < p.value.length; i++) {
                      inputValue.push(formatDate(p.value[i]));
                  }
                  inputValue = inputValue.join(', ');
              } 
              $(p.input).val(inputValue);
              $(p.input).trigger('change');
          }
      };

      // Columns Handlers
      p.initCalendarEvents = function () {
          var col;
          var allowItemClick = true;
          var isTouched, isMoved, touchStartX, touchStartY, touchCurrentX, touchCurrentY, touchStartTime, touchEndTime, startTranslate, currentTranslate, wrapperWidth, wrapperHeight, percentage, touchesDiff, isScrolling;
          function handleTouchStart (e) {
              if (isMoved || isTouched) return;
              // e.preventDefault();
              isTouched = true;
              var position = $.getTouchPosition(e);
              touchStartX = touchCurrentY = position.x;
              touchStartY = touchCurrentY = position.y;
              touchStartTime = (new Date()).getTime();
              percentage = 0;
              allowItemClick = true;
              isScrolling = undefined;
              startTranslate = currentTranslate = p.monthsTranslate;
          }
          function handleTouchMove (e) {
              if (!isTouched) return;
              var position = $.getTouchPosition(e);
              touchCurrentX = position.x;
              touchCurrentY = position.y;
              if (typeof isScrolling === 'undefined') {
                  isScrolling = !!(isScrolling || Math.abs(touchCurrentY - touchStartY) > Math.abs(touchCurrentX - touchStartX));
              }
              if (p.isH && isScrolling) {
                  isTouched = false;
                  return;
              }
              e.preventDefault();
              if (p.animating) {
                  isTouched = false;
                  return;   
              }
              allowItemClick = false;
              if (!isMoved) {
                  // First move
                  isMoved = true;
                  wrapperWidth = p.wrapper[0].offsetWidth;
                  wrapperHeight = p.wrapper[0].offsetHeight;
                  p.wrapper.transition(0);
              }
              e.preventDefault();

              touchesDiff = p.isH ? touchCurrentX - touchStartX : touchCurrentY - touchStartY;
              percentage = touchesDiff/(p.isH ? wrapperWidth : wrapperHeight);
              currentTranslate = (p.monthsTranslate * inverter + percentage) * 100;

              // Transform wrapper
              p.wrapper.transform('translate3d(' + (p.isH ? currentTranslate : 0) + '%, ' + (p.isH ? 0 : currentTranslate) + '%, 0)');

          }
          function handleTouchEnd (e) {
              if (!isTouched || !isMoved) {
                  isTouched = isMoved = false;
                  return;
              }
              isTouched = isMoved = false;
              
              touchEndTime = new Date().getTime();
              if (touchEndTime - touchStartTime < 300) {
                  if (Math.abs(touchesDiff) < 10) {
                      p.resetMonth();
                  }
                  else if (touchesDiff >= 10) {
                      if (rtl) p.nextMonth();
                      else p.prevMonth();
                  }
                  else {
                      if (rtl) p.prevMonth();
                      else p.nextMonth();   
                  }
              }
              else {
                  if (percentage <= -0.5) {
                      if (rtl) p.prevMonth();
                      else p.nextMonth();
                  }
                  else if (percentage >= 0.5) {
                      if (rtl) p.nextMonth();
                      else p.prevMonth();
                  }
                  else {
                      p.resetMonth();
                  }
              }

              // Allow click
              setTimeout(function () {
                  allowItemClick = true;
              }, 100);
          }

          function handleDayClick(e) {
              if (!allowItemClick) return;
              var day = $(e.target).parents('.picker-calendar-day');
              if (day.length === 0 && $(e.target).hasClass('picker-calendar-day')) {
                  day = $(e.target);
              }
              if (day.length === 0) return;
              // if (day.hasClass('picker-calendar-day-selected') && !p.params.multiple) return;
              if (day.hasClass('picker-calendar-day-disabled')) return;
              if (day.hasClass('picker-calendar-day-next')) p.nextMonth();
              if (day.hasClass('picker-calendar-day-prev')) p.prevMonth();
              var dateYear = day.attr('data-year');
              var dateMonth = day.attr('data-month');
              var dateDay = day.attr('data-day');
              if (p.params.onDayClick) {
                  p.params.onDayClick(p, day[0], dateYear, dateMonth, dateDay);
              }
              p.addValue(new Date(dateYear, dateMonth, dateDay).getTime());
              if (p.params.closeOnSelect && !p.params.multiple) p.close();
          }

          p.container.find('.picker-calendar-prev-month').on('click', p.prevMonth);
          p.container.find('.picker-calendar-next-month').on('click', p.nextMonth);
          p.container.find('.picker-calendar-prev-year').on('click', p.prevYear);
          p.container.find('.picker-calendar-next-year').on('click', p.nextYear);
          p.wrapper.on('click', handleDayClick);
          if (p.params.touchMove) {
              p.wrapper.on($.touchEvents.start, handleTouchStart);
              p.wrapper.on($.touchEvents.move, handleTouchMove);
              p.wrapper.on($.touchEvents.end, handleTouchEnd);
          }
              
          p.container[0].f7DestroyCalendarEvents = function () {
              p.container.find('.picker-calendar-prev-month').off('click', p.prevMonth);
              p.container.find('.picker-calendar-next-month').off('click', p.nextMonth);
              p.container.find('.picker-calendar-prev-year').off('click', p.prevYear);
              p.container.find('.picker-calendar-next-year').off('click', p.nextYear);
              p.wrapper.off('click', handleDayClick);
              if (p.params.touchMove) {
                  p.wrapper.off($.touchEvents.start, handleTouchStart);
                  p.wrapper.off($.touchEvents.move, handleTouchMove);
                  p.wrapper.off($.touchEvents.end, handleTouchEnd);
              }
          };
          

      };
      p.destroyCalendarEvents = function (colContainer) {
          if ('f7DestroyCalendarEvents' in p.container[0]) p.container[0].f7DestroyCalendarEvents();
      };

      // Calendar Methods
      p.daysInMonth = function (date) {
          var d = new Date(date);
          return new Date(d.getFullYear(), d.getMonth() + 1, 0).getDate();
      };
      p.monthHTML = function (date, offset) {
          date = new Date(date);
          var year = date.getFullYear(),
              month = date.getMonth(),
              day = date.getDate();
          if (offset === 'next') {
              if (month === 11) date = new Date(year + 1, 0);
              else date = new Date(year, month + 1, 1);
          }
          if (offset === 'prev') {
              if (month === 0) date = new Date(year - 1, 11);
              else date = new Date(year, month - 1, 1);
          }
          if (offset === 'next' || offset === 'prev') {
              month = date.getMonth();
              year = date.getFullYear();
          }
          var daysInPrevMonth = p.daysInMonth(new Date(date.getFullYear(), date.getMonth()).getTime() - 10 * 24 * 60 * 60 * 1000),
              daysInMonth = p.daysInMonth(date),
              firstDayOfMonthIndex = new Date(date.getFullYear(), date.getMonth()).getDay();
          if (firstDayOfMonthIndex === 0) firstDayOfMonthIndex = 7;
          
          var dayDate, currentValues = [], i, j,
              rows = 6, cols = 7,
              monthHTML = '',
              dayIndex = 0 + (p.params.firstDay - 1),    
              today = new Date().setHours(0,0,0,0),
              minDate = p.params.minDate ? new Date(p.params.minDate).getTime() : null,
              maxDate = p.params.maxDate ? new Date(p.params.maxDate).getTime() : null;

          if (p.value && p.value.length) {
              for (i = 0; i < p.value.length; i++) {
                  currentValues.push(new Date(p.value[i]).setHours(0,0,0,0));
              }
          }
              
          for (i = 1; i <= rows; i++) {
              var rowHTML = '';
              var row = i;
              for (j = 1; j <= cols; j++) {
                  var col = j;
                  dayIndex ++;
                  var dayNumber = dayIndex - firstDayOfMonthIndex;
                  var addClass = '';
                  if (dayNumber < 0) {
                      dayNumber = daysInPrevMonth + dayNumber + 1;
                      addClass += ' picker-calendar-day-prev';
                      dayDate = new Date(month - 1 < 0 ? year - 1 : year, month - 1 < 0 ? 11 : month - 1, dayNumber).getTime();
                  }
                  else {
                      dayNumber = dayNumber + 1;
                      if (dayNumber > daysInMonth) {
                          dayNumber = dayNumber - daysInMonth;
                          addClass += ' picker-calendar-day-next';
                          dayDate = new Date(month + 1 > 11 ? year + 1 : year, month + 1 > 11 ? 0 : month + 1, dayNumber).getTime();
                      }
                      else {
                          dayDate = new Date(year, month, dayNumber).getTime();    
                      }
                  }
                  // Today
                  if (dayDate === today) addClass += ' picker-calendar-day-today';
                  // Selected
                  if (currentValues.indexOf(dayDate) >= 0) addClass += ' picker-calendar-day-selected';
                  // Weekend
                  if (p.params.weekendDays.indexOf(col - 1) >= 0) {
                      addClass += ' picker-calendar-day-weekend';
                  }
                  // Disabled
                  if ((minDate && dayDate < minDate) || (maxDate && dayDate > maxDate)) {
                      addClass += ' picker-calendar-day-disabled';   
                  }

                  dayDate = new Date(dayDate);
                  var dayYear = dayDate.getFullYear();
                  var dayMonth = dayDate.getMonth();
                  rowHTML += '<div data-year="' + dayYear + '" data-month="' + dayMonth + '" data-day="' + dayNumber + '" class="picker-calendar-day' + (addClass) + '" data-date="' + (dayYear + '-' + dayMonth + '-' + dayNumber) + '"><span>'+dayNumber+'</span></div>';
              }
              monthHTML += '<div class="picker-calendar-row">' + rowHTML + '</div>';
          }
          monthHTML = '<div class="picker-calendar-month" data-year="' + year + '" data-month="' + month + '">' + monthHTML + '</div>';
          return monthHTML;
      };
      p.animating = false;
      p.updateCurrentMonthYear = function (dir) {
          if (typeof dir === 'undefined') {
              p.currentMonth = parseInt(p.months.eq(1).attr('data-month'), 10);
              p.currentYear = parseInt(p.months.eq(1).attr('data-year'), 10);   
          }
          else {
              p.currentMonth = parseInt(p.months.eq(dir === 'next' ? (p.months.length - 1) : 0).attr('data-month'), 10);
              p.currentYear = parseInt(p.months.eq(dir === 'next' ? (p.months.length - 1) : 0).attr('data-year'), 10);
          }
          p.container.find('.current-month-value').text(p.params.monthNames[p.currentMonth]);
          p.container.find('.current-year-value').text(p.currentYear);
              
      };
      p.onMonthChangeStart = function (dir) {
          p.updateCurrentMonthYear(dir);
          p.months.removeClass('picker-calendar-month-current picker-calendar-month-prev picker-calendar-month-next');
          var currentIndex = dir === 'next' ? p.months.length - 1 : 0;

          p.months.eq(currentIndex).addClass('picker-calendar-month-current');
          p.months.eq(dir === 'next' ? currentIndex - 1 : currentIndex + 1).addClass(dir === 'next' ? 'picker-calendar-month-prev' : 'picker-calendar-month-next');

          if (p.params.onMonthYearChangeStart) {
              p.params.onMonthYearChangeStart(p, p.currentYear, p.currentMonth);
          }
      };
      p.onMonthChangeEnd = function (dir, rebuildBoth) {
          p.animating = false;
          var nextMonthHTML, prevMonthHTML, newMonthHTML;
          p.wrapper.find('.picker-calendar-month:not(.picker-calendar-month-prev):not(.picker-calendar-month-current):not(.picker-calendar-month-next)').remove();
          
          if (typeof dir === 'undefined') {
              dir = 'next';
              rebuildBoth = true;
          }
          if (!rebuildBoth) {
              newMonthHTML = p.monthHTML(new Date(p.currentYear, p.currentMonth), dir);
          }
          else {
              p.wrapper.find('.picker-calendar-month-next, .picker-calendar-month-prev').remove();
              prevMonthHTML = p.monthHTML(new Date(p.currentYear, p.currentMonth), 'prev');
              nextMonthHTML = p.monthHTML(new Date(p.currentYear, p.currentMonth), 'next');
          }
          if (dir === 'next' || rebuildBoth) {
              p.wrapper.append(newMonthHTML || nextMonthHTML);
          }
          if (dir === 'prev' || rebuildBoth) {
              p.wrapper.prepend(newMonthHTML || prevMonthHTML);
          }
          p.months = p.wrapper.find('.picker-calendar-month');
          p.setMonthsTranslate(p.monthsTranslate);
          if (p.params.onMonthAdd) {
              p.params.onMonthAdd(p, dir === 'next' ? p.months.eq(p.months.length - 1)[0] : p.months.eq(0)[0]);
          }
          if (p.params.onMonthYearChangeEnd) {
              p.params.onMonthYearChangeEnd(p, p.currentYear, p.currentMonth);
          }
      };
      p.setMonthsTranslate = function (translate) {
          translate = translate || p.monthsTranslate || 0;
          if (typeof p.monthsTranslate === 'undefined') p.monthsTranslate = translate;
          p.months.removeClass('picker-calendar-month-current picker-calendar-month-prev picker-calendar-month-next');
          var prevMonthTranslate = -(translate + 1) * 100 * inverter;
          var currentMonthTranslate = -translate * 100 * inverter;
          var nextMonthTranslate = -(translate - 1) * 100 * inverter;
          p.months.eq(0).transform('translate3d(' + (p.isH ? prevMonthTranslate : 0) + '%, ' + (p.isH ? 0 : prevMonthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');
          p.months.eq(1).transform('translate3d(' + (p.isH ? currentMonthTranslate : 0) + '%, ' + (p.isH ? 0 : currentMonthTranslate) + '%, 0)').addClass('picker-calendar-month-current');
          p.months.eq(2).transform('translate3d(' + (p.isH ? nextMonthTranslate : 0) + '%, ' + (p.isH ? 0 : nextMonthTranslate) + '%, 0)').addClass('picker-calendar-month-next');
      };
      p.nextMonth = function (transition) {
          if (typeof transition === 'undefined' || typeof transition === 'object') {
              transition = '';
              if (!p.params.animate) transition = 0;
          }
          var nextMonth = parseInt(p.months.eq(p.months.length - 1).attr('data-month'), 10);
          var nextYear = parseInt(p.months.eq(p.months.length - 1).attr('data-year'), 10);
          var nextDate = new Date(nextYear, nextMonth);
          var nextDateTime = nextDate.getTime();
          var transitionEndCallback = p.animating ? false : true;
          if (p.params.maxDate) {
              if (nextDateTime > new Date(p.params.maxDate).getTime()) {
                  return p.resetMonth();
              }
          }
          p.monthsTranslate --;
          if (nextMonth === p.currentMonth) {
              var nextMonthTranslate = -(p.monthsTranslate) * 100 * inverter;
              var nextMonthHTML = $(p.monthHTML(nextDateTime, 'next')).transform('translate3d(' + (p.isH ? nextMonthTranslate : 0) + '%, ' + (p.isH ? 0 : nextMonthTranslate) + '%, 0)').addClass('picker-calendar-month-next');
              p.wrapper.append(nextMonthHTML[0]);
              p.months = p.wrapper.find('.picker-calendar-month');
              if (p.params.onMonthAdd) {
                  p.params.onMonthAdd(p, p.months.eq(p.months.length - 1)[0]);
              }
          }
          p.animating = true;
          p.onMonthChangeStart('next');
          var translate = (p.monthsTranslate * 100) * inverter;

          p.wrapper.transition(transition).transform('translate3d(' + (p.isH ? translate : 0) + '%, ' + (p.isH ? 0 : translate) + '%, 0)');
          if (transitionEndCallback) {
              p.wrapper.transitionEnd(function () {
                  p.onMonthChangeEnd('next');
              });
          }
          if (!p.params.animate) {
              p.onMonthChangeEnd('next');
          }
      };
      p.prevMonth = function (transition) {
          if (typeof transition === 'undefined' || typeof transition === 'object') {
              transition = '';
              if (!p.params.animate) transition = 0;
          }
          var prevMonth = parseInt(p.months.eq(0).attr('data-month'), 10);
          var prevYear = parseInt(p.months.eq(0).attr('data-year'), 10);
          var prevDate = new Date(prevYear, prevMonth + 1, -1);
          var prevDateTime = prevDate.getTime();
          var transitionEndCallback = p.animating ? false : true;
          if (p.params.minDate) {
              if (prevDateTime < new Date(p.params.minDate).getTime()) {
                  return p.resetMonth();
              }
          }
          p.monthsTranslate ++;
          if (prevMonth === p.currentMonth) {
              var prevMonthTranslate = -(p.monthsTranslate) * 100 * inverter;
              var prevMonthHTML = $(p.monthHTML(prevDateTime, 'prev')).transform('translate3d(' + (p.isH ? prevMonthTranslate : 0) + '%, ' + (p.isH ? 0 : prevMonthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');
              p.wrapper.prepend(prevMonthHTML[0]);
              p.months = p.wrapper.find('.picker-calendar-month');
              if (p.params.onMonthAdd) {
                  p.params.onMonthAdd(p, p.months.eq(0)[0]);
              }
          }
          p.animating = true;
          p.onMonthChangeStart('prev');
          var translate = (p.monthsTranslate * 100) * inverter;
          p.wrapper.transition(transition).transform('translate3d(' + (p.isH ? translate : 0) + '%, ' + (p.isH ? 0 : translate) + '%, 0)');
          if (transitionEndCallback) {
              p.wrapper.transitionEnd(function () {
                  p.onMonthChangeEnd('prev');
              });
          }
          if (!p.params.animate) {
              p.onMonthChangeEnd('prev');
          }
      };
      p.resetMonth = function (transition) {
          if (typeof transition === 'undefined') transition = '';
          var translate = (p.monthsTranslate * 100) * inverter;
          p.wrapper.transition(transition).transform('translate3d(' + (p.isH ? translate : 0) + '%, ' + (p.isH ? 0 : translate) + '%, 0)');
      };
      p.setYearMonth = function (year, month, transition) {
          if (typeof year === 'undefined') year = p.currentYear;
          if (typeof month === 'undefined') month = p.currentMonth;
          if (typeof transition === 'undefined' || typeof transition === 'object') {
              transition = '';
              if (!p.params.animate) transition = 0;
          }
          var targetDate;
          if (year < p.currentYear) {
              targetDate = new Date(year, month + 1, -1).getTime();
          }
          else {
              targetDate = new Date(year, month).getTime();
          }
          if (p.params.maxDate && targetDate > new Date(p.params.maxDate).getTime()) {
              return false;
          }
          if (p.params.minDate && targetDate < new Date(p.params.minDate).getTime()) {
              return false;
          }
          var currentDate = new Date(p.currentYear, p.currentMonth).getTime();
          var dir = targetDate > currentDate ? 'next' : 'prev';
          var newMonthHTML = p.monthHTML(new Date(year, month));
          p.monthsTranslate = p.monthsTranslate || 0;
          var prevTranslate = p.monthsTranslate;
          var monthTranslate, wrapperTranslate;
          var transitionEndCallback = p.animating ? false : true;
          if (targetDate > currentDate) {
              // To next
              p.monthsTranslate --;
              if (!p.animating) p.months.eq(p.months.length - 1).remove();
              p.wrapper.append(newMonthHTML);
              p.months = p.wrapper.find('.picker-calendar-month');
              monthTranslate = -(prevTranslate - 1) * 100 * inverter;
              p.months.eq(p.months.length - 1).transform('translate3d(' + (p.isH ? monthTranslate : 0) + '%, ' + (p.isH ? 0 : monthTranslate) + '%, 0)').addClass('picker-calendar-month-next');
          }
          else {
              // To prev
              p.monthsTranslate ++;
              if (!p.animating) p.months.eq(0).remove();
              p.wrapper.prepend(newMonthHTML);
              p.months = p.wrapper.find('.picker-calendar-month');
              monthTranslate = -(prevTranslate + 1) * 100 * inverter;
              p.months.eq(0).transform('translate3d(' + (p.isH ? monthTranslate : 0) + '%, ' + (p.isH ? 0 : monthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');
          }
          if (p.params.onMonthAdd) {
              p.params.onMonthAdd(p, dir === 'next' ? p.months.eq(p.months.length - 1)[0] : p.months.eq(0)[0]);
          }
          p.animating = true;
          p.onMonthChangeStart(dir);
          wrapperTranslate = (p.monthsTranslate * 100) * inverter;
          p.wrapper.transition(transition).transform('translate3d(' + (p.isH ? wrapperTranslate : 0) + '%, ' + (p.isH ? 0 : wrapperTranslate) + '%, 0)');
          if (transitionEndCallback) {
             p.wrapper.transitionEnd(function () {
                  p.onMonthChangeEnd(dir, true);
              }); 
          }
          if (!p.params.animate) {
              p.onMonthChangeEnd(dir);
          }
      };
      p.nextYear = function () {
          p.setYearMonth(p.currentYear + 1);
      };
      p.prevYear = function () {
          p.setYearMonth(p.currentYear - 1);
      };
      

      // HTML Layout
      p.layout = function () {
          var pickerHTML = '';
          var pickerClass = '';
          var i;
          
          var layoutDate = p.value && p.value.length ? p.value[0] : new Date().setHours(0,0,0,0);
          var prevMonthHTML = p.monthHTML(layoutDate, 'prev');
          var currentMonthHTML = p.monthHTML(layoutDate);
          var nextMonthHTML = p.monthHTML(layoutDate, 'next');
          var monthsHTML = '<div class="picker-calendar-months"><div class="picker-calendar-months-wrapper">' + (prevMonthHTML + currentMonthHTML + nextMonthHTML) + '</div></div>';
          // Week days header
          var weekHeaderHTML = '';
          if (p.params.weekHeader) {
              for (i = 0; i < 7; i++) {
                  var weekDayIndex = (i + p.params.firstDay > 6) ? (i - 7 + p.params.firstDay) : (i + p.params.firstDay);
                  var dayName = p.params.dayNamesShort[weekDayIndex];
                  weekHeaderHTML += '<div class="picker-calendar-week-day ' + ((p.params.weekendDays.indexOf(weekDayIndex) >= 0) ? 'picker-calendar-week-day-weekend' : '') + '"> ' + dayName + '</div>';
                  
              }
              weekHeaderHTML = '<div class="picker-calendar-week-days">' + weekHeaderHTML + '</div>';
          }
          pickerClass = 'weui-picker-calendar ' + (p.params.cssClass || '');
          if(!p.inline) pickerClass = 'weui-picker-modal ' + pickerClass;
          var toolbarHTML = p.params.toolbar ? p.params.toolbarTemplate.replace(/{{closeText}}/g, p.params.toolbarCloseText) : '';
          if (p.params.toolbar) {
              toolbarHTML = p.params.toolbarTemplate
                  .replace(/{{closeText}}/g, p.params.toolbarCloseText)
                  .replace(/{{monthPicker}}/g, (p.params.monthPicker ? p.params.monthPickerTemplate : ''))
                  .replace(/{{yearPicker}}/g, (p.params.yearPicker ? p.params.yearPickerTemplate : ''));
          }

          pickerHTML =
              '<div class="' + (pickerClass) + '">' +
                  toolbarHTML +
                  '<div class="picker-modal-inner">' +
                      weekHeaderHTML +
                      monthsHTML +
                  '</div>' +
              '</div>';
              
              
          p.pickerHTML = pickerHTML;    
      };

      // Input Events
      function openOnInput(e) {
          e.preventDefault();
          if (p.opened) return;
          p.open();
          if (p.params.scrollToInput && !isPopover()) {
              var pageContent = p.input.parents('.page-content');
              if (pageContent.length === 0) return;

              var paddingTop = parseInt(pageContent.css('padding-top'), 10),
                  paddingBottom = parseInt(pageContent.css('padding-bottom'), 10),
                  pageHeight = pageContent[0].offsetHeight - paddingTop - p.container.height(),
                  pageScrollHeight = pageContent[0].scrollHeight - paddingTop - p.container.height(),
                  newPaddingBottom;

              var inputTop = p.input.offset().top - paddingTop + p.input[0].offsetHeight;
              if (inputTop > pageHeight) {
                  var scrollTop = pageContent.scrollTop() + inputTop - pageHeight;
                  if (scrollTop + pageHeight > pageScrollHeight) {
                      newPaddingBottom = scrollTop + pageHeight - pageScrollHeight + paddingBottom;
                      if (pageHeight === pageScrollHeight) {
                          newPaddingBottom = p.container.height();
                      }
                      pageContent.css({'padding-bottom': (newPaddingBottom) + 'px'});
                  }
                  pageContent.scrollTop(scrollTop, 300);
              }
          }
      }
      function closeOnHTMLClick(e) {
          if (inPopover()) return;
          if (p.input && p.input.length > 0) {
              if (e.target !== p.input[0] && $(e.target).parents('.weui-picker-modal').length === 0) p.close();
          }
          else {
              if ($(e.target).parents('.weui-picker-modal').length === 0) p.close();   
          }
      }

      if (p.params.input) {
          p.input = $(p.params.input);
          if (p.input.length > 0) {
              if (p.params.inputReadOnly) p.input.prop('readOnly', true);
              if (!p.inline) {
                  p.input.on('click', openOnInput);    
              }
              if (p.params.inputReadOnly) {
                  p.input.on('focus mousedown', function (e) {
                      e.preventDefault();
                  });
              }
          }
              
      }
      
      //iphone 上无法正确触发 click，会导致点击外面无法关闭
      if (!p.inline) $(document).on('click touchend', closeOnHTMLClick);

      // Open
      function onPickerClose() {
          p.opened = false;
          if (p.input && p.input.length > 0) p.input.parents('.page-content').css({'padding-bottom': ''});
          if (p.params.onClose) p.params.onClose(p);

          // Destroy events
          p.destroyCalendarEvents();
      }

      p.opened = false;
      p.open = function () {
          var toPopover = isPopover() && false;
          var updateValue = false;
          if (!p.opened) {
              // Set date value
              if (!p.value) {
                  if (p.params.value) {
                      p.value = p.params.value;
                      updateValue = true;
                  }
              }

              // Layout
              p.layout();

              // Append
              if (toPopover) {
                  p.pickerHTML = '<div class="popover popover-picker-calendar"><div class="popover-inner">' + p.pickerHTML + '</div></div>';
                  p.popover = $.popover(p.pickerHTML, p.params.input, true);
                  p.container = $(p.popover).find('.weui-picker-modal');
                  $(p.popover).on('close', function () {
                      onPickerClose();
                  });
              }
              else if (p.inline) {
                  p.container = $(p.pickerHTML);
                  p.container.addClass('picker-modal-inline');
                  $(p.params.container).append(p.container);
              }
              else {
                  p.container = $($.openPicker(p.pickerHTML));
                  $(p.container)
                  .on('close', function () {
                      onPickerClose();
                  });
              }

              // Store calendar instance
              p.container[0].f7Calendar = p;
              p.wrapper = p.container.find('.picker-calendar-months-wrapper');

              // Months
              p.months = p.wrapper.find('.picker-calendar-month');

              // Update current month and year
              p.updateCurrentMonthYear();

              // Set initial translate
              p.monthsTranslate = 0;
              p.setMonthsTranslate();

              // Init events
              p.initCalendarEvents();

              // Update input value
              if (updateValue) p.updateValue();
              
          }

          // Set flag
          p.opened = true;
          p.initialized = true;
          if (p.params.onMonthAdd) {
              p.months.each(function () {
                  p.params.onMonthAdd(p, this);
              });
          }
          if (p.params.onOpen) p.params.onOpen(p);
      };

      // Close
      p.close = function () {
          if (!p.opened || p.inline) return;
          p.animating = false;  //有可能还有动画没做完，因此animating设置还没改。
          if (inPopover()) {
              $.closePicker(p.popover);
              return;
          }
          else {
              $.closePicker(p.container);
              return;
          }
      };

      // Destroy
      p.destroy = function () {
          p.close();
          if (p.params.input && p.input.length > 0) {
              p.input.off('click focus', openOnInput);
              p.input.data("calendar", null);
          }
          $('html').off('click', closeOnHTMLClick);
      };

      if (p.inline) {
          p.open();
      }

      return p;
  };

  var format = function(d) {
    return d < 10 ? "0"+d : d;
  }


  $.fn.calendar = function (params, args) {
      params = params || {};
      return this.each(function() {
        var $this = $(this);
        if(!$this[0]) return;
        var p = {};
        if($this[0].tagName.toUpperCase() === "INPUT") {
          p.input = $this;
        } else {
          p.container = $this;
        }

        var calendar = $this.data("calendar");

        if(!calendar) {
          if(typeof params === typeof "a") {
          } else {
            if(!params.value && $this.val()) params.value = [$this.val()];
            //默认显示今天
            if(!params.value) {
              var today = new Date();
              params.value = [today.getFullYear() + "-" + format(today.getMonth() + 1) + "-" + format(today.getDate())];
            }
            calendar = $this.data("calendar", new Calendar($.extend(p, params)));
          }
        }

        if(typeof params === typeof "a") {
          calendar[params].call(calendar, args);
        }
      });
  };

  defaults = $.fn.calendar.prototype.defaults = {
    value: undefined, // 通过JS赋值，注意是数组
    monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
    monthNamesShort: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
    dayNames: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
    dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
    firstDay: 1, // First day of the week, Monday
    weekendDays: [0, 6], // Sunday and Saturday
    multiple: false,
    dateFormat: 'yyyy-mm-dd',
    direction: 'horizontal', // or 'vertical'
    minDate: null,
    maxDate: null,
    touchMove: true,
    animate: true,
    closeOnSelect: true,
    monthPicker: true,
    monthPickerTemplate: 
        '<div class="picker-calendar-month-picker">' +
            '<a href="javascript:;" class="link icon-only picker-calendar-prev-month"><i class="icon icon-prev"></i></a>' +
            '<div class="current-month-value"></div>' +
            '<a href="javascript:;" class="link icon-only picker-calendar-next-month"><i class="icon icon-next"></i></a>' +
        '</div>',
    yearPicker: true,
    yearPickerTemplate: 
        '<div class="picker-calendar-year-picker">' +
            '<a href="javascript:;" class="link icon-only picker-calendar-prev-year"><i class="icon icon-prev"></i></a>' +
            '<span class="current-year-value"></span>' +
            '<a href="javascript:;" class="link icon-only picker-calendar-next-year"><i class="icon icon-next"></i></a>' +
        '</div>',
    weekHeader: true,
    // Common settings
    scrollToInput: true,
    inputReadOnly: true,
    convertToPopover: true,
    onlyInPopover: false,
    toolbar: true,
    toolbarCloseText: 'Done',
    toolbarTemplate: 
        '<div class="toolbar">' +
            '<div class="toolbar-inner">' +
                '{{yearPicker}}' +
                '{{monthPicker}}' +
                // '<a href="#" class="link close-picker">{{closeText}}</a>' +
            '</div>' +
        '</div>',
    /* Callbacks
    onMonthAdd
    onChange
    onOpen
    onClose
    onDayClick
    onMonthYearChangeStart
    onMonthYearChangeEnd
    */
  };

}($);

/* global $:true */
/* jshint unused:false*/

+ function($) {
  "use strict";


  var defaults;

  var formatNumber = function (n) {
    return n < 10 ? "0" + n : n;
  }

  var Datetime = function(input, params) {
    this.input = $(input);
    this.params = params;

    this.initMonthes = ('01 02 03 04 05 06 07 08 09 10 11 12').split(' ');

    this.initYears = (function () {
      var arr = [];
      for (var i = 1950; i <= 2030; i++) { arr.push(i); }
      return arr;
    })();

    var p = $.extend({}, params, this.getConfig());
    $(this.input).picker(p);
  }

  Datetime.prototype = {
    getDays : function(max) {
      var days = [];
      for(var i=1; i<= (max||31);i++) {
        days.push(i < 10 ? "0"+i : i);
      }
      return days;
    },

    getDaysByMonthAndYear : function(month, year) {
      var int_d = new Date(year, parseInt(month)+1-1, 1);
      var d = new Date(int_d - 1);
      return this.getDays(d.getDate());
    },
    getConfig: function() {
      var today = new Date(),
          params = this.params,
          self = this,
          lastValidValues;

      var config = {
        rotateEffect: false,  //为了性能
        cssClass: 'datetime-picker',

        value: [today.getFullYear(), formatNumber(today.getMonth()+1), formatNumber(today.getDate()), formatNumber(today.getHours()), (formatNumber(today.getMinutes()))],

        onChange: function (picker, values, displayValues) {
          var cols = picker.cols;
          var days = self.getDaysByMonthAndYear(values[1], values[0]);
          var currentValue = values[2];
          if(currentValue > days.length) currentValue = days.length;
          picker.cols[4].setValue(currentValue);

          //check min and max
          var current = new Date(values[0]+'-'+values[1]+'-'+values[2]);
          var valid = true;
          if(params.min) {
            var min = new Date(typeof params.min === "function" ? params.min() : params.min);

            if(current < +min) {
              picker.setValue(lastValidValues);
              valid = false;
            } 
          }
          if(params.max) {
            var max = new Date(typeof params.max === "function" ? params.max() : params.max);
            if(current > +max) {
              picker.setValue(lastValidValues);
              valid = false;
            }
          }

          valid && (lastValidValues = values);

          if (self.params.onChange) {
            self.params.onChange.apply(this, arguments);
          }
        },

        formatValue: function (p, values, displayValues) {
          return self.params.format(p, values, displayValues);
        },

        cols: [
          {
            values: (function () {
              var years = [];
              for (var i=1950; i<=2050; i++) years.push(i);
              return years;
            })()
          },
          {
            divider: true,  // 这是一个分隔符
            content: params.yearSplit
          },
          {
            values: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']
          },
          {
            divider: true,  // 这是一个分隔符
            content: params.monthSplit
          },
          {
            values: (function () {
              var dates = [];
              for (var i=1; i<=31; i++) dates.push(formatNumber(i));
              return dates;
            })()
          },
          
        ]
      }

      if (params.dateSplit) {
        config.cols.push({
          divider: true,
          content: params.dateSplit
        })
      }

      config.cols.push({
        divider: true,
        content: params.datetimeSplit
      })

      var times = self.params.times();
      if (times && times.length) {
        config.cols = config.cols.concat(times);
      }

      var inputValue = this.input.val();
      if(inputValue) config.value = params.parse(inputValue);
      if(this.params.value) {
        this.input.val(this.params.value);
        config.value = params.parse(this.params.value);
      }

      return config;
    }
  }

  $.fn.datetimePicker = function(params) {
    params = $.extend({}, defaults, params);
    return this.each(function() {
      if(!this) return;
      var $this = $(this);
      var datetime = $this.data("datetime");
      if(!datetime) $this.data("datetime", new Datetime(this, params));
      return datetime;
    });
  };

  defaults = $.fn.datetimePicker.prototype.defaults = {
    input: undefined, // 默认值
    min: undefined, // YYYY-MM-DD 最大最小值只比较年月日，不比较时分秒
    max: undefined,  // YYYY-MM-DD
    yearSplit: '-',
    monthSplit: '-',
    dateSplit: '',  // 默认为空
    datetimeSplit: ' ',  // 日期和时间之间的分隔符，不可为空
    times: function () {
      return [  // 自定义的时间
        {
          values: (function () {
            var hours = [];
            for (var i=0; i<24; i++) hours.push(formatNumber(i));
            return hours;
          })()
        },
        {
          divider: true,  // 这是一个分隔符
          content: ':'
        },
        {
          values: (function () {
            var minutes = [];
            for (var i=0; i<59; i++) minutes.push(formatNumber(i));
            return minutes;
          })()
        }
      ];
    },
    format: function (p, values) { // 数组转换成字符串
      return p.cols.map(function (col) {
        return col.value || col.content;
      }).join('');
    },
    parse: function (str) {
      // 把字符串转换成数组，用来解析初始值
      // 如果你的定制的初始值格式无法被这个默认函数解析，请自定义这个函数。比如你的时间是 '子时' 那么默认情况这个'时'会被当做分隔符而导致错误，所以你需要自己定义parse函数
      // 默认兼容的分隔符
      var t = str.split(this.datetimeSplit);
      return t[0].split(/\D/).concat(t[1].split(/:|时|分|秒/)).filter(function (d) {
        return !!d;
      })
    }
  }

}($);

/*======================================================
************   Picker   ************
======================================================*/
/* global $:true */

+ function($) {
  "use strict";


  //Popup 和 picker 之类的不要共用一个弹出方法，因为这样会导致 在 popup 中再弹出 picker 的时候会有问题。

  $.openPopup = function(popup, className) {

    $.closePopup();

    popup = $(popup);
    popup.show();
    popup.width();
    popup.addClass("weui-popup-container-visible");
    var modal = popup.find(".weui-popup-modal");
    modal.width();
    modal.transitionEnd(function() {
      modal.trigger("open");
    });
  }


  $.closePopup = function(container, remove) {
    container = $(container || ".weui-popup-container-visible");
    container.find('.weui-popup-modal').transitionEnd(function() {
      var $this = $(this);
      $this.trigger("close");
      container.hide();
      remove && container.remove();
    })
    container.removeClass("weui-popup-container-visible")
  };


  $(document).on("click", ".close-popup, .weui-popup-overlay", function(e) {
    // $.closePopup();
  })
  .on("click", ".open-popup", function() {
    $($(this).data("target")).popup();
  })
  .on("click", ".weui-popup-container", function(e) {
    if($(e.target).hasClass("weui-popup-container")) $.closePopup();
  })

  $.fn.popup = function() {
    return this.each(function() {
      $.openPopup(this);
    });
  };

}($);

/* ===============================================================================
************   Notification ************
=============================================================================== */
/* global $:true */
+function ($) {
  "use strict";

  var noti, defaults, timeout, start, diffX, diffY;

  var touchStart = function(e) {
    var p = $.getTouchPosition(e);
    start = p;
    diffX = diffY = 0;
    noti.addClass("touching");
  };
  var touchMove = function(e) {
    if(!start) return false;
    e.preventDefault();
    e.stopPropagation();
    var p = $.getTouchPosition(e);
    diffX = p.x - start.x;
    diffY = p.y - start.y;
    if(diffY > 0) {
      diffY = Math.sqrt(diffY);
    }

    noti.css("transform", "translate3d(0, "+diffY+"px, 0)");
  };
  var touchEnd = function() {
    noti.removeClass("touching");
    noti.attr("style", "");
    if(diffY < 0 && (Math.abs(diffY) > noti.height()*0.38)) {
      $.closeNotification();
    }

    if(Math.abs(diffX) <= 1 && Math.abs(diffY) <= 1) {
      noti.trigger("noti-click");
    }

    start = false;
  };

  var attachEvents = function(el) {
    el.on($.touchEvents.start, touchStart);
    el.on($.touchEvents.move, touchMove);
    el.on($.touchEvents.end, touchEnd);
  };

  $.notification = $.noti = function(params) {
    params = $.extend({}, defaults, params);
    noti = $(".notification");
    if(!noti[0]) { // create a new notification
      noti = $('<div class="notification"></div>').appendTo(document.body);
      attachEvents(noti);
    }

    noti.off("noti-click"); //the click event is not correct sometime: it will trigger when user is draging.
    if(params.onClick) noti.on("noti-click", function() {
      params.onClick(params.data);
    });

    noti.html($.t7.compile(params.tpl)(params));

    noti.show();

    noti.addClass("notification-in");
    noti.data("params", params);

    var startTimeout = function() {
      if(timeout) {
        clearTimeout(timeout);
        timeout = null;
      }

      timeout = setTimeout(function() {
        if(noti.hasClass("touching")) {
          startTimeout();
        } else {
          $.closeNotification();
        }
      }, params.time);
    };

    startTimeout();

  };

  $.closeNotification = function() {
    timeout && clearTimeout(timeout);
    timeout = null;
    var noti = $(".notification").removeClass("notification-in").transitionEnd(function() {
      $(this).remove();
    });

    if(noti[0]) {
      var params = $(".notification").data("params");
      if(params && params.onClose) {
        params.onClose(params.data);
      }
    }
  };

  defaults = $.noti.prototype.defaults = {
    title: undefined,
    text: undefined,
    media: undefined,
    time: 4000,
    onClick: undefined,
    onClose: undefined,
    data: undefined,
    tpl:  '<div class="notification-inner">' +
            '{{#if media}}<div class="notification-media">{{media}}</div>{{/if}}' +
            '<div class="notification-content">' +
            '{{#if title}}<div class="notification-title">{{title}}</div>{{/if}}' +
            '{{#if text}}<div class="notification-text">{{text}}</div>{{/if}}' +
            '</div>' +
            '<div class="notification-handle-bar"></div>' +
          '</div>'
  };

}($);

+ function($) {
  "use strict";

  var timeout;

  $.toptip = function(text, duration, type) {
    if(!text) return;
    if(typeof duration === typeof "a") {
      type = duration;
      duration = undefined;
    }
    duration = duration || 3000;
    var className = type ? 'bg-' + type : 'bg-danger';
    var $t = $('.weui_toptips').remove();
    $t = $('<div class="weui_toptips"></div>').appendTo(document.body);
    $t.html(text);
    $t[0].className = 'weui_toptips ' + className

    clearTimeout(timeout);

    if(!$t.hasClass('weui_toptips_visible')) {
      $t.show().width();
      $t.addClass('weui_toptips_visible');
    }

    timeout = setTimeout(function() {
      $t.removeClass('weui_toptips_visible').transitionEnd(function() {
        $t.remove();
      });
    }, duration);
  }
}($);

define('localDB',['require','exports','module'],function (require, exports, module) {
    var db;
    var app_name = 'app';

    function initDb(fn) {
        db = window.openDatabase(app_name, "1.0", app_name + " store database", 1024 * 10);
        var tables = [{
            name: "HashMapDisc",
            columns: ["key TEXT PRIMARY KEY", "value TEXT"]
        }];

        db.transaction(function (tx) {
            for (var index = 0; index < tables.length; index++) {
                var table = tables[index];
                tx.executeSql("CREATE TABLE IF NOT EXISTS " + table.name + "(" +
                    table.columns.join(", ") + ");");
            }
        }, function (err) {
            console.error("Error processing SQL: " + err.code);
        }, fn);
    }

    function put(key, value, onSuccess) {
        console.log('put');
        deleteObj(key, function () {
            db.transaction(function (tx) {
                tx.executeSql("INSERT INTO HashMapDisc (key,value) VALUES (:name,:value);", [key, value],
                    function (tx, results) {
                        onSuccess();
                    });
            }, function (error) {
                console.error(error.message);
            });
        });
    }

    function get(key, onSuccess) {
        db.transaction(function (tx) {
            tx.executeSql("SELECT * FROM HashMapDisc where key = :key", [key], function (tx, results) {
                if (results && results.rows.length > 0) {
                    var row = results.rows.item(0);
                    onSuccess(row);
                } else {
                    onSuccess(null);
                }
            });
        }, function (error) {
            console.error(error.message);
        });
    }

    function deleteObj(key, onSuccess) {
        db.transaction(function (tx) {
            tx.executeSql("delete from  HashMapDisc where key = :key;", [key],
                function (tx, results) {
                    onSuccess();
                });
        });
    }

    return {
        put: put,
        get: get,
        deleteObj: deleteObj,
        initDb: initDb
    }
});

define('constant',['require','exports','module'],function(require, exports, module){
	var outTime = 20000; //超时时间,默认20秒超时
	var cacheTime = 1 * 1000;
	var isWeixin = false;

	var shortcut = 'azc2';
	var _api_key = '2493457a5d9285d0a6ac8ea86db16c21';

	// 是否调试模式， 如果为false ，则window.console里的方法会变成空方法，则不会在浏览器上做调试输出
	var isDebug = false;
	if (!isDebug) {
		var methods = [ "log", "debug", "warn", "info", "time", "timeEnd" ];
		for (var i = 0; i < methods.length; i++) {
			console[methods[i]] = function() {
			};
		}
	}

	// 桌面端的 配置配置信息（serverURL： 访问的服务器地址 secretKey： 密钥
	// var serverURL = "http://192.168.13.186:8080/ProMark/client/";
	// var serverURL = 'http://115.159.207.172:8979/ProMark/client/';
	// var serverURL = 'https://www.apphzs.cn/ProMark/client/';
	var serverURL = 'http://47.100.126.72/ProMark/client/';
	//正式服务器
	// var serverURL = "";

	var secretKey = '13061723b289d370fe35184a4928cb8a';
	var clientAppName = 'proMarkApp';
	var globalApiMode = 'remote';
	var appVersion = '0.0.1';
	var wx_server ='http://wxdeveloper2.talkyun.com.cn/luanchuanAdmin/';

	//for weixin
	var ua = window.navigator.userAgent.toLowerCase();
	if (ua.match(/MicroMessenger/i) == 'micromessenger'){//如果是微信
		isWeixin=true;
		serverURL ='/luanchuanAdmin/client/';
	}

	return {
		shortcut:shortcut,
		_api_key:_api_key,
		appVersion:appVersion,
		outTime:outTime,
		cacheTime : cacheTime,
		serverURL:serverURL,
		wx_server:wx_server,
		secretKey:secretKey,
		clientAppName:clientAppName,
		globalApiMode : globalApiMode,
		isWeixin:isWeixin
	};

});
define('phonegaputil',['require','exports','module','jquery','localDB','constant'],function (require, exports, module) {
	var $ = require('jquery');
    var localDB = require('localDB');
	var constant = require('constant');

	// 按2次回退退出程序
    var quitflag = 0;
    function exitApp() {
        if (navigator.app) {
            quitflag = quitflag + 1;

            setTimeout(function () {
                quitflag = 0;
            }, 3000);

            if (quitflag >= 2) {
                if (arguments.length != 0) {
                    arguments[0]();
                }
				//注意，这段代码是应用退出前保存统计数据，请在退出应用前调用
                // navigator.app.exitApp();
				cordova.getAppVersion.exitAPP();
            } else {
				$.jtoast('再按一次返回键退出', '', '', 'black');
            }
        }
    }

    //键盘控制
    function hideKeyboard() {
		if (navigator.notification) {
			var d = device.platform.toLocaleLowerCase();
			if (d == 'ios') {
				Keyboard.shrinkView(true);
			} else if (d == 'android') {
				Keyboard.hide();
			}
		} else {
			console.log('收起键盘');
		}
    }

    function showKeyboard() {
		if (navigator.notification) {
			var d = device.platform.toLocaleLowerCase();
			if (d == 'ios') {
				Keyboard.shrinkView(false);
			} else if (d == 'android') {
				Keyboard.show();
			}
		} else {
			console.log('展示键盘');
		}
    }

	function saveConfig(key, value, onSuccess, onFail) {
		if (window.plugins && window.plugins.appPreferences) {
			window.plugins.appPreferences.store(onSuccess, onFail, key, value);
		} else {
			localDB.put(key, JSON.stringify(value), onSuccess);
		}
	}

	function getConfig(key, onSuccess, onFail) {
		if (window.plugins && window.plugins.appPreferences) {
			window.plugins.appPreferences.fetch(onSuccess, onFail, key);
		} else {
			var data = null;
			localDB.get(key, function (o) {
                if (o) {
                    try {
                        data = JSON.parse(o.value);
                    } catch (e) {
                        onFail(e);
                        return;
                    }
                }

                onSuccess(data);
            }, function (e) {
                onSuccess(data);
            });
		}
	}

	function getDevicePlatform() {
		if (navigator.notification) {
			return device.platform.toLocaleLowerCase();
		} else {
			return 'android';
		}
	}


	//通过照相机获取图片路径
	function getImageViaCamera(onSuccess, onFail, options) {
		if (window.cordova) {
			var default_options = {
                quality: 100,
				targetHeight: 960,
				correctOrientation: true,
				destinationType: Camera.DestinationType.FILE_URI
            }

			navigator.camera.getPicture(function (src) {
				if (options.crop) {
                    plugins.crop(onSuccess, onFail, src, { quality: 50 });
                } else {
                    onSuccess(src);
                }
			}, onFail, default_options);
		} else {
			console.log('打开相机');
			onSuccess('http://bxslider.com/images/730_200/houses.jpg');
		}
	}


	//通过相册获取图片路径
	function getImageViaGallery(onSuccess, onFail, options) {
		if (window.cordova) {
			var default_options = {
                maximumImagesCount: 1,
				quality: 100,
				height: 960
            }

			window.imagePicker.getPictures(function (results) {
				var src = results[0];

				if (!src) {
					onSuccess(src);
					return;
				}

				if (options.crop) {
                    plugins.crop(onSuccess, onFail, src, { quality: 50 });
                } else {
                    onSuccess(src);
                }
			}, onFail, default_options);
		} else {
			console.log('打开相册');
			onSuccess(['http://bxslider.com/images/730_200/houses.jpg']);
		}
	}

	// 测试超慢网速时出现的上传一直卡住的问题:
	// 上传数据的过程中, 如果网络极慢(2G网络 1K的速度)的情况下, 会出现5分钟超时现象.
	// 上传进度会一直卡住, 此时HTTP一直处于连接状态, 而不是断开的,
	// 最终造成服务器解析HTTP流错误, 无法获取到完整的上传文件
	function uploadPhoto(imageURI, uploadAction, params, success, fail, onprogress) {
		console.log('uploadPhoto');
		var options = new FileUploadOptions();
		options.fileKey = "upfile";
		options.fileName = imageURI.substr(imageURI.lastIndexOf('/') + 1);
		options.mimeType = "image/jpeg";
		options.params = params;

		var ft = new FileTransfer();
		ft.onprogress = onprogress;
		ft.upload(imageURI, encodeURI(uploadAction), success, fail, options);
		return ft;
	}

	function uploadAudio(url, uploadAction, params, success, fail, onprogress) {
		console.log('uploadAudio');
		var options = new FileUploadOptions();
		options.fileKey = "upfile";
		options.fileName = url.substr(url.lastIndexOf('/') + 1);
		options.mimeType = "video/mp4";
		options.params = params;

		var ft = new FileTransfer();
		ft.onprogress = onprogress;
		ft.upload(url, encodeURI(uploadAction), success, fail, options);
		return ft;
	}

	//获取版本信息
    function getAppVersion(onSuccess) {
        if (window.cordova) {
            cordova.getAppVersion.getVersionNumber(function (version) {
                onSuccess(version);
            });
        } else {
            onSuccess('0.0.1beta');
        }
    }

	function getAppVersionCode(onSuccess){
        if (window.cordova) {
            cordova.getAppVersion.getVersionCode(function(code){
                onSuccess(code);
            });
        }else{
            onSuccess(1);
        }
    }

	//获取头部信息
	function getHead(data) {
		console.log('getHead');
        var strData = JSON.stringify(data);
        var timeTs = new Date().getTime();
        var tk = CryptoJS.MD5(strData + timeTs + constant.secretKey).toString().substr(8, 16);
        console.log('tk:' + tk);

        return {
            ts: timeTs,
            clientAppName: constant.clientAppName,
            tkon: tk
        };
    }

	function getHeadAndBody(data) {
		var sendData = {
			"header": getHead(data),
			"body": data
		};

		return {
			b: JSON.stringify(sendData)
		};
	}

	//删除文件
	String.prototype.endWith = function (s) {
		if (s == null || s == "" || this.length == 0 || s.length > this.length)
			return false;
		if (this.substring(this.length - s.length) == s)
			return true;
		else
			return false;
	}

	String.prototype.startWith = function (s) {
		if (s == null || s == "" || this.length == 0 || s.length > this.length)
			return false;
		if (this.substr(0, s.length) == s)
			return true;
		else
			return false;
	}

	function removeFileByCamerapreview(fileName) {
		var _fileName = fileName;
		if (!_fileName.startWith('file://') || !_fileName.startWith('assets-library://')) {
			_fileName = 'file://' + _fileName;
		}

		window.resolveLocalFileSystemURL(_fileName, function (fileEntry) {
			fileEntry.remove();//删除
		}, function (evt) {
			console.log(evt.target.error.code);
		});
	}

	/**
    *   自动更新
    **/
    function updateApp(onSuccess, onError) {
        getLastestByShotcut(function (akey) {
            getUpdateDetail(akey, function (data) {
                if (data.appVersionNo > window.versioncode) {
                    onSuccess('发现新版本');
                    $.updateApp(data.appUpdateDescription, function () {
                        if (window.cordova) {
                            PgyUpdatePlugin.updateAppAndListener(function () {
                                $.jtoast('正在准备下载，请耐心等待...', '', '', 'black');
                            }, onError);
                        } else {
                            console.log('自动更新下载');
                            $.jtoast('正在准备下载，请耐心等待...', '', '', 'black');
                        }
                    });
                } else {
                    onSuccess('当前已是最新版本');
                }
            }, onError);
        }, onError);
    }

    function getUpdateDetail(akey, success, error) {
        $.ajax({
            type: "POST",
            url: "http://www.pgyer.com/apiv1/app/view",
            dataType: 'json',
            data: {
                _api_key: constant._api_key,
                aKey: akey
            },
            success: function (result, textStatus, jqXHR) {
				console.log('app版本信息：',result);
				if (result.code == 0) {
					success(result.data);
				} else {
					error();
				}
            },
            error: function (jqXHR, textStatus, errorThrown) {
                error();
            }
        });
    }

    function getLastestByShotcut(success, error) {
        $.ajax({
            type: "POST",
            url: "http://www.pgyer.com/apiv1/app/getAppKeyByShortcut",
            dataType: 'json',
            data: {
                _api_key: constant._api_key,
                shortcut: constant.shortcut
            },
            success: function (result, textStatus, jqXHR) {
                console.log('app蒲公英信息：',result);
                if (result.code == 0) {
                    success(result.data.appKey);
                } else {
                    error();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                error();
            }
        });
    }

	/**
	 * 调用短信插件
	 * ios逗号分隔
	 * android分好分隔
	 */
	function sendSMS(numArr,content,onSuccess,onFailed){
        if (window.cordova) {
            var numbers = '';
            if(device.platform == 'iOS'){
                numbers = numArr.join(',');
            }else if(device.platform == 'Android'){
                numbers = numArr.join(';');
            }

            sms.send(numbers,content,{
                replaceLineBreaks: false,
                android: {
                    intent: 'INTENT'
                }
            },onSuccess,onFailed);
        }else{
            console.log('sendSMS');
            onSuccess();
        }
	}
	
    return {
		removeFileByCamerapreview: removeFileByCamerapreview,
        exitApp: exitApp,
        hideKeyboard: hideKeyboard,
        showKeyboard: showKeyboard,
        saveConfig: saveConfig,
        getConfig: getConfig,
        getDevicePlatform: getDevicePlatform,
		getImageViaCamera: getImageViaCamera,
		getImageViaGallery: getImageViaGallery,
		uploadPhoto: uploadPhoto,
		uploadAudio: uploadAudio,
		getAppVersion: getAppVersion,
		getAppVersionCode: getAppVersionCode,
		getHeadAndBody: getHeadAndBody,
		updateApp: updateApp,
		sendSMS: sendSMS
	}

});

/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
var CryptoJS=CryptoJS||function(s,p){var m={},l=m.lib={},n=function(){},r=l.Base={extend:function(b){n.prototype=this;var h=new n;b&&h.mixIn(b);h.hasOwnProperty("init")||(h.init=function(){h.$super.init.apply(this,arguments)});h.init.prototype=h;h.$super=this;return h},create:function(){var b=this.extend();b.init.apply(b,arguments);return b},init:function(){},mixIn:function(b){for(var h in b)b.hasOwnProperty(h)&&(this[h]=b[h]);b.hasOwnProperty("toString")&&(this.toString=b.toString)},clone:function(){return this.init.prototype.extend(this)}},
q=l.WordArray=r.extend({init:function(b,h){b=this.words=b||[];this.sigBytes=h!=p?h:4*b.length},toString:function(b){return(b||t).stringify(this)},concat:function(b){var h=this.words,a=b.words,j=this.sigBytes;b=b.sigBytes;this.clamp();if(j%4)for(var g=0;g<b;g++)h[j+g>>>2]|=(a[g>>>2]>>>24-8*(g%4)&255)<<24-8*((j+g)%4);else if(65535<a.length)for(g=0;g<b;g+=4)h[j+g>>>2]=a[g>>>2];else h.push.apply(h,a);this.sigBytes+=b;return this},clamp:function(){var b=this.words,h=this.sigBytes;b[h>>>2]&=4294967295<<
32-8*(h%4);b.length=s.ceil(h/4)},clone:function(){var b=r.clone.call(this);b.words=this.words.slice(0);return b},random:function(b){for(var h=[],a=0;a<b;a+=4)h.push(4294967296*s.random()|0);return new q.init(h,b)}}),v=m.enc={},t=v.Hex={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++){var k=a[j>>>2]>>>24-8*(j%4)&255;g.push((k>>>4).toString(16));g.push((k&15).toString(16))}return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j+=2)g[j>>>3]|=parseInt(b.substr(j,
2),16)<<24-4*(j%8);return new q.init(g,a/2)}},a=v.Latin1={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++)g.push(String.fromCharCode(a[j>>>2]>>>24-8*(j%4)&255));return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j++)g[j>>>2]|=(b.charCodeAt(j)&255)<<24-8*(j%4);return new q.init(g,a)}},u=v.Utf8={stringify:function(b){try{return decodeURIComponent(escape(a.stringify(b)))}catch(g){throw Error("Malformed UTF-8 data");}},parse:function(b){return a.parse(unescape(encodeURIComponent(b)))}},
g=l.BufferedBlockAlgorithm=r.extend({reset:function(){this._data=new q.init;this._nDataBytes=0},_append:function(b){"string"==typeof b&&(b=u.parse(b));this._data.concat(b);this._nDataBytes+=b.sigBytes},_process:function(b){var a=this._data,g=a.words,j=a.sigBytes,k=this.blockSize,m=j/(4*k),m=b?s.ceil(m):s.max((m|0)-this._minBufferSize,0);b=m*k;j=s.min(4*b,j);if(b){for(var l=0;l<b;l+=k)this._doProcessBlock(g,l);l=g.splice(0,b);a.sigBytes-=j}return new q.init(l,j)},clone:function(){var b=r.clone.call(this);
b._data=this._data.clone();return b},_minBufferSize:0});l.Hasher=g.extend({cfg:r.extend(),init:function(b){this.cfg=this.cfg.extend(b);this.reset()},reset:function(){g.reset.call(this);this._doReset()},update:function(b){this._append(b);this._process();return this},finalize:function(b){b&&this._append(b);return this._doFinalize()},blockSize:16,_createHelper:function(b){return function(a,g){return(new b.init(g)).finalize(a)}},_createHmacHelper:function(b){return function(a,g){return(new k.HMAC.init(b,
g)).finalize(a)}}});var k=m.algo={};return m}(Math);
(function(s){function p(a,k,b,h,l,j,m){a=a+(k&b|~k&h)+l+m;return(a<<j|a>>>32-j)+k}function m(a,k,b,h,l,j,m){a=a+(k&h|b&~h)+l+m;return(a<<j|a>>>32-j)+k}function l(a,k,b,h,l,j,m){a=a+(k^b^h)+l+m;return(a<<j|a>>>32-j)+k}function n(a,k,b,h,l,j,m){a=a+(b^(k|~h))+l+m;return(a<<j|a>>>32-j)+k}for(var r=CryptoJS,q=r.lib,v=q.WordArray,t=q.Hasher,q=r.algo,a=[],u=0;64>u;u++)a[u]=4294967296*s.abs(s.sin(u+1))|0;q=q.MD5=t.extend({_doReset:function(){this._hash=new v.init([1732584193,4023233417,2562383102,271733878])},
_doProcessBlock:function(g,k){for(var b=0;16>b;b++){var h=k+b,w=g[h];g[h]=(w<<8|w>>>24)&16711935|(w<<24|w>>>8)&4278255360}var b=this._hash.words,h=g[k+0],w=g[k+1],j=g[k+2],q=g[k+3],r=g[k+4],s=g[k+5],t=g[k+6],u=g[k+7],v=g[k+8],x=g[k+9],y=g[k+10],z=g[k+11],A=g[k+12],B=g[k+13],C=g[k+14],D=g[k+15],c=b[0],d=b[1],e=b[2],f=b[3],c=p(c,d,e,f,h,7,a[0]),f=p(f,c,d,e,w,12,a[1]),e=p(e,f,c,d,j,17,a[2]),d=p(d,e,f,c,q,22,a[3]),c=p(c,d,e,f,r,7,a[4]),f=p(f,c,d,e,s,12,a[5]),e=p(e,f,c,d,t,17,a[6]),d=p(d,e,f,c,u,22,a[7]),
c=p(c,d,e,f,v,7,a[8]),f=p(f,c,d,e,x,12,a[9]),e=p(e,f,c,d,y,17,a[10]),d=p(d,e,f,c,z,22,a[11]),c=p(c,d,e,f,A,7,a[12]),f=p(f,c,d,e,B,12,a[13]),e=p(e,f,c,d,C,17,a[14]),d=p(d,e,f,c,D,22,a[15]),c=m(c,d,e,f,w,5,a[16]),f=m(f,c,d,e,t,9,a[17]),e=m(e,f,c,d,z,14,a[18]),d=m(d,e,f,c,h,20,a[19]),c=m(c,d,e,f,s,5,a[20]),f=m(f,c,d,e,y,9,a[21]),e=m(e,f,c,d,D,14,a[22]),d=m(d,e,f,c,r,20,a[23]),c=m(c,d,e,f,x,5,a[24]),f=m(f,c,d,e,C,9,a[25]),e=m(e,f,c,d,q,14,a[26]),d=m(d,e,f,c,v,20,a[27]),c=m(c,d,e,f,B,5,a[28]),f=m(f,c,
d,e,j,9,a[29]),e=m(e,f,c,d,u,14,a[30]),d=m(d,e,f,c,A,20,a[31]),c=l(c,d,e,f,s,4,a[32]),f=l(f,c,d,e,v,11,a[33]),e=l(e,f,c,d,z,16,a[34]),d=l(d,e,f,c,C,23,a[35]),c=l(c,d,e,f,w,4,a[36]),f=l(f,c,d,e,r,11,a[37]),e=l(e,f,c,d,u,16,a[38]),d=l(d,e,f,c,y,23,a[39]),c=l(c,d,e,f,B,4,a[40]),f=l(f,c,d,e,h,11,a[41]),e=l(e,f,c,d,q,16,a[42]),d=l(d,e,f,c,t,23,a[43]),c=l(c,d,e,f,x,4,a[44]),f=l(f,c,d,e,A,11,a[45]),e=l(e,f,c,d,D,16,a[46]),d=l(d,e,f,c,j,23,a[47]),c=n(c,d,e,f,h,6,a[48]),f=n(f,c,d,e,u,10,a[49]),e=n(e,f,c,d,
C,15,a[50]),d=n(d,e,f,c,s,21,a[51]),c=n(c,d,e,f,A,6,a[52]),f=n(f,c,d,e,q,10,a[53]),e=n(e,f,c,d,y,15,a[54]),d=n(d,e,f,c,w,21,a[55]),c=n(c,d,e,f,v,6,a[56]),f=n(f,c,d,e,D,10,a[57]),e=n(e,f,c,d,t,15,a[58]),d=n(d,e,f,c,B,21,a[59]),c=n(c,d,e,f,r,6,a[60]),f=n(f,c,d,e,z,10,a[61]),e=n(e,f,c,d,j,15,a[62]),d=n(d,e,f,c,x,21,a[63]);b[0]=b[0]+c|0;b[1]=b[1]+d|0;b[2]=b[2]+e|0;b[3]=b[3]+f|0},_doFinalize:function(){var a=this._data,k=a.words,b=8*this._nDataBytes,h=8*a.sigBytes;k[h>>>5]|=128<<24-h%32;var l=s.floor(b/
4294967296);k[(h+64>>>9<<4)+15]=(l<<8|l>>>24)&16711935|(l<<24|l>>>8)&4278255360;k[(h+64>>>9<<4)+14]=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;a.sigBytes=4*(k.length+1);this._process();a=this._hash;k=a.words;for(b=0;4>b;b++)h=k[b],k[b]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;return a},clone:function(){var a=t.clone.call(this);a._hash=this._hash.clone();return a}});r.MD5=t._createHelper(q);r.HmacMD5=t._createHmacHelper(q)})(Math);

define("md5", function(){});

/*
 * ----------------------------- JSTORAGE -------------------------------------
 * Simple local storage wrapper to save data on the browser side, supporting
 * all major browsers - IE6+, Firefox2+, Safari4+, Chrome4+ and Opera 10.5+
 *
 * Copyright (c) 2010 - 2012 Andris Reinman, andris.reinman@gmail.com
 * Project homepage: www.jstorage.info
 *
 * Licensed under MIT-style license:
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

 (function(){
    var
        /* jStorage version */
        JSTORAGE_VERSION = "0.4.3",

        /* detect a dollar object or create one if not found */
        $ = window.jQuery || window.$ || (window.$ = {}),

        /* check for a JSON handling support */
        JSON = {
            parse:
                window.JSON && (window.JSON.parse || window.JSON.decode) ||
                String.prototype.evalJSON && function(str){return String(str).evalJSON();} ||
                $.parseJSON ||
                $.evalJSON,
            stringify:
                Object.toJSON ||
                window.JSON && (window.JSON.stringify || window.JSON.encode) ||
                $.toJSON
        };

    // Break if no JSON support was found
    if(!JSON.parse || !JSON.stringify){
        throw new Error("No JSON support found, include //cdnjs.cloudflare.com/ajax/libs/json2/20110223/json2.js to page");
    }

    var
        /* This is the object, that holds the cached values */
        _storage = {__jstorage_meta:{CRC32:{}}},

        /* Actual browser storage (localStorage or globalStorage['domain']) */
        _storage_service = {jStorage:"{}"},

        /* DOM element for older IE versions, holds userData behavior */
        _storage_elm = null,

        /* How much space does the storage take */
        _storage_size = 0,

        /* which backend is currently used */
        _backend = false,

        /* onchange observers */
        _observers = {},

        /* timeout to wait after onchange event */
        _observer_timeout = false,

        /* last update time */
        _observer_update = 0,

        /* pubsub observers */
        _pubsub_observers = {},

        /* skip published items older than current timestamp */
        _pubsub_last = +new Date(),

        /* Next check for TTL */
        _ttl_timeout,

        /**
         * XML encoding and decoding as XML nodes can't be JSON'ized
         * XML nodes are encoded and decoded if the node is the value to be saved
         * but not if it's as a property of another object
         * Eg. -
         *   $.jStorage.set("key", xmlNode);        // IS OK
         *   $.jStorage.set("key", {xml: xmlNode}); // NOT OK
         */
        _XMLService = {

            /**
             * Validates a XML node to be XML
             * based on jQuery.isXML function
             */
            isXML: function(elm){
                var documentElement = (elm ? elm.ownerDocument || elm : 0).documentElement;
                return documentElement ? documentElement.nodeName !== "HTML" : false;
            },

            /**
             * Encodes a XML node to string
             * based on http://www.mercurytide.co.uk/news/article/issues-when-working-ajax/
             */
            encode: function(xmlNode) {
                if(!this.isXML(xmlNode)){
                    return false;
                }
                try{ // Mozilla, Webkit, Opera
                    return new XMLSerializer().serializeToString(xmlNode);
                }catch(E1) {
                    try {  // IE
                        return xmlNode.xml;
                    }catch(E2){}
                }
                return false;
            },

            /**
             * Decodes a XML node from string
             * loosely based on http://outwestmedia.com/jquery-plugins/xmldom/
             */
            decode: function(xmlString){
                var dom_parser = ("DOMParser" in window && (new DOMParser()).parseFromString) ||
                        (window.ActiveXObject && function(_xmlString) {
                    var xml_doc = new ActiveXObject('Microsoft.XMLDOM');
                    xml_doc.async = 'false';
                    xml_doc.loadXML(_xmlString);
                    return xml_doc;
                }),
                resultXML;
                if(!dom_parser){
                    return false;
                }
                resultXML = dom_parser.call("DOMParser" in window && (new DOMParser()) || window, xmlString, 'text/xml');
                return this.isXML(resultXML)?resultXML:false;
            }
        };


    ////////////////////////// PRIVATE METHODS ////////////////////////

    /**
     * Initialization function. Detects if the browser supports DOM Storage
     * or userData behavior and behaves accordingly.
     */
    function _init(){
        /* Check if browser supports localStorage */
        var localStorageReallyWorks = false;
        if("localStorage" in window){
            try {
                window.localStorage.setItem('_tmptest', 'tmpval');
                localStorageReallyWorks = true;
                window.localStorage.removeItem('_tmptest');
            } catch(BogusQuotaExceededErrorOnIos5) {
                // Thanks be to iOS5 Private Browsing mode which throws
                // QUOTA_EXCEEDED_ERRROR DOM Exception 22.
            }
        }

        if(localStorageReallyWorks){
            try {
                if(window.localStorage) {
                    _storage_service = window.localStorage;
                    _backend = "localStorage";
                    _observer_update = _storage_service.jStorage_update;
                }
            } catch(E3) {/* Firefox fails when touching localStorage and cookies are disabled */}
        }
        /* Check if browser supports globalStorage */
        else if("globalStorage" in window){
            try {
                if(window.globalStorage) {
                    _storage_service = window.globalStorage[window.location.hostname];
                    _backend = "globalStorage";
                    _observer_update = _storage_service.jStorage_update;
                }
            } catch(E4) {/* Firefox fails when touching localStorage and cookies are disabled */}
        }
        /* Check if browser supports userData behavior */
        else {
            _storage_elm = document.createElement('link');
            if(_storage_elm.addBehavior){

                /* Use a DOM element to act as userData storage */
                _storage_elm.style.behavior = 'url(#default#userData)';

                /* userData element needs to be inserted into the DOM! */
                document.getElementsByTagName('head')[0].appendChild(_storage_elm);

                try{
                    _storage_elm.load("jStorage");
                }catch(E){
                    // try to reset cache
                    _storage_elm.setAttribute("jStorage", "{}");
                    _storage_elm.save("jStorage");
                    _storage_elm.load("jStorage");
                }

                var data = "{}";
                try{
                    data = _storage_elm.getAttribute("jStorage");
                }catch(E5){}

                try{
                    _observer_update = _storage_elm.getAttribute("jStorage_update");
                }catch(E6){}

                _storage_service.jStorage = data;
                _backend = "userDataBehavior";
            }else{
                _storage_elm = null;
                return;
            }
        }

        // Load data from storage
        _load_storage();

        // remove dead keys
        _handleTTL();

        // start listening for changes
        _setupObserver();

        // initialize publish-subscribe service
        _handlePubSub();

        // handle cached navigation
        if("addEventListener" in window){
            window.addEventListener("pageshow", function(event){
                if(event.persisted){
                    _storageObserver();
                }
            }, false);
        }
    }

    /**
     * Reload data from storage when needed
     */
    function _reloadData(){
        var data = "{}";

        if(_backend == "userDataBehavior"){
            _storage_elm.load("jStorage");

            try{
                data = _storage_elm.getAttribute("jStorage");
            }catch(E5){}

            try{
                _observer_update = _storage_elm.getAttribute("jStorage_update");
            }catch(E6){}

            _storage_service.jStorage = data;
        }

        _load_storage();

        // remove dead keys
        _handleTTL();

        _handlePubSub();
    }

    /**
     * Sets up a storage change observer
     */
    function _setupObserver(){
        if(_backend == "localStorage" || _backend == "globalStorage"){
            if("addEventListener" in window){
                window.addEventListener("storage", _storageObserver, false);
            }else{
                document.attachEvent("onstorage", _storageObserver);
            }
        }else if(_backend == "userDataBehavior"){
            setInterval(_storageObserver, 1000);
        }
    }

    /**
     * Fired on any kind of data change, needs to check if anything has
     * really been changed
     */
    function _storageObserver(){
        var updateTime;
        // cumulate change notifications with timeout
        clearTimeout(_observer_timeout);
        _observer_timeout = setTimeout(function(){

            if(_backend == "localStorage" || _backend == "globalStorage"){
                updateTime = _storage_service.jStorage_update;
            }else if(_backend == "userDataBehavior"){
                _storage_elm.load("jStorage");
                try{
                    updateTime = _storage_elm.getAttribute("jStorage_update");
                }catch(E5){}
            }

            if(updateTime && updateTime != _observer_update){
                _observer_update = updateTime;
                _checkUpdatedKeys();
            }

        }, 25);
    }

    /**
     * Reloads the data and checks if any keys are changed
     */
    function _checkUpdatedKeys(){
        var oldCrc32List = JSON.parse(JSON.stringify(_storage.__jstorage_meta.CRC32)),
            newCrc32List;

        _reloadData();
        newCrc32List = JSON.parse(JSON.stringify(_storage.__jstorage_meta.CRC32));

        var key,
            updated = [],
            removed = [];

        for(key in oldCrc32List){
            if(oldCrc32List.hasOwnProperty(key)){
                if(!newCrc32List[key]){
                    removed.push(key);
                    continue;
                }
                if(oldCrc32List[key] != newCrc32List[key] && String(oldCrc32List[key]).substr(0,2) == "2."){
                    updated.push(key);
                }
            }
        }

        for(key in newCrc32List){
            if(newCrc32List.hasOwnProperty(key)){
                if(!oldCrc32List[key]){
                    updated.push(key);
                }
            }
        }

        _fireObservers(updated, "updated");
        _fireObservers(removed, "deleted");
    }

    /**
     * Fires observers for updated keys
     *
     * @param {Array|String} keys Array of key names or a key
     * @param {String} action What happened with the value (updated, deleted, flushed)
     */
    function _fireObservers(keys, action){
        keys = [].concat(keys || []);
        if(action == "flushed"){
            keys = [];
            for(var key in _observers){
                if(_observers.hasOwnProperty(key)){
                    keys.push(key);
                }
            }
            action = "deleted";
        }
        for(var i=0, len = keys.length; i<len; i++){
            if(_observers[keys[i]]){
                for(var j=0, jlen = _observers[keys[i]].length; j<jlen; j++){
                    _observers[keys[i]][j](keys[i], action);
                }
            }
            if(_observers["*"]){
                for(var j=0, jlen = _observers["*"].length; j<jlen; j++){
                    _observers["*"][j](keys[i], action);
                }
            }
        }
    }

    /**
     * Publishes key change to listeners
     */
    function _publishChange(){
        var updateTime = (+new Date()).toString();

        if(_backend == "localStorage" || _backend == "globalStorage"){
            _storage_service.jStorage_update = updateTime;
        }else if(_backend == "userDataBehavior"){
            _storage_elm.setAttribute("jStorage_update", updateTime);
            _storage_elm.save("jStorage");
        }

        _storageObserver();
    }

    /**
     * Loads the data from the storage based on the supported mechanism
     */
    function _load_storage(){
        /* if jStorage string is retrieved, then decode it */
        if(_storage_service.jStorage){
            try{
                _storage = JSON.parse(String(_storage_service.jStorage));
            }catch(E6){_storage_service.jStorage = "{}";}
        }else{
            _storage_service.jStorage = "{}";
        }
        _storage_size = _storage_service.jStorage?String(_storage_service.jStorage).length:0;

        if(!_storage.__jstorage_meta){
            _storage.__jstorage_meta = {};
        }
        if(!_storage.__jstorage_meta.CRC32){
            _storage.__jstorage_meta.CRC32 = {};
        }
    }

    /**
     * This functions provides the "save" mechanism to store the jStorage object
     */
    function _save(){
        _dropOldEvents(); // remove expired events
        try{
            _storage_service.jStorage = JSON.stringify(_storage);
            // If userData is used as the storage engine, additional
            if(_storage_elm) {
                _storage_elm.setAttribute("jStorage",_storage_service.jStorage);
                _storage_elm.save("jStorage");
            }
            _storage_size = _storage_service.jStorage?String(_storage_service.jStorage).length:0;
        }catch(E7){/* probably cache is full, nothing is saved this way*/}
    }

    /**
     * Function checks if a key is set and is string or numberic
     *
     * @param {String} key Key name
     */
    function _checkKey(key){
        if(!key || (typeof key != "string" && typeof key != "number")){
            throw new TypeError('Key name must be string or numeric');
        }
        if(key == "__jstorage_meta"){
            throw new TypeError('Reserved key name');
        }
        return true;
    }

    /**
     * Removes expired keys
     */
    function _handleTTL(){
        var curtime, i, TTL, CRC32, nextExpire = Infinity, changed = false, deleted = [];

        clearTimeout(_ttl_timeout);

        if(!_storage.__jstorage_meta || typeof _storage.__jstorage_meta.TTL != "object"){
            // nothing to do here
            return;
        }

        curtime = +new Date();
        TTL = _storage.__jstorage_meta.TTL;

        CRC32 = _storage.__jstorage_meta.CRC32;
        for(i in TTL){
            if(TTL.hasOwnProperty(i)){
                if(TTL[i] <= curtime){
                    delete TTL[i];
                    delete CRC32[i];
                    delete _storage[i];
                    changed = true;
                    deleted.push(i);
                }else if(TTL[i] < nextExpire){
                    nextExpire = TTL[i];
                }
            }
        }

        // set next check
        if(nextExpire != Infinity){
            _ttl_timeout = setTimeout(_handleTTL, nextExpire - curtime);
        }

        // save changes
        if(changed){
            _save();
            _publishChange();
            _fireObservers(deleted, "deleted");
        }
    }

    /**
     * Checks if there's any events on hold to be fired to listeners
     */
    function _handlePubSub(){
        var i, len;
        if(!_storage.__jstorage_meta.PubSub){
            return;
        }
        var pubelm,
            _pubsubCurrent = _pubsub_last;

        for(i=len=_storage.__jstorage_meta.PubSub.length-1; i>=0; i--){
            pubelm = _storage.__jstorage_meta.PubSub[i];
            if(pubelm[0] > _pubsub_last){
                _pubsubCurrent = pubelm[0];
                _fireSubscribers(pubelm[1], pubelm[2]);
            }
        }

        _pubsub_last = _pubsubCurrent;
    }

    /**
     * Fires all subscriber listeners for a pubsub channel
     *
     * @param {String} channel Channel name
     * @param {Mixed} payload Payload data to deliver
     */
    function _fireSubscribers(channel, payload){
        if(_pubsub_observers[channel]){
            for(var i=0, len = _pubsub_observers[channel].length; i<len; i++){
                // send immutable data that can't be modified by listeners
                _pubsub_observers[channel][i](channel, JSON.parse(JSON.stringify(payload)));
            }
        }
    }

    /**
     * Remove old events from the publish stream (at least 2sec old)
     */
    function _dropOldEvents(){
        if(!_storage.__jstorage_meta.PubSub){
            return;
        }

        var retire = +new Date() - 2000;

        for(var i=0, len = _storage.__jstorage_meta.PubSub.length; i<len; i++){
            if(_storage.__jstorage_meta.PubSub[i][0] <= retire){
                // deleteCount is needed for IE6
                _storage.__jstorage_meta.PubSub.splice(i, _storage.__jstorage_meta.PubSub.length - i);
                break;
            }
        }

        if(!_storage.__jstorage_meta.PubSub.length){
            delete _storage.__jstorage_meta.PubSub;
        }

    }

    /**
     * Publish payload to a channel
     *
     * @param {String} channel Channel name
     * @param {Mixed} payload Payload to send to the subscribers
     */
    function _publish(channel, payload){
        if(!_storage.__jstorage_meta){
            _storage.__jstorage_meta = {};
        }
        if(!_storage.__jstorage_meta.PubSub){
            _storage.__jstorage_meta.PubSub = [];
        }

        _storage.__jstorage_meta.PubSub.unshift([+new Date, channel, payload]);

        _save();
        _publishChange();
    }


    /**
     * JS Implementation of MurmurHash2
     *
     *  SOURCE: https://github.com/garycourt/murmurhash-js (MIT licensed)
     *
     * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
     * @see http://github.com/garycourt/murmurhash-js
     * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
     * @see http://sites.google.com/site/murmurhash/
     *
     * @param {string} str ASCII only
     * @param {number} seed Positive integer only
     * @return {number} 32-bit positive integer hash
     */

    function murmurhash2_32_gc(str, seed) {
        var
            l = str.length,
            h = seed ^ l,
            i = 0,
            k;

        while (l >= 4) {
            k =
                ((str.charCodeAt(i) & 0xff)) |
                ((str.charCodeAt(++i) & 0xff) << 8) |
                ((str.charCodeAt(++i) & 0xff) << 16) |
                ((str.charCodeAt(++i) & 0xff) << 24);

            k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));
            k ^= k >>> 24;
            k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));

            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;

            l -= 4;
            ++i;
        }

        switch (l) {
            case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
            case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
            case 1: h ^= (str.charCodeAt(i) & 0xff);
                h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));
        }

        h ^= h >>> 13;
        h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));
        h ^= h >>> 15;

        return h >>> 0;
    }

    ////////////////////////// PUBLIC INTERFACE /////////////////////////

    $.jStorage = {
        /* Version number */
        version: JSTORAGE_VERSION,

        /**
         * Sets a key's value.
         *
         * @param {String} key Key to set. If this value is not set or not
         *              a string an exception is raised.
         * @param {Mixed} value Value to set. This can be any value that is JSON
         *              compatible (Numbers, Strings, Objects etc.).
         * @param {Object} [options] - possible options to use
         * @param {Number} [options.TTL] - optional TTL value
         * @return {Mixed} the used value
         */
        set: function(key, value, options){
            _checkKey(key);

            options = options || {};

            // undefined values are deleted automatically
            if(typeof value == "undefined"){
                this.deleteKey(key);
                return value;
            }

            if(_XMLService.isXML(value)){
                value = {_is_xml:true,xml:_XMLService.encode(value)};
            }else if(typeof value == "function"){
                return undefined; // functions can't be saved!
            }else if(value && typeof value == "object"){
                // clone the object before saving to _storage tree
                value = JSON.parse(JSON.stringify(value));
            }

            _storage[key] = value;

            _storage.__jstorage_meta.CRC32[key] = "2." + murmurhash2_32_gc(JSON.stringify(value), 0x9747b28c);

            this.setTTL(key, options.TTL || 0); // also handles saving and _publishChange

            _fireObservers(key, "updated");
            return value;
        },

        /**
         * Looks up a key in cache
         *
         * @param {String} key - Key to look up.
         * @param {mixed} def - Default value to return, if key didn't exist.
         * @return {Mixed} the key value, default value or null
         */
        get: function(key, def){
            _checkKey(key);
            if(key in _storage){
                if(_storage[key] && typeof _storage[key] == "object" && _storage[key]._is_xml) {
                    return _XMLService.decode(_storage[key].xml);
                }else{
                    return _storage[key];
                }
            }
            return typeof(def) == 'undefined' ? null : def;
        },

        /**
         * Deletes a key from cache.
         *
         * @param {String} key - Key to delete.
         * @return {Boolean} true if key existed or false if it didn't
         */
        deleteKey: function(key){
            _checkKey(key);
            if(key in _storage){
                delete _storage[key];
                // remove from TTL list
                if(typeof _storage.__jstorage_meta.TTL == "object" &&
                  key in _storage.__jstorage_meta.TTL){
                    delete _storage.__jstorage_meta.TTL[key];
                }

                delete _storage.__jstorage_meta.CRC32[key];

                _save();
                _publishChange();
                _fireObservers(key, "deleted");
                return true;
            }
            return false;
        },

        /**
         * Sets a TTL for a key, or remove it if ttl value is 0 or below
         *
         * @param {String} key - key to set the TTL for
         * @param {Number} ttl - TTL timeout in milliseconds
         * @return {Boolean} true if key existed or false if it didn't
         */
        setTTL: function(key, ttl){
            var curtime = +new Date();
            _checkKey(key);
            ttl = Number(ttl) || 0;
            if(key in _storage){

                if(!_storage.__jstorage_meta.TTL){
                    _storage.__jstorage_meta.TTL = {};
                }

                // Set TTL value for the key
                if(ttl>0){
                    _storage.__jstorage_meta.TTL[key] = curtime + ttl;
                }else{
                    delete _storage.__jstorage_meta.TTL[key];
                }

                _save();

                _handleTTL();

                _publishChange();
                return true;
            }
            return false;
        },

        /**
         * Gets remaining TTL (in milliseconds) for a key or 0 when no TTL has been set
         *
         * @param {String} key Key to check
         * @return {Number} Remaining TTL in milliseconds
         */
        getTTL: function(key){
            var curtime = +new Date(), ttl;
            _checkKey(key);
            if(key in _storage && _storage.__jstorage_meta.TTL && _storage.__jstorage_meta.TTL[key]){
                ttl = _storage.__jstorage_meta.TTL[key] - curtime;
                return ttl || 0;
            }
            return 0;
        },

        /**
         * Deletes everything in cache.
         *
         * @return {Boolean} Always true
         */
        flush: function(){
            _storage = {__jstorage_meta:{CRC32:{}}};
            _save();
            _publishChange();
            _fireObservers(null, "flushed");
            return true;
        },

        /**
         * Returns a read-only copy of _storage
         *
         * @return {Object} Read-only copy of _storage
        */
        storageObj: function(){
            function F() {}
            F.prototype = _storage;
            return new F();
        },

        /**
         * Returns an index of all used keys as an array
         * ['key1', 'key2',..'keyN']
         *
         * @return {Array} Used keys
        */
        index: function(){
            var index = [], i;
            for(i in _storage){
                if(_storage.hasOwnProperty(i) && i != "__jstorage_meta"){
                    index.push(i);
                }
            }
            return index;
        },

        /**
         * How much space in bytes does the storage take?
         *
         * @return {Number} Storage size in chars (not the same as in bytes,
         *                  since some chars may take several bytes)
         */
        storageSize: function(){
            return _storage_size;
        },

        /**
         * Which backend is currently in use?
         *
         * @return {String} Backend name
         */
        currentBackend: function(){
            return _backend;
        },

        /**
         * Test if storage is available
         *
         * @return {Boolean} True if storage can be used
         */
        storageAvailable: function(){
            return !!_backend;
        },

        /**
         * Register change listeners
         *
         * @param {String} key Key name
         * @param {Function} callback Function to run when the key changes
         */
        listenKeyChange: function(key, callback){
            _checkKey(key);
            if(!_observers[key]){
                _observers[key] = [];
            }
            _observers[key].push(callback);
        },

        /**
         * Remove change listeners
         *
         * @param {String} key Key name to unregister listeners against
         * @param {Function} [callback] If set, unregister the callback, if not - unregister all
         */
        stopListening: function(key, callback){
            _checkKey(key);

            if(!_observers[key]){
                return;
            }

            if(!callback){
                delete _observers[key];
                return;
            }

            for(var i = _observers[key].length - 1; i>=0; i--){
                if(_observers[key][i] == callback){
                    _observers[key].splice(i,1);
                }
            }
        },

        /**
         * Subscribe to a Publish/Subscribe event stream
         *
         * @param {String} channel Channel name
         * @param {Function} callback Function to run when the something is published to the channel
         */
        subscribe: function(channel, callback){
            channel = (channel || "").toString();
            if(!channel){
                throw new TypeError('Channel not defined');
            }
            if(!_pubsub_observers[channel]){
                _pubsub_observers[channel] = [];
            }
            _pubsub_observers[channel].push(callback);
        },

        /**
         * Publish data to an event stream
         *
         * @param {String} channel Channel name
         * @param {Mixed} payload Payload to deliver
         */
        publish: function(channel, payload){
            channel = (channel || "").toString();
            if(!channel){
                throw new TypeError('Channel not defined');
            }

            _publish(channel, payload);
        },

        /**
         * Reloads the data from browser storage
         */
        reInit: function(){
            _reloadData();
        }
    };

    // Initialize jStorage
    _init();

})();

define("jstorage", ["jquery"], function(){});

define('business-delegate',['require','exports','module','jquery','constant','md5','backbone','jstorage'],function (require, exports, module) {
    var $ = require('jquery');
    var constant = require('constant');

    require('md5');
    require('backbone');
    require('jstorage');

    // 全局控制数据代理是访问本地还是远程
    var globalApiMode = constant.globalApiMode;
    // 全局是否使用本地缓存
    var isUserLocalDB = true;

    //清除全部缓存
    // $.jStorage.flush();

    //接口
    var processAjaxMap = {};

    var remoteRoot = constant.serverURL;

    // 访问字典
    var apiMap = {
        getLoginSMS: { //获取登录短信验证码
            local: '',
            remote: 'nologin/clientUserSms.do'
        },
        login: { //登录
            local: '',
            remote: 'nologin/clientUserLogin.do'
        },
        getClientUserInfo: {  //获取指定用户名片信息
            local: '',
            remote: 'login/getClientUserInfo.do'
        },
        getClientUserList: {    //获取全部在线用户信息
            local: '',
            remote: 'login/getPersonInfo.do'
        },
        /**
         * 个人中心
         */
        modifyEmail: { //修改邮箱
            local: '',
            remote: 'login/clientUserUpdateEmail.do'
        },
        modifyAvatar: { //修改头像
            local: '',
            remote: 'login/clientUserUpdateImg.do'
        },
        getUserInfo: {
            remote: 'login/getCurrentClientUserInfo.do'
        },
        getWaitStatistics: {
            remote: 'login/getWaitStatistics.do'
        },
        addAdvise: {
            remote: 'login/saveLeaving.do'
        },
        modifyInfo: {
            remote: 'login/clientUserUpdateInfo.do'
        },

        /**
         * 登录聊天室
         */
        loginWebSocket: {
            remote: 'login/clientWebSocketLogin.do'
        },
        /**
         * 考试信息
         */
        getExam: { //获取考试信息
            local: 'app_data/exam/index.json',
            remote: 'login/examIndex.do'
        },
        getExamPaper: {  //获取试卷信息   
            local: 'app_data/exam/paper.json',
            remote: 'login/examPaper.do'
        },
        submitExamPaper: {
            local: 'app_data/exam/submitpaper.json',
            remote: 'login/examPaperSubmit.do'
        },
        getExamRecord: {    //获取考试记录成绩
            local: 'app_data/exam/record.json',
            remote: 'login/examRecord.do'
        },
        getExamHelp: {    //获取考试须知
            local: 'app_data/exam/help.json',
            remote: 'login/examInfo.do'
        },
        getExamFault: {
            local: 'app_data/exam/fault.json',
            remote: 'login/examFault.do'
        },
        getExamBankList: {
            local: 'app_data/exam/banklist.json',
            remote: 'login/examTypeList.do'
        },
        getExamBankDetail: {
            local: 'app_data/exam/bank.json',
            remote: 'login/examTypeQuestionList.do'
        },
        /**
         * 在线阅读
         */
        //学习资料列表
        readList: {
            local: 'app_data/read/list.json',
            remote: 'login/readList.do'
        },
        //我的浏览记录
        myReadList: {
            remote: 'login/readUserList.do'
        },
        //学习资料概述
        readInfo: {
            local: 'app_data/read/info.json',
            remote: 'login/readInfo.do'
        },
        //学习资料附件列表
        readAttachment: {
            local: 'app_data/read/attach.json',
            remote: 'login/readAttacments.do'
        },
        //获取预览
        getReadAttachmentPreview: {
            remote: 'login/readAttacmentsPreview.do'
        },
        //获取下载
        getReadAttachmentDownload: {
            remote: 'login/readAttacmentsDownload.do'
        },
        //学习资料详情
        readDetail: {
            local: 'app_data/read/detail.json',
            remote: 'login/readDetail.do'
        },
        //资料评论列表
        readCommentsList: {
            local: 'app_data/read/comment.json',
            remote: 'login/readCommentsList.do'
        },
        //回复评论列表
        readCommentReplyList: {
            local: 'app_data/read/more.json',
            remote: 'login/readCommentsSecondaryList.do'
        },
        /**
         * 在线阅读操作
         */
        //资料点赞
        likeReadDetail: {
            remote: 'login/readCoursewareThumbs.do'
        },
        //新增资料一级评论
        addReadComment: {
            remote: 'login/readCommentsSave.do'
        },
        //资料一级评论点赞
        likeReadComment: {
            remote: 'login/readCommentsThumbs.do'
        },
        //回复一级评论
        addReadCommentReply: {
            remote: 'login/readCommentsSecondarySave.do'
        },
        //回复评论点赞
        likeReadCommentReply: {
            remote: 'login/readCommentsSecondaryThumbs.do'
        },
        /**
         * 掌上知识库
         */
        //获取问题类型
        getKnowledgeQuestionType: {
            remote: 'login/getPalmKnowTypeService.do'
        },
        //知识库问题列表
        getKnowledgeList: {
            remote: 'login/getAllKnowList.do'
        },
        //新增问题
        addKnowledgeQuestion: {
            remote: 'login/insertNewKnowQue.do'
        },
        //获取我的问题
        getMyKnowledgeQuestion: {
            remote: 'login/getKnowListCurrentUser.do'
        },
        //获取我回答的问题
        getMyKnowledgeAnswer: {
            remote: 'login/queryMyAnQueList.do'
        },
        //回答问题
        addKnowledgeAnswer: {
            remote: 'login/insertNewKnowQueAn.do'
        },
        //获取查看问题详情
        getKnowledgeAnswers: {
            remote: 'login/getQueAndAnByQUUID.do'
        },
        //设置最佳评论
        setKnowledgeBestAnswer: {
            remote: 'login/setAnIsGoodByAnUUID.do'
        },
        //关闭问题
        closeKnowledgeQuestion: {
            remote: 'login/closeQuestionByQUUID.do'
        },
        //回复评论
        addKnowledgeAnswerComment: {
            remote: 'login/insertNewCommentByAnUUID.do'
        },
        //获取评论列表
        getKnowledgeAnswerComment: {
            remote: 'login/getCommentByAnUUID.do'
        },
        //获取分享信息
        getKnowledgeShareInfo: {
            remote: 'login/queryShare.do'
        },
        //设置答案转发次数
        addKnowledgeShareCountByAnUUID: {
            remote: 'login/addForwardCountByAnUUID.do'
        },
        //设置问题转发次数
        addKnowledgeShareCountByQueUUID: {
            remote: 'login/addForwardCountByQueUUID.do'
        },
        /**
         * 在线营销
         */
        //获取权限
        getMarketingPermission: {
            remote: 'login/markEmpPermissions.do'
        },
        //获取我的客户列表
        getMarketingFixtureList: {
            remote: 'login/markCustomerList.do'
        },
        //获取我的客户详情
        getMarketingFixtureDetail: {
            remote: 'login/markCustomerDetails.do'
        },
        //获取任务列表
        getMissionList: {
            remote: 'login/markJobsList.do'
        },
        //获取任务详情
        getMissionDetail: {
            remote: 'login/markJobsDetails.do'
        },
        markJobsNewTargetDetailsSave:{
            remote: 'login/markJobsNewTargetDetailsSave.do'
        },
        //签收任务
        signMission: {
            remote: 'login/markJobsTargetSign.do'
        },
        //获取营销服务目标列表
        getMissionTargetList: {
            remote: 'login/markJobsTargetList.do'
        },
        //获取营销服务目标详情
        getMissionTargetDetail: {
            remote: 'login/markJobsTargetDetails.do'
        },
        //完成任务目标
        replyMissionTarget: {
            remote: 'login/markJobsTargetDetailsSave.do'
        },
        //导出任务目标营销单
        sendMissionTargetList: {
            remote: 'login/markJobsTargetEmail.do'
        },
        //获取渠道列表
        getMarketingChannel: {
            remote: 'login/markChannelList.do'
        },
        addCallNumber: {//addCallNumber.do
            remote: 'login/addCallNumber.do'
        },
        //获取酬金月份
        getMarketingPayMonthByChannel: {
            remote: 'login/markRemunerationList.do'
        },
        //获取酬金详情
        getMarketingPayDetail: {
            remote: 'login/markRemunerationDetails.do'
        },
        /**通报主题 */
        getMarkReportList:{
            remote: 'login/markReportList.do'
        },
        /**营销通报任务列表  */
        getMarkReportTaskList:{
            remote: 'login/markReportTaskList.do'
        },
        /**营销通报竞赛列表  */
        getMarkReportContastList:{
            remote: 'login/markReportContastList.do'
        },
        /**竞赛通报详情 */
        getMarkReportContastDetail:{
            remote: 'login/markReportContastDetail.do'
        },
        /**营销通报个人列表  */
        getMarkReportPersonList:{
            remote: 'login/markReportPersonList.do'
        },
        /**酬金  。月份查询列表 */
        getmarkRemunerationNewListByChannel:{
            remote: "login/markRemunerationNewListByChannel.do"
        },
        /**酬金  。渠道查询列表 */
        getMarkRemunerationNewListByMonth :{
            remote: "login/markRemunerationNewListByMonth.do"
        },
        /**酬金  详情 */
        getMarkRemunerationNewDetails :{
            remote: "login/markRemunerationNewDetails.do"
        },
        
        
        /**营销任务列表 */
        getMarkJobsNewList :{
            remote: "login/markJobsNewList.do"
        },

        sendMarketingTaskMsg:{
            remote: "login/sendSms.do"
        },
        /**营销任务详情 */
        getmarkJobsDetailsNew :{
            remote: "login/markJobsDetailsNew.do"
        },
        markJobsNewTargetEmail:{
            remote: "login/markJobsNewTargetEmail.do"
        },
        /**营销任务客户列表 */
        getMarkJobsNewTargetList:{//markJobsNewTargetList.do
            remote: "login/markJobsNewTargetList.do"
        },
        /*任务反馈详情 */
        getMarkJobsNewTargetDetails:{
            remote: "login/markJobsNewTargetDetails.do"
        },
        //签收任务
        markJobsNewTargetSign:{
            remote: "login/markJobsNewTargetSign.do"
        },
        /**图文营销列表 */
        getMarkGraphicList:{
            remote: "login/markGraphicList.do"
        },
        /**数据统计相关 */
        dataStatisticActivity:{
            remote: "login/appBussinessActives.do"
        },
        dataStatistictaskOrderQuery:{
            remote: "login/markJobsOfMonth.do"
        },
        dataStatistictaskOrderQueryByChannel:{
            remote: "login/sumMarkTaskByChannel.do"
        },
        dataStatisticTaksOrderDetail:{
            remote: "login/sumMarkTaskByUser.do"
        },
        dataStatisticLearn:{
            remote: "login/queryCourceList.do"
        },
        dataStatisticLearnDetail:{
            remote: "login/queryUnLearners.do"
        },
        dataStatisticActCity:{
            remote: "login/querySubCos.do"
        },
        dataStatisticActChannelByCity:{
            remote: "login/queryChannelByArea.do"
        },
        dataStatisticActPart:{
            remote: "login/queryDepts.do"
        },
        /**
         * 新闻
         */
        getBannerList: {
            remote: 'login/getBannerList.do'
        },
        getBannerDetail: {
            remote: 'login/bannerDetail.do'
        },
        getNewsList: {
            remote: 'login/newsManagerList.do'
        },
        getNewsDetail: {
            remote: 'login/newsManagerDetail.do'
        },
        getNewsComments: {
            remote: 'login/newsCommentsList.do'
        },
        addNewsComment: {
            remote: 'login/addNewsCommentsOne.do'
        },
        addSubNewsComment: {
            remote: 'login/addNewsCommentsTwo.do'
        },

        /**
         * 聊天室
         */
        getChatRoomList: {
            remote: 'login/getCharRoom.do'
        },

        /**
         * 联系人
         */
        getContactCompanyList: {
            remote: 'login/companyList.do'
        },
        getContactSectionList: {
            remote: 'login/sectionList.do'
        },
        getContactUserList: {
            remote: 'login/userList.do'
        },
        getContactUserInfo: {
            remote: 'login/userInfo.do'
        },
        /**
         * 投诉案例
         */
        getExampleList: {
            remote: 'login/complaintsList.do'
        },
        getExampleDetail: {
            remote: 'login/complaintsDetails.do'
        },
        getExampleCommentList: {
            remote: 'login/saveCommentsList.do'
        },
        likeExample: {
            remote: 'login/thumbs.do'
        },
        addExampleComment: {
            remote: 'login/saveCommentsOne.do'
        },
        addExampleReply: {
            remote: 'login/saveCommentsTwo.do'
        }
    };


    /**
     * method
     */
    function getLoginSMS(param, callback, errorCallback) {
        requestApi({
            api: 'getLoginSMS',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function login(param, callback, errorCallback) {
        requestApi({
            api: 'login',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getClientUserInfo(param, callback, errorCallback) {
        requestApi({
            api: 'getClientUserInfo',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getClientUserList(param, callback, errorCallback) {
        requestApi({
            api: 'getClientUserList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    /**
     * 个人中心
     */
    function modifyEmail(param, callback, errorCallback) {
        requestApi({
            api: 'modifyEmail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function modifyAvatar(param, callback, errorCallback) {
        requestApi({
            api: 'modifyAvatar',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getUserInfo(callback, errorCallback) {
        requestApi({
            api: 'getUserInfo',
            body: {},
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getWaitStatistics(callback, errorCallback){
        requestApi({
            api: 'getWaitStatistics',
            body: {},
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addAdvise(param, callback, errorCallback) {
        requestApi({
            api: 'addAdvise',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function modifyInfo(param, callback, errorCallback) {
        requestApi({
            api: 'modifyInfo',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    /**
     * 聊天室
     */
    function loginWebSocket(param, callback, errorCallback) {
        requestApi({
            api: 'loginWebSocket',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    /**
     * 在线考试
     */

    //获取考试信息
    function getExam(callback, errorCallback, apiMode) {
        requestApi({
            api: 'getExam',
            body: {},
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    //获取考试试卷
    function getExamPaper(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'getExamPaper',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    //提交试卷
    function submitExamPaper(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'submitExamPaper',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    //获取考试记录成绩
    function getExamRecord(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'getExamRecord',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    //获取考试须知
    function getExamHelp(callback, errorCallback, apiMode) {
        requestApi({
            api: 'getExamHelp',
            body: {},
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    //获取错题集
    function getExamFault(callback, errorCallback, apiMode) {
        requestApi({
            api: 'getExamFault',
            body: {},
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    //获取题库列表
    function getExamBankList(callback, errorCallback, apiMode) {
        requestApi({
            api: 'getExamBankList',
            body: {},
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    //获取题库
    function getExamBankDetail(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'getExamBankDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    /**
     * 在线阅读
     */
    function readList(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'readList',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    function myReadList(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'myReadList',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    function readInfo(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'readInfo',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    function readAttachment(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'readAttachment',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    function getReadAttachmentPreview(param, callback, errorCallback) {
        requestApi({
            api: 'getReadAttachmentPreview',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getReadAttachmentDownload(param, callback, errorCallback) {
        requestApi({
            api: 'getReadAttachmentDownload',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function readDetail(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'readDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    function readCommentsList(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'readCommentsList',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    function readCommentReplyList(param, callback, errorCallback, apiMode) {
        requestApi({
            api: 'readCommentReplyList',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            apiMode: apiMode
        });
    }

    /**
     * 资料操作
     */
    function likeReadDetail(param, callback, errorCallback) {
        requestApi({
            api: 'likeReadDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addReadComment(param, callback, errorCallback) {
        requestApi({
            api: 'addReadComment',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function likeReadComment(param, callback, errorCallback) {
        requestApi({
            api: 'likeReadComment',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addReadCommentReply(param, callback, errorCallback) {
        requestApi({
            api: 'addReadCommentReply',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function likeReadCommentReply(param, callback, errorCallback) {
        requestApi({
            api: 'likeReadCommentReply',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getKnowledgeQuestionType(callback, errorCallback) {
        requestApi({
            api: 'getKnowledgeQuestionType',
            body: {},
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getKnowledgeList(param, callback, errorCallback) {
        requestApi({
            api: 'getKnowledgeList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }


    function addKnowledgeQuestion(param, callback, errorCallback) {
        requestApi({
            api: 'addKnowledgeQuestion',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMyKnowledgeQuestion(param, callback, errorCallback) {
        requestApi({
            api: 'getMyKnowledgeQuestion',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMyKnowledgeAnswer(param, callback, errorCallback, cache) {
        requestApi({
            api: 'getMyKnowledgeAnswer',
            body: param,
            callback: callback,
            errCallback: errorCallback,
            cache: cache
        });
    }

    function addKnowledgeAnswer(param, callback, errorCallback) {
        requestApi({
            api: 'addKnowledgeAnswer',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getKnowledgeAnswers(param, callback, errorCallback) {
        requestApi({
            api: 'getKnowledgeAnswers',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function setKnowledgeBestAnswer(param, callback, errorCallback) {
        requestApi({
            api: 'setKnowledgeBestAnswer',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function closeKnowledgeQuestion(param, callback, errorCallback) {
        requestApi({
            api: 'closeKnowledgeQuestion',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addKnowledgeAnswerComment(param, callback, errorCallback) {
        requestApi({
            api: 'addKnowledgeAnswerComment',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getKnowledgeShareInfo(param, callback, errorCallback) {
        requestApi({
            api: 'getKnowledgeShareInfo',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addKnowledgeShareCountByAnUUID(param, callback, errorCallback) {
        requestApi({
            api: 'addKnowledgeShareCountByAnUUID',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addKnowledgeShareCountByQueUUID(param, callback, errorCallback) {
        requestApi({
            api: 'addKnowledgeShareCountByQueUUID',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    //anUuid,page,rows
    function getKnowledgeAnswerComment(param, callback, errorCallback) {
        requestApi({
            api: 'getKnowledgeAnswerComment',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarketingPermission(callback, errorCallback) {
        requestApi({
            api: 'getMarketingPermission',
            body: {},
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarketingFixtureList(param, callback, errorCallback) {
        requestApi({
            api: 'getMarketingFixtureList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarketingFixtureDetail(param, callback, errorCallback) {
        requestApi({
            api: 'getMarketingFixtureDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMissionList(param, callback, errorCallback) {
        requestApi({
            api: 'getMissionList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMissionDetail(param, callback, errorCallback) {
        requestApi({
            api: 'getMissionDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function markJobsNewTargetDetailsSave(param, callback, errorCallback){
        requestApi({
            api: 'markJobsNewTargetDetailsSave',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function signMission(param, callback, errorCallback) {
        requestApi({
            api: 'signMission',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMissionTargetList(param, callback, errorCallback) {
        requestApi({
            api: 'getMissionTargetList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMissionTargetDetail(param, callback, errorCallback) {
        requestApi({
            api: 'getMissionTargetDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function replyMissionTarget(param, callback, errorCallback) {
        requestApi({
            api: 'replyMissionTarget',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function sendMissionTargetList(param, callback, errorCallback) {
        requestApi({
            api: 'sendMissionTargetList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarketingChannel(callback, errorCallback) {
        requestApi({
            api: 'getMarketingChannel',
            body: {},
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addCallNumber(param, callback, errorCallback){
        requestApi({
            api: 'addCallNumber',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarketingPayMonthByChannel(param, callback, errorCallback) {
        requestApi({
            api: 'getMarketingPayMonthByChannel',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarketingPayDetail(param, callback, errorCallback) {
        requestApi({
            api: 'getMarketingPayDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    
    function getMarkReportList(param, callback, errorCallback){
        requestApi({
            api: 'getMarkReportList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkReportTaskList(param, callback, errorCallback){
        requestApi({
            api: 'getMarkReportTaskList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkReportContastList(param, callback, errorCallback){
        requestApi({
            api: 'getMarkReportContastList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    
    function getMarkReportContastDetail(param, callback, errorCallback){
        requestApi({
            api: 'getMarkReportContastDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkReportPersonList(param, callback, errorCallback){
        requestApi({
            api: 'getMarkReportPersonList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getmarkRemunerationNewListByChannel(param, callback, errorCallback){
        requestApi({
            api: 'getmarkRemunerationNewListByChannel',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkRemunerationNewListByMonth(param, callback, errorCallback){
        requestApi({
            api: 'getMarkRemunerationNewListByMonth',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkRemunerationNewDetails(param, callback, errorCallback){
        requestApi({
            api: 'getMarkRemunerationNewDetails',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkJobsNewList(param, callback, errorCallback){
        requestApi({
            api: 'getMarkJobsNewList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function sendMarketingTaskMsg(param, callback, errorCallback){
        requestApi({
            api: 'sendMarketingTaskMsg',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getmarkJobsDetailsNew(param, callback, errorCallback){
        requestApi({
            api: 'getmarkJobsDetailsNew',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function markJobsNewTargetEmail(param, callback, errorCallback){
        requestApi({
            api: 'markJobsNewTargetEmail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkJobsNewTargetList(param, callback, errorCallback){
        requestApi({
            api: 'getMarkJobsNewTargetList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkJobsNewTargetDetails(param, callback, errorCallback){
        requestApi({
            api: 'getMarkJobsNewTargetDetails',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function markJobsNewTargetSign(param, callback, errorCallback){
        requestApi({
            api: 'markJobsNewTargetSign',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getMarkGraphicList(param, callback, errorCallback){
        requestApi({
            api: 'getMarkGraphicList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatisticActivity(param, callback, errorCallback){
        requestApi({
            api: 'dataStatisticActivity',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatistictaskOrderQuery(param, callback, errorCallback){
        requestApi({
            api: 'dataStatistictaskOrderQuery',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatistictaskOrderQueryByChannel(param, callback, errorCallback){
        requestApi({
            api: 'dataStatistictaskOrderQueryByChannel',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatisticTaksOrderDetail(param, callback, errorCallback){
        requestApi({
            api: 'dataStatisticTaksOrderDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatisticLearn(param, callback, errorCallback){
        requestApi({
            api: 'dataStatisticLearn',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatisticActCity(param, callback, errorCallback){
        requestApi({
            api: 'dataStatisticActCity',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatisticActChannelByCity(param, callback, errorCallback){
        requestApi({
            api: 'dataStatisticActChannelByCity',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatisticActPart(param, callback, errorCallback){
        requestApi({
            api: 'dataStatisticActPart',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function dataStatisticLearnDetail(param, callback, errorCallback){
        requestApi({
            api: 'dataStatisticLearnDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    function getBannerList(param, callback, errorCallback) {
        requestApi({
            api: 'getBannerList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getBannerDetail(param, callback, errorCallback) {
        requestApi({
            api: 'getBannerDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getNewsList(param, callback, errorCallback) {
        requestApi({
            api: 'getNewsList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getNewsDetail(param, callback, errorCallback) {
        requestApi({
            api: 'getNewsDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getNewsComments(param, callback, errorCallback) {
        requestApi({
            api: 'getNewsComments',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addNewsComment(param, callback, errorCallback) {
        requestApi({
            api: 'addNewsComment',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addSubNewsComment(param, callback, errorCallback) {
        requestApi({
            api: 'addSubNewsComment',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getChatRoomList(param, callback, errorCallback) {
        requestApi({
            api: 'getChatRoomList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getContactCompanyList(param, callback, errorCallback) {
        requestApi({
            api: 'getContactCompanyList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getContactSectionList(param, callback, errorCallback) {
        requestApi({
            api: 'getContactSectionList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getContactUserList(param, callback, errorCallback) {
        requestApi({
            api: 'getContactUserList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getContactUserInfo(param, callback, errorCallback) {
        requestApi({
            api: 'getContactUserInfo',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    /**
     * 投诉案例
     */
    function getExampleList(param, callback, errorCallback) {
        requestApi({
            api: 'getExampleList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getExampleDetail(param, callback, errorCallback) {
        requestApi({
            api: 'getExampleDetail',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function getExampleCommentList(param, callback, errorCallback) {
        requestApi({
            api: 'getExampleCommentList',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function likeExample(param, callback, errorCallback) {
        requestApi({
            api: 'likeExample',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addExampleComment(param, callback, errorCallback) {
        requestApi({
            api: 'addExampleComment',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }

    function addExampleReply(param, callback, errorCallback) {
        requestApi({
            api: 'addExampleReply',
            body: param,
            callback: callback,
            errCallback: errorCallback
        });
    }
    /**
     * 工具
     */
    function validImage() { //验证码
        var t = new Date().getTime();
        return remoteRoot.replace('client/', '') + 'Admin/getLoginCaptcha.do?t=' + t;
    }

    function flushCache() { //清除全部缓存
        $.jStorage.flush();
    }

    function requestApi(param) {
        var apiMode = param.apiMode || globalApiMode;
        var api = param.api;
        var body = param.body;
        var callback = param.callback;
        var errCallback = param.errCallback || function () {
            console.error('error', arguments);
        };
        var cache = param.cache ? true : false; //是否启用缓存数据

        if (apiMode === 'local') {
            // 本地采用JSON
            console.log('本地采用JSON');
            $.getJSON(apiMap[api][apiMode], function (data, textStatus, jqXHR) {
                if (textStatus == 'success') {
                    console.log(data);
                    callback(data);
                } else {
                    var errMsg = {};
                    errMsg.errorcode = 1007;
                    errMsg.errorinf = '离线模式下无法获取相关数据';
                    errCallback(errMsg);
                }
            }).error(function () {
                errCallback();
            });
        } else {
            var url = remoteRoot + apiMap[api][apiMode];
            // API 缓存策略
            var ttl = apiMap[api].ttl || constant.cacheTime;
            console.log('远程调用跨域使用JSONP :' + url + ' 缓存策略: ' + ttl);
            var _body = getHeadAndBody(body);
            // console.log('请求:', _body);
            // 计算查询条件MD5 ID标示
            var _id = CryptoJS.MD5(JSON.stringify(body) + api).toString();
            // console.log('_id:' + _id);

            // 如果使用本地缓存数据库，则判断是否已存在需要的数据
            if (isUserLocalDB && cache) {
                // console.log('_id:使用缓存');

                var isReadData = false; // 是否从本地数据库中读到数据
                var value = $.jStorage.get(_id);
                if (value) {
                    console.log('使用缓存:' + value);
                    // console.log('读取本地数据');
                    // console.log(value);
                    callback(value);
                    isReadData = true;
                }

                if (isReadData) {
                    return;
                }
            }

            console.log('准备发起申请:', param.body);
            processAjaxMap[api] = $.ajax({
                type: 'post',
                url: url,
                data: _body,
                cache: false,
                timeout: constant.outTime
            }).success(function (data, textStatus, jqXHR) { // 请求成功, 但业务异常
                console.log('返回:', data);

                if (textStatus == 'success') {
                    if (data.code) {
                        // 通用异常处理
                        switch (data.code) {
                            case '001': //通讯MD5签名不一致
                                errCallback('签名不一致');
                                Backbone.trigger('TKonError', data);
                                break;
                            case '002': //接口需要传入UUID
                                errCallback('参数错误');
                                Backbone.trigger('TKonError', data);
                                break;
                            case '003': //服务器错误X001
                                errCallback('服务器出错');
                                Backbone.trigger('TKonError', data);
                                break;
                            case '004': //服务器错误X001
                                errCallback('账号被禁用');
                                Backbone.trigger('NoUserId', data);
                                break;
                            default:
                                errCallback(data.desc);
                                break;
                        }

                        if (processAjaxMap[api]) {
                            processAjaxMap[api] = null;
                        }
                        return;
                    }

                    // 如果使用本地缓存数据库，则要存入
                    if (isUserLocalDB) {
                        if (ttl == Infinity) { // 永久缓存
                            $.jStorage.set(_id, data);
                        } else {
                            $.jStorage.set(_id, data, {
                                TTL: ttl
                            });
                        }
                    }

                    callback(data);
                } else {
                    errCallback(data, textStatus, jqXHR);
                }

                if (processAjaxMap[api]) {
                    processAjaxMap[api] = null;
                }
            }).error(function (jqXHR, textStatus, errorThrown) {
                console.log('error:', textStatus);

                // 不管是超时还是无网络状况,
                // 都调用错误的回调方法
                if (textStatus === 'timeout'
                    || textStatus === 'error') {
                    var errMsg = {};
                    errMsg.errorcode = 1001;
                    errMsg.errorinf = '连接超时';
                    errCallback(errMsg.errorinf);
                }
            }); // HTTP请求失败
        }
    }

    //取消执行接口
    function abortApi(api) {
        console.log('abort:' + api);
        if (processAjaxMap[api]) {
            processAjaxMap[api].abort();
            processAjaxMap[api] = null;
        }
    }

    function getHeadAndBody(data) {
        var sendData = {
            "header": getHead(data),
            "body": data
        };

        return {
            b: JSON.stringify(sendData)
        };
    }

    function getHead(data) {
        var platform = 'web';
        if (navigator.notification) {
            platform = device.platform.toLocaleLowerCase();
        }

        var strData = JSON.stringify(data);
        var timeTs = new Date().getTime();
        var tk = CryptoJS.MD5(strData + timeTs + constant.secretKey).toString().substr(8, 16);

        var uuid = '';
        if (window.user) {
            uuid = window.user.uuid;
        }

        return {
            userUUID: uuid,   //获取当前用户id
            clientType: platform,
            ts: timeTs,
            clientAppName: constant.clientAppName,
            tkon: tk
        };
    }

    function getUploadUrl() {
        return remoteRoot.replace('client/', '') + 'C/ClientUploadFileAction/upload.do';
    }

    function getRecordUploadUrl() {
        return remoteRoot.replace('client/', '') + 'C/ClientUploadFileAction/uploadM4a.do';
    }


    return {
        abortApi: abortApi,
        getUploadUrl: getUploadUrl,
        getRecordUploadUrl: getRecordUploadUrl,
        validImage: validImage,

        getExam: getExam,
        getExamPaper: getExamPaper,
        submitExamPaper: submitExamPaper,
        getExamRecord: getExamRecord,
        getExamHelp: getExamHelp,
        getExamFault: getExamFault,
        getExamBankList: getExamBankList,
        getExamBankDetail: getExamBankDetail,

        readList: readList,
        myReadList: myReadList,
        readInfo: readInfo,
        readAttachment: readAttachment,
        getReadAttachmentPreview: getReadAttachmentPreview,
        getReadAttachmentDownload: getReadAttachmentDownload,
        readDetail: readDetail,
        readCommentsList: readCommentsList,
        readCommentReplyList: readCommentReplyList,

        likeReadDetail: likeReadDetail,
        addReadComment: addReadComment,
        likeReadComment: likeReadComment,
        addReadCommentReply: addReadCommentReply,
        likeReadCommentReply: likeReadCommentReply,

        getKnowledgeQuestionType: getKnowledgeQuestionType,
        getKnowledgeList: getKnowledgeList,
        addKnowledgeQuestion: addKnowledgeQuestion,
        getMyKnowledgeQuestion: getMyKnowledgeQuestion,
        getMyKnowledgeAnswer: getMyKnowledgeAnswer,
        addKnowledgeAnswer: addKnowledgeAnswer,
        getKnowledgeAnswers: getKnowledgeAnswers,
        setKnowledgeBestAnswer: setKnowledgeBestAnswer,
        closeKnowledgeQuestion: closeKnowledgeQuestion,
        addKnowledgeAnswerComment: addKnowledgeAnswerComment,
        getKnowledgeAnswerComment: getKnowledgeAnswerComment,
        getKnowledgeShareInfo: getKnowledgeShareInfo,
        addKnowledgeShareCountByAnUUID: addKnowledgeShareCountByAnUUID,
        addKnowledgeShareCountByQueUUID: addKnowledgeShareCountByQueUUID,

        getMarketingPermission: getMarketingPermission,
        getMarketingFixtureList: getMarketingFixtureList,
        getMarketingFixtureDetail: getMarketingFixtureDetail,
        getMissionList: getMissionList,
        getMissionDetail: getMissionDetail,
        markJobsNewTargetDetailsSave: markJobsNewTargetDetailsSave ,
        signMission: signMission,
        getMissionTargetList: getMissionTargetList,
        getMissionTargetDetail: getMissionTargetDetail,
        replyMissionTarget: replyMissionTarget,
        sendMissionTargetList: sendMissionTargetList,
        getMarketingChannel: getMarketingChannel,
        addCallNumber:addCallNumber ,
        getMarketingPayMonthByChannel: getMarketingPayMonthByChannel,
        getMarketingPayDetail: getMarketingPayDetail,
        getMarkReportList:getMarkReportList ,
        getMarkReportTaskList:getMarkReportTaskList,
        getMarkReportContastList:getMarkReportContastList,
        getMarkReportContastDetail:getMarkReportContastDetail ,
        getMarkReportPersonList:getMarkReportPersonList ,
        getmarkRemunerationNewListByChannel: getmarkRemunerationNewListByChannel ,
        getMarkRemunerationNewListByMonth: getMarkRemunerationNewListByMonth ,
        getMarkRemunerationNewDetails:getMarkRemunerationNewDetails ,
        getMarkJobsNewList: getMarkJobsNewList ,
        sendMarketingTaskMsg: sendMarketingTaskMsg ,
        getmarkJobsDetailsNew: getmarkJobsDetailsNew ,
        markJobsNewTargetEmail:markJobsNewTargetEmail ,
        getMarkJobsNewTargetList: getMarkJobsNewTargetList ,
        getMarkJobsNewTargetDetails: getMarkJobsNewTargetDetails ,
        markJobsNewTargetSign: markJobsNewTargetSign ,
        getMarkGraphicList: getMarkGraphicList ,
        dataStatisticActivity: dataStatisticActivity ,
        dataStatistictaskOrderQuery: dataStatistictaskOrderQuery ,
        dataStatistictaskOrderQueryByChannel: dataStatistictaskOrderQueryByChannel ,
        dataStatisticTaksOrderDetail:dataStatisticTaksOrderDetail ,
        dataStatisticLearn: dataStatisticLearn ,
        dataStatisticLearnDetail: dataStatisticLearnDetail ,
        dataStatisticActCity:dataStatisticActCity ,
        dataStatisticActChannelByCity: dataStatisticActChannelByCity ,
        dataStatisticActPart:dataStatisticActPart ,
        getBannerList: getBannerList,
        getBannerDetail: getBannerDetail,
        getNewsList: getNewsList,
        getNewsDetail: getNewsDetail,
        getNewsComments: getNewsComments,
        addNewsComment: addNewsComment,
        addSubNewsComment: addSubNewsComment,

        getChatRoomList: getChatRoomList,

        getContactCompanyList: getContactCompanyList,
        getContactSectionList: getContactSectionList,
        getContactUserList: getContactUserList,
        getContactUserInfo: getContactUserInfo,

        getExampleList: getExampleList,
        getExampleDetail: getExampleDetail,
        getExampleCommentList: getExampleCommentList,
        likeExample: likeExample,
        addExampleComment: addExampleComment,
        addExampleReply: addExampleReply,

        getLoginSMS: getLoginSMS,
        login: login,
        getClientUserInfo: getClientUserInfo,
        getClientUserList: getClientUserList,

        modifyEmail: modifyEmail,
        modifyAvatar: modifyAvatar,
        getUserInfo: getUserInfo,
        getWaitStatistics: getWaitStatistics ,
        addAdvise: addAdvise,
        modifyInfo: modifyInfo,

        loginWebSocket: loginWebSocket
    };
});

/**
 * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */
/*jslint regexp: true */
/*global require, XMLHttpRequest, ActiveXObject,
  define, window, process, Packages,
  java, location, Components, FileUtils */

define('text',['module'], function (module) {
    'use strict';

    var text, fs, Cc, Ci, xpcIsWindows,
        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],
        xmlRegExp = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
        bodyRegExp = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
        hasLocation = typeof location !== 'undefined' && location.href,
        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\:/, ''),
        defaultHostName = hasLocation && location.hostname,
        defaultPort = hasLocation && (location.port || undefined),
        buildMap = {},
        masterConfig = (module.config && module.config()) || {};

    text = {
        version: '2.0.10',

        strip: function (content) {
            //Strips <?xml ...?> declarations so that external SVG and XML
            //documents can be added to a document without worry. Also, if the string
            //is an HTML document, only the part inside the body tag is returned.
            if (content) {
                content = content.replace(xmlRegExp, "");
                var matches = content.match(bodyRegExp);
                if (matches) {
                    content = matches[1];
                }
            } else {
                content = "";
            }
            return content;
        },

        jsEscape: function (content) {
            return content.replace(/(['\\])/g, '\\$1')
                .replace(/[\f]/g, "\\f")
                .replace(/[\b]/g, "\\b")
                .replace(/[\n]/g, "\\n")
                .replace(/[\t]/g, "\\t")
                .replace(/[\r]/g, "\\r")
                .replace(/[\u2028]/g, "\\u2028")
                .replace(/[\u2029]/g, "\\u2029");
        },

        createXhr: masterConfig.createXhr || function () {
            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.
            var xhr, i, progId;
            if (typeof XMLHttpRequest !== "undefined") {
                return new XMLHttpRequest();
            } else if (typeof ActiveXObject !== "undefined") {
                for (i = 0; i < 3; i += 1) {
                    progId = progIds[i];
                    try {
                        xhr = new ActiveXObject(progId);
                    } catch (e) {}

                    if (xhr) {
                        progIds = [progId];  // so faster next time
                        break;
                    }
                }
            }

            return xhr;
        },

        /**
         * Parses a resource name into its component parts. Resource names
         * look like: module/name.ext!strip, where the !strip part is
         * optional.
         * @param {String} name the resource name
         * @returns {Object} with properties "moduleName", "ext" and "strip"
         * where strip is a boolean.
         */
        parseName: function (name) {
            var modName, ext, temp,
                strip = false,
                index = name.indexOf("."),
                isRelative = name.indexOf('./') === 0 ||
                             name.indexOf('../') === 0;

            if (index !== -1 && (!isRelative || index > 1)) {
                modName = name.substring(0, index);
                ext = name.substring(index + 1, name.length);
            } else {
                modName = name;
            }

            temp = ext || modName;
            index = temp.indexOf("!");
            if (index !== -1) {
                //Pull off the strip arg.
                strip = temp.substring(index + 1) === "strip";
                temp = temp.substring(0, index);
                if (ext) {
                    ext = temp;
                } else {
                    modName = temp;
                }
            }

            return {
                moduleName: modName,
                ext: ext,
                strip: strip
            };
        },

        xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,

        /**
         * Is an URL on another domain. Only works for browser use, returns
         * false in non-browser environments. Only used to know if an
         * optimized .js version of a text resource should be loaded
         * instead.
         * @param {String} url
         * @returns Boolean
         */
        useXhr: function (url, protocol, hostname, port) {
            var uProtocol, uHostName, uPort,
                match = text.xdRegExp.exec(url);
            if (!match) {
                return true;
            }
            uProtocol = match[2];
            uHostName = match[3];

            uHostName = uHostName.split(':');
            uPort = uHostName[1];
            uHostName = uHostName[0];

            return (!uProtocol || uProtocol === protocol) &&
                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&
                   ((!uPort && !uHostName) || uPort === port);
        },

        finishLoad: function (name, strip, content, onLoad) {
            content = strip ? text.strip(content) : content;
            if (masterConfig.isBuild) {
                buildMap[name] = content;
            }
            onLoad(content);
        },

        load: function (name, req, onLoad, config) {
            //Name has format: some.module.filext!strip
            //The strip part is optional.
            //if strip is present, then that means only get the string contents
            //inside a body tag in an HTML string. For XML/SVG content it means
            //removing the <?xml ...?> declarations so the content can be inserted
            //into the current doc without problems.

            // Do not bother with the work if a build and text will
            // not be inlined.
            if (config.isBuild && !config.inlineText) {
                onLoad();
                return;
            }

            masterConfig.isBuild = config.isBuild;

            var parsed = text.parseName(name),
                nonStripName = parsed.moduleName +
                    (parsed.ext ? '.' + parsed.ext : ''),
                url = req.toUrl(nonStripName),
                useXhr = (masterConfig.useXhr) ||
                         text.useXhr;

            // Do not load if it is an empty: url
            if (url.indexOf('empty:') === 0) {
                onLoad();
                return;
            }

            //Load the text. Use XHR if possible and in a browser.
            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {
                text.get(url, function (content) {
                    text.finishLoad(name, parsed.strip, content, onLoad);
                }, function (err) {
                    if (onLoad.error) {
                        onLoad.error(err);
                    }
                });
            } else {
                //Need to fetch the resource across domains. Assume
                //the resource has been optimized into a JS module. Fetch
                //by the module name + extension, but do not include the
                //!strip part to avoid file system issues.
                req([nonStripName], function (content) {
                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,
                                    parsed.strip, content, onLoad);
                });
            }
        },

        write: function (pluginName, moduleName, write, config) {
            if (buildMap.hasOwnProperty(moduleName)) {
                var content = text.jsEscape(buildMap[moduleName]);
                write.asModule(pluginName + "!" + moduleName,
                               "define(function () { return '" +
                                   content +
                               "';});\n");
            }
        },

        writeFile: function (pluginName, moduleName, req, write, config) {
            var parsed = text.parseName(moduleName),
                extPart = parsed.ext ? '.' + parsed.ext : '',
                nonStripName = parsed.moduleName + extPart,
                //Use a '.js' file name so that it indicates it is a
                //script that can be loaded across domains.
                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';

            //Leverage own load() method to load plugin value, but only
            //write out values that do not have the strip argument,
            //to avoid any potential issues with ! in file names.
            text.load(nonStripName, req, function (value) {
                //Use own write() method to construct full module value.
                //But need to create shell that translates writeFile's
                //write() to the right interface.
                var textWrite = function (contents) {
                    return write(fileName, contents);
                };
                textWrite.asModule = function (moduleName, contents) {
                    return write.asModule(moduleName, fileName, contents);
                };

                text.write(pluginName, nonStripName, textWrite, config);
            }, config);
        }
    };

    if (masterConfig.env === 'node' || (!masterConfig.env &&
            typeof process !== "undefined" &&
            process.versions &&
            !!process.versions.node &&
            !process.versions['node-webkit'])) {
        //Using special require.nodeRequire, something added by r.js.
        fs = require.nodeRequire('fs');

        text.get = function (url, callback, errback) {
            try {
                var file = fs.readFileSync(url, 'utf8');
                //Remove BOM (Byte Mark Order) from utf8 files if it is there.
                if (file.indexOf('\uFEFF') === 0) {
                    file = file.substring(1);
                }
                callback(file);
            } catch (e) {
                errback(e);
            }
        };
    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&
            text.createXhr())) {
        text.get = function (url, callback, errback, headers) {
            var xhr = text.createXhr(), header;
            xhr.open('GET', url, true);

            //Allow plugins direct access to xhr headers
            if (headers) {
                for (header in headers) {
                    if (headers.hasOwnProperty(header)) {
                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);
                    }
                }
            }

            //Allow overrides specified in config
            if (masterConfig.onXhr) {
                masterConfig.onXhr(xhr, url);
            }

            xhr.onreadystatechange = function (evt) {
                var status, err;
                //Do not explicitly handle errors, those should be
                //visible via console output in the browser.
                if (xhr.readyState === 4) {
                    status = xhr.status;
                    if (status > 399 && status < 600) {
                        //An http 4xx or 5xx error. Signal an error.
                        err = new Error(url + ' HTTP status: ' + status);
                        err.xhr = xhr;
                        errback(err);
                    } else {
                        callback(xhr.responseText);
                    }

                    if (masterConfig.onXhrComplete) {
                        masterConfig.onXhrComplete(xhr, url);
                    }
                }
            };
            xhr.send(null);
        };
    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&
            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {
        //Why Java, why is this so awkward?
        text.get = function (url, callback) {
            var stringBuffer, line,
                encoding = "utf-8",
                file = new java.io.File(url),
                lineSeparator = java.lang.System.getProperty("line.separator"),
                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),
                content = '';
            try {
                stringBuffer = new java.lang.StringBuffer();
                line = input.readLine();

                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324
                // http://www.unicode.org/faq/utf_bom.html

                // Note that when we use utf-8, the BOM should appear as "EF BB BF", but it doesn't due to this bug in the JDK:
                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058
                if (line && line.length() && line.charAt(0) === 0xfeff) {
                    // Eat the BOM, since we've already found the encoding on this file,
                    // and we plan to concatenating this buffer with others; the BOM should
                    // only appear at the top of a file.
                    line = line.substring(1);
                }

                if (line !== null) {
                    stringBuffer.append(line);
                }

                while ((line = input.readLine()) !== null) {
                    stringBuffer.append(lineSeparator);
                    stringBuffer.append(line);
                }
                //Make sure we return a JavaScript string and not a Java string.
                content = String(stringBuffer.toString()); //String
            } finally {
                input.close();
            }
            callback(content);
        };
    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&
            typeof Components !== 'undefined' && Components.classes &&
            Components.interfaces)) {
        //Avert your gaze!
        Cc = Components.classes,
        Ci = Components.interfaces;
        Components.utils['import']('resource://gre/modules/FileUtils.jsm');
        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);

        text.get = function (url, callback) {
            var inStream, convertStream, fileObj,
                readData = {};

            if (xpcIsWindows) {
                url = url.replace(/\//g, '\\');
            }

            fileObj = new FileUtils.File(url);

            //XPCOM, you so crazy
            try {
                inStream = Cc['@mozilla.org/network/file-input-stream;1']
                           .createInstance(Ci.nsIFileInputStream);
                inStream.init(fileObj, 1, 0, false);

                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']
                                .createInstance(Ci.nsIConverterInputStream);
                convertStream.init(inStream, "utf-8", inStream.available(),
                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);

                convertStream.readString(inStream.available(), readData);
                convertStream.close();
                inStream.close();
                callback(readData.value);
            } catch (e) {
                throw new Error((fileObj && fileObj.path || '') + ': ' + e);
            }
        };
    }
    return text;
});


define('text!view/tpl/login.html',[],function () { return '<div class="common-wrapper login-wrapper">\r\n    <div class="login-title">登录</div>\r\n\r\n    <div class="login-img">\r\n        <img src="app_img/login-img.png" alt="">\r\n    </div>\r\n\r\n    <div class="login-form-wrapper">\r\n        <div class="login-form clearfix">\r\n            <div class="pull-left">\r\n                <i class="iconfont icon-nanren"></i>\r\n            </div>\r\n            <div class="overhidden">\r\n                <input type="tel" class="form-control login-mobile" placeholder="手机号" maxlength="11">\r\n            </div>\r\n        </div>\r\n        <div class="login-form clearfix">\r\n            <div class="pull-left">\r\n                <i class="iconfont icon-suo"></i>\r\n            </div>\r\n            <div class="overhidden">\r\n                <input type="tel" class="form-control login-valid" placeholder="验证码" maxlength="6">\r\n                <div class="btn-getvalid get-validcode">获取验证码</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="login-control">\r\n        <div class="btn btn-login btn-block">\r\n            登 录\r\n        </div>\r\n    </div>\r\n\r\n</div>';});

/**
*   登录
**/

define('view/login',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/tpl/login.html'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/tpl/login.html');

    var View = Backbone.View.extend({
        el: 'body',
        events: {
            'tap .get-validcode': 'getValidCode',
            'tap .btn-login': 'login'
        },
        getValidCode: function () {
            var mobile = $.trim(this.$('.login-mobile').val());
            if (!mobile) {
                $.jtoast('请输入手机号码');
                return;
            }

            $.showLoading("正在发送验证码");
            businessDelegate.getLoginSMS({
                mobile: mobile
            }, _.bind(function (data) {
                $.hideLoading();
                console.log(data.obj);
                $.alert("验证码已发送到您的手机", "发送成功");

                this.unValid();
            }, this), _.bind(function (err) {
                $.hideLoading();
                $.jtoast(err);
            }, this));

        },
        unValid: function () {
            var number = 59;
            this.$('.get-validcode').addClass('disabled');

            var interval = setInterval(_.bind(function () {
                this.$('.get-validcode').text(number + 's');

                if (number == 0) {
                    this.$('.get-validcode').text('获取验证码').removeClass('disabled');
                    clearInterval(interval);
                }

                number--;
            }, this), 1000);
        },
        login: function () {
            var mobile = $.trim(this.$('.login-mobile').val());
            var valid = $.trim(this.$('.login-valid').val());

            if (!mobile) {
                $.jtoast('请输入手机号码');
                return;
            }

            if (!valid) {
                $.jtoast('请输入验证码');
                return;
            }

            $.showLoading("正在登录...");
            businessDelegate.login({
                mobile: mobile,
                verify: valid
            }, _.bind(function (data) {
                $.hideLoading();
                $.toast("登录成功");

                window.user = data.obj;

                //跳转到首页
                phonegaputil.saveConfig('user', data.obj, function () {
                    Backbone.history.navigate('index', { trigger: true });
                }, function () {
                    Backbone.history.navigate('index', { trigger: true });
                });

                this.autoLoginPush();
            }, this), _.bind(function (err) {
                $.hideLoading();
                $.jtoast(err);
            }, this));
        },
        autoLoginPush: function () {
            if (window.cordova) {
                var phoneModel = device.model;
                if (phoneModel.startWith('MI') || phoneModel.indexOf('MI') > -1 || phoneModel.indexOf('xiaomi') > -1 || phoneModel.indexOf('XIAOMI') > -1) {
                    //小米设备
                    XiaoMIPushPlugin.registerPushAndAccount('A' + window.user.mobile, function () { }, function () { });
                } else {
                    //其他设备
                    xgpush.registerPush('A' + window.user.mobile, $.noop, $.noop);
                }
            } else {
                console.log('非cordova环境不执行推送模块注册');
            }
        },
        autoLogin: function () {
            phonegaputil.getConfig('user', _.bind(function (obj) {
                // alert(JSON.stringify(obj));
                //测试用户数据
                // obj = {
                //     company: "开发组测试",
                //     email: "277697086@qq.com",
                //     headImgUrl: "http://115.159.207.172:8979/ProMark/luanchuanimg/clientImg/avatar/2016-09-23/da43a4c7-2905-4ab1-9fb9-5a04155f085a.jpg",
                //     mobile: "17773166219",
                //     name: "田总",
                //     uuid: "55398a95-bcdb-42b5-ba2b-7377ccd72015",
                //     wx: "aaa",
                //     qq: "bbb",
                //     weibo: "ccc"
                // };

                if (obj) {
                    $.showLoading("正在自动登录...");
                    window.user = obj;

                    setTimeout(_.bind(function () {
                        $.hideLoading();
                        this.autoLoginPush();
                        Backbone.history.navigate('index', { trigger: true });
                    }, this), 100);
                }
            }, this), $.noop);
        },
        backbutton: function () {
            phonegaputil.exitApp();
        },
        initialize: function () {

            this.$el.empty().append(template);

            phonegaputil.getAppVersion(_.bind(function (version) {
                window.version = version;
            }, this));

            phonegaputil.getAppVersionCode(_.bind(function (code) {
                // alert(code);
                window.versioncode = code;
            }, this));
        },
        render: function () {
            this.autoLogin();
            return this;
        }
    });

    return View;
});


define('text!view/tpl/index.html',[],function () { return '<div class="common-content with-menu bg-gray" style="top: 0px">\r\n    <div class="swiper-container index-banner">\r\n        <div class="swiper-wrapper">\r\n            <div class="app-index-header-container">\r\n                <div class="person-info"></div>\r\n                <div class="un-read-news">\r\n                    <div class="new-item">\r\n                        <div class="height10 whiteOpacity3"></div>\r\n                        <div class="_item borderright whiteOpacity3 workLink" data-link="work/index">\r\n                            <span>5项</span>\r\n                            <br/>\r\n                            <span>待营销工单</span>\r\n                        </div>\r\n                        <div class="height10 whiteOpacity3"></div>\r\n                    </div>\r\n                    <div class="new-item">\r\n                        <div class="height10 whiteOpacity3"></div>\r\n                        <div class="_item borderright whiteOpacity3 workLink" data-link="marketing-task/work/index">\r\n                            <span>125项</span>\r\n                            <br/>\r\n                            <span>待学习任务</span>\r\n                        </div>\r\n                        <div class="height10 whiteOpacity3"></div>\r\n                    </div>\r\n                    <div class="new-item">\r\n                        <div class="height10 whiteOpacity3"></div>\r\n                        <div class="_item whiteOpacity3 workLink" data-link="online-read-index/work/index">\r\n                            <span>12篇</span>\r\n                            <br/>\r\n                            <span>待办其他事项</span>\r\n                        </div>\r\n                        <div class="height10 whiteOpacity3"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- 如果需要分页器 -->\r\n        <!--<div class="swiper-pagination"></div>-->\r\n    </div>\r\n\r\n    <div class="index-menu">\r\n        <div class="applacationItem  sail-task" data-link="marketing-task/work/index">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>营销任务</span> -->\r\n        </div>\r\n        <div class="applacationItem sail-picfont" data-link="graphic-marketing/work/index">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>图文营销</span> -->\r\n        </div>\r\n        <div class="applacationItem remunetion" data-link="query-remuneration/work/index">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>酬金查询</span> -->\r\n        </div>\r\n        <div class="applacationItem notice" data-link="marketing-communications/work/index">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>营销通报</span> -->\r\n        </div>\r\n        <div class="applacationItem myCustom" data-link="my-customer/work/index">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>我的客户</span> -->\r\n        </div>\r\n        <div class="applacationItem learn-oline" data-link="online-read-index/work/index">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>在线学习</span> -->\r\n        </div>\r\n        <div class="applacationItem test-online"  data-link="exam-index/work/index">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>在线评测</span> -->\r\n        </div>\r\n        <div class="applacationItem sail-speak"  data-title="营销话术">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>营销话术</span> -->\r\n        </div>\r\n        <div class="applacationItem answer-query" data-title="互动问答">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>互动问答</span> -->\r\n        </div>\r\n        <div class="applacationItem service-query" data-title="服务巡检">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>服务巡检</span> -->\r\n        </div>\r\n        <!-- <div class="applacationItem service-offline">\r\n            <div class="item-icon"></div>\r\n            <span>服务上门</span>\r\n        </div> -->\r\n        <div class="applacationItem more" data-link="work/index">\r\n            <!-- <div class="item-icon"></div>\r\n            <span>更多</span> -->\r\n        </div>\r\n    </div>\r\n    <div class="sgin-in-and-point">\r\n        <div class="content">\r\n            <span class="sgin-in showSeeNext" data-title="签到"></span>\r\n            <span class="middleblock"></span>\r\n            <span class="point showSeeNext" data-title="积分"></span>\r\n        </div>\r\n    </div>\r\n    <div class="dynamic-info">\r\n        <div class="info-item showSeeNext toLink" data-title="互动问答" data-link="">\r\n            <div class="base-info">\r\n                <span class="module-and-time">\r\n                    <span class="module-name">互动问答</span>\r\n                    <span class="time">30分钟前</span>\r\n                </span>\r\n            </div>\r\n            <div class="answer-info">\r\n                <span class="answer-info-left">马配芬回答了您提出的问题</span>\r\n                <span class="lookderect">立即查看</span>\r\n            </div>\r\n        </div>\r\n        <div class="info-item showSeeNext" data-title="服务上门">\r\n            <div class="base-info">\r\n                <span class="module-and-time">\r\n                    <span class="module-name">服务上门</span>\r\n                    <span class="time">24分钟前</span>\r\n                </span>\r\n            </div>\r\n            <div class="answer-info">\r\n                <span class="answer-info-left">小米对您的服务做出了评价</span>\r\n                <span class="lookderect">立即查看</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script id="indexPersonUserInfo" type="text/template">\r\n            <div class="head-img">\r\n                <img width="62" height="62"  src="<%=window.user.afterParseImg%>" alt="">\r\n            </div>\r\n            <div class="font-info">\r\n                <div class="person-name"><%=data.name%></div>\r\n                <div class="person-other-info">\r\n                    <span>部门 ： <%=data.company%></span>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <!-- <span>工号 ： <%=data.code||\'032\'%></span> -->\r\n                </div>\r\n            </div>\r\n            <!-- <div class="icon-unread-notice">\r\n                <img src="app_img/index/icon-notice.png" alt="">\r\n            </div> -->\r\n            <!-- <span class="unread-num"><%=data.unreadNewsNum||\'0\'%></span> -->\r\n</script>\r\n<script id="indexUnreadNews" type="text/template">\r\n    <div class="new-item">\r\n        <div class="height10 whiteOpacity3"></div>\r\n        <div class="_item borderright whiteOpacity3 workLink" data-link="marketing-task/work/index">\r\n            <span><%=data.markJobsDetailNewSize%>项</span>\r\n            <br/>\r\n            <span>待营销工单</span>\r\n        </div>\r\n        <div class="height10 whiteOpacity3"></div>\r\n    </div>\r\n    <div class="new-item">\r\n        <div class="height10 whiteOpacity3"></div>\r\n        <div class="_item borderright whiteOpacity3 workLink" data-link="online-read-index/work/index">\r\n            <span><%=data.readCoursewareSize%>项</span>\r\n            <br/>\r\n            <span>待学习任务</span>\r\n        </div>\r\n        <div class="height10 whiteOpacity3"></div>\r\n    </div>\r\n    <div class="new-item">\r\n        <div class="height10 whiteOpacity3"></div>\r\n        <div class="_item whiteOpacity3 workLink" data-link="work/index">\r\n            <span>5项</span>\r\n            <br/>\r\n            <span>待办其他事项</span>\r\n        </div>\r\n        <div class="height10 whiteOpacity3"></div>\r\n    </div>\r\n</script>';});


define('text!view/tpl/_app-header.html',[],function () { return '\r\n    <% if(main){ %>\r\n        <div class="left-button hide"></div>\r\n        <% }else{ %>\r\n            <div class="left-button btn-back">\r\n                <i class="iconfont icon-guanbi"></i>\r\n            </div>\r\n        <% } %>\r\n        <div class="title">\r\n            <%= title %>\r\n        </div>\r\n        <div class="right-button hide"></div>\r\n';});

define('view/app-header',['require','exports','module','jquery','underscore','backbone','text!view/tpl/_app-header.html'],function(require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/tpl/_app-header.html');
 
	var View = Backbone.View.extend({
	    className: 'common-header',
		events: {
            'tap .btn-back': 'backbutton'
		},
		backbutton: function() {
		    this.host.backbutton();
		},
		initialize: function(options) {
		    this.host = options.host;
			this.$el.html(_.template(template)(options));
			this.$hdTitle = this.$('.title');
		},
		setTitle: function(html) {
			this.$hdTitle.html(html);
		},
        setLeftBtn: function(html){
			this.$('.left-button').removeClass('hide').html(html);
        },
		setRightBtn: function(html){
            this.$('.right-button').removeClass('hide').html(html);
		},
		render: function() {
			return this;
		}
	});

	return View;
});


define('text!view/tpl/_app-menu.html',[],function () { return '<div class="weui_tabbar">\r\n    <% \r\n        _.each(data, function(v,i){ \r\n            var classStr = \'\';\r\n            if(index == i){\r\n                classStr = \'weui_bar_item_on\';\r\n            }\r\n    %>\r\n        <a href="javascript:void(0)" data-href="<%=v.url%>" class="weui_tabbar_item <%=classStr%>">\r\n            <div class="weui_tabbar_icon">\r\n                <%=v.icon%>\r\n            </div>\r\n            <p class="weui_tabbar_label"><%=v.title%></p>\r\n        </a>\r\n    <% }) %>\r\n</div>';});

define('view/app-menu',['require','exports','module','jquery','underscore','backbone','touch','text!view/tpl/_app-menu.html'],function(require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/tpl/_app-menu.html');

    var View = Backbone.View.extend({
        className: 'common-menu',
        events: {
            'tap a.weui_tabbar_item': 'changePage'
        },
        changePage: function(e) {
            var $e = $(e.currentTarget);
            var href = $e.data('href');
            if (!href) {
                return;
            }
            Backbone.history.navigate(href, { trigger: true });
        },
        initialize: function(options) {
            var menuData = [{
                    icon: '<i class="iconfont icon-liaotian"></i>',
                    title: '沟通',
                    url: 'chatroom-list'
                }, {
                    icon: '<i class="iconfont icon-shouye1"></i>',
                    title: '首页',
                    url: 'index'
                },
                // {
                //     icon: '<i class="iconfont icon-jiugongge"></i>',
                //     title: '工作',
                //     url: 'work'
                // },
                // {
                //     icon: '<i class="iconfont icon-lianxiren"></i>',
                //     title: '联系人',
                //     url: 'contact-index'
                // },
                {
                    icon: '<i class="iconfont icon-wode"></i>',
                    title: '我的',
                    url: 'center-index'
                }
            ];
            // if("#chatroom-list" == window.location.hash){
            //     options = 0 ;
            // }
            var data = _.extend(options, { data: menuData });
            console.log(data);
            var tpl = _.template(template)(data);
            this.$el.html(tpl);
        },
        render: function() {
            return this;
        }
    });

    return View;
});

define('text!view/tpl/banner-detail.html',[],function () { return '<div class="common-content bg-gray">\r\n    <div class="pd10 bg-white news-detail-content-wrapper">\r\n        <div class="news-detail-header">\r\n            <h3>-----</h3>\r\n            <p>更新时间：0000-00-00</p>\r\n        </div>\r\n\r\n        <div class="news-detail-artical">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="news-detail-content-tpl" type="text/template">\r\n    <div class="news-detail-header">\r\n        <h3><%=data.title%></h3>\r\n        <p>更新时间：<%=data.createTime%></p>\r\n    </div>\r\n\r\n    <div class="news-detail-artical">\r\n        <%=$.formatText(data.bannerContent)%>\r\n    </div>\r\n</script>\r\n\r\n';});

define('view/slide-page',['require','exports','module','jquery','underscore','backbone'],function(require,exports,module){
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	var View = Backbone.View.extend({
		className: 'slide-page',
		backbutton: function(){
			this.back();
		},
		back: function(){
			if(!this.canBack){
				return;
			}

			if(this.destroy){
				this.destroy();
			}
			
			$.maskScreen();
			// this.$el.removeClass('in').addClass('out');

		    //删除滑动层
		    setTimeout(_.bind(function(){
		    	this.remove();
		    },this),500);

			$.removeScreen(500);
		},
		show: function() {
			this.canBack = 1;//是否允许回退

			$.maskScreen();
			// 确保slide-page被添加到页面最上层
			$(document.body).append(this.el);

			this.render();
			this.afterRender();
			
			// setTimeout(_.bind(function(){
				// this.$el.removeClass('out').addClass('in');
			// },this),1);

		    $.removeScreen(500);
			return this;
		},
		afterRender: function(){
			console.log('afterRender');
		},
		destroy: function(){
			console.log('destroy');
		}
	});

	return View;
});

/**
*   新闻详情
**/

define('view/banner-detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/tpl/banner-detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/tpl/banner-detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
			
		},
		getDetail: function () {
			$.showLoading();
			businessDelegate.getBannerDetail({
				uuid: this.uuid
			}, _.bind(function (data) {
				$.hideLoading();

				//文章内容
				var tpl = _.template(this.contentTemplate)({ data: data.obj });
				this.$content.html(tpl);

			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.$content.html(this.errorHTML);
			}, this));
		},
		initialize: function (options) {
			this.uuid = options.uuid;

            this.header = new AppHeader({
                host: this,
                main: false,
				title: '详情'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.contentTemplate = this.$('#news-detail-content-tpl').html();

			this.$content = this.$('.news-detail-content-wrapper');
			this.$wrapper = this.$('.common-content');

			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.getDetail();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/tpl/expecting.html',[],function () { return '<div class="common-content" id="expectingView">\r\n    <div class="expecting-content">\r\n        <div class="img">\r\n            <img src="app_img/logo.png">\r\n        </div>\r\n        <p class="text">敬请期待~</p>\r\n    </div>\r\n</div>';});

/**
*   基础页面定义
**/

define('view/expecting',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','text!view/tpl/expecting.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/tpl/expecting.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
            
		},
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: options.title
            });

            this.$el.empty().append(this.header.$el).append(template);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
*   首页
**/

define('view/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/tpl/index.html','view/app-header','view/app-menu','view/banner-detail','view/expecting'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/tpl/index.html');
	var AppHeader = require('view/app-header');
	var AppMenu = require('view/app-menu');
	var BannerDetail = require('view/banner-detail');
    var ExpectingView = require('view/expecting');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .new-view': 'viewNews',
			'tap .work-view': 'viewWork' ,
			'tap .applacationItem' : 'viewAppliCation' ,
			'tap .showSeeNext': "showSeeNext", 
			"tap .icon-unread-notice": "toChatRoom" ,
			"tap .myThings": "mythings" ,
			"tap .workLink": "workLink" ,
			"tap .showSeeNext.toLink": "linkToOther"
		},
		linkToOther: function(e){
			var link = $(e.currentTarget).data('link');
			window._pageHistory = "index" ;
            Backbone.history.navigate(link, { trigger: true });
		},
		decodeBase64: function (input) {
			var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
			var output = "";
			var chr1, chr2, chr3;
			var enc1, enc2, enc3, enc4;
			var i = 0;
			input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
			while (i < input.length) {
				enc1 = _keyStr.indexOf(input.charAt(i++));
				enc2 = _keyStr.indexOf(input.charAt(i++));
				enc3 = _keyStr.indexOf(input.charAt(i++));
				enc4 = _keyStr.indexOf(input.charAt(i++));
				chr1 = (enc1 << 2) | (enc2 >> 4);
				chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
				chr3 = ((enc3 & 3) << 6) | enc4;
				output = output + String.fromCharCode(chr1);
				if (enc3 != 64) {
					output = output + String.fromCharCode(chr2);
				}
				if (enc4 != 64) {
					output = output + String.fromCharCode(chr3);
				}
			}
			output = this._utf8_decode(output);
			return output;
		},
		_utf8_decode: function (utftext) {
			var string = "";
			var i = 0;
			var c = c1 = c2 = 0;
			while (i < utftext.length) {
				c = utftext.charCodeAt(i);
				if (c < 128) {
					string += String.fromCharCode(c);
					i++;
				} else if ((c > 191) && (c < 224)) {
					c2 = utftext.charCodeAt(i + 1);
					string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
					i += 2;
				} else {
					c2 = utftext.charCodeAt(i + 1);
					c3 = utftext.charCodeAt(i + 2);
					string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
					i += 3;
				}
			}
			return string;
		},
		workLink: function(e){
			var link = $(e.currentTarget).data('link');
			window._pageHistory = "index" ;
            Backbone.history.navigate(link, { trigger: true });
		},
		mythings: function(){
			$.jtoast("敬请期待");
		},
		toChatRoom: function(e){
			var link = "chatroom-list" ;
			Backbone.history.navigate(link, { trigger: true });
		},
		showSeeNext: function(e){
			 // $.jtoast('敬请期待');
			 var title = $(e.currentTarget).data('title');
			 var view = new ExpectingView({
				 title: title
			 });
			 view.show();

			 return;
		},
		viewAppliCation: function(e){
			var link = $(e.currentTarget).data("link");
			if (!link) {
                // $.jtoast('敬请期待');
                var title = $(e.currentTarget).data('title');
                var view = new ExpectingView({
                    title: title
                });
                view.show();
                return;
			}
			window._pageHistory = "index" ;
            Backbone.history.navigate(link, { trigger: true });
		},
		viewWork: function(){
			Backbone.history.navigate('online-marketing-index/index', { trigger: true });
		},
		viewNews: function (e) {
			var type = $(e.currentTarget).data('type');
			Backbone.history.navigate('news-index/' + type, { trigger: true });
		},
		getIndex: function () {
			this.userTemplate = this.$('#indexPersonUserInfo').html();
			this.indexUnreadNewsTemplate = this.$('#indexUnreadNews').html();
			businessDelegate.getUserInfo(_.bind(function (data) {
				var startIndex = data.obj.headImgUrl.indexOf("/ImageAction") + 13;
				var endIndex = data.obj.headImgUrl.indexOf("/" ,startIndex) ;
				var base64Url = data.obj.headImgUrl.substring(startIndex ,endIndex) ;
				var afterParseImg = this.decodeBase64(base64Url) ;
				window.user.afterParseImg = afterParseImg ;
				var tpl = _.template(this.userTemplate)({data: data.obj});
				this.$(".index-banner .swiper-wrapper .person-info").empty();
				this.$(".index-banner .swiper-wrapper .person-info").html(tpl);
				// callback();
			}, this), _.bind(function (err) {
				// callback();
			}, this));
			businessDelegate.getWaitStatistics(_.bind(function (data) {
				var tpl = _.template(this.indexUnreadNewsTemplate)({data: data.obj});
				this.$(".index-banner .swiper-wrapper .un-read-news").empty();
				this.$(".index-banner .swiper-wrapper .un-read-news").html(tpl);
				// callback();
			}, this), _.bind(function (err) {
				// callback();
			}, this));
			// var _w = $(window).width();

			// $.showLoading();
			// businessDelegate.getBannerList({
			// 	maxWidth: _w
			// }, _.bind(function (data) {
			// 	$.hideLoading();
			// 	this.renderIndex(data.obj);
			// }, this), _.bind(function (err) {
			// 	$.hideLoading();
			// 	$.jtoast(err);
			// }, this));
		},
		renderIndex: function (data) {
			var str = '';
			// _.each(data.bannerList, function (v) {
			// 	str += '<div class="swiper-slide" data-uuid="' + v.uuid + '"><div class="img"><img src="' + v.bannerImg + '"></div><div class="text">' + v.title + '</div></div>';
			// });
			this.$('.index-banner > .swiper-wrapper').html(str);

			var mySwiper = new Swiper('.swiper-container', {
				direction: 'horizontal',
				loop: true,
				autoplay: 3000,
				// 如果需要分页器
				pagination: '.swiper-pagination',
				onTap: function (s, e) {
					var $p = $(e.target).parent().parent();
					var uuid = $p.data('uuid');

					var bannerDetail = new BannerDetail({
						uuid: uuid
					});
					bannerDetail.show();
				}
			});
			if(data.news){
				this.$('#newsInfo > .first > span').html(data.news.newsTitle);
				this.$('#newsInfo .date').html(data.news.queryDate);
			}
			
			if(data.notice){
				this.$('#noticeInfo > .first > span').html(data.notice.newsTitle);
				this.$('#noticeInfo .date').html(data.notice.queryDate);
			}
			// this.$('#missionInfo > .first > span').html(data.job.newsTitle);
			// this.$('#missionInfo .date').html(data.news.queryDate);
		},
		backbutton: function () {
			phonegaputil.exitApp();
		},
		initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: true,
				title: '首页'
            });

			this.menu = new AppMenu({
				index: 1
			});
			this.$el.empty().append(template).append(this.menu.$el);
			// this.$el.empty().append(this.header.$el).append(template).append(this.menu.$el);
			this.getIndex();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/tpl/work.html',[],function () { return '<div class="common-content bg-gray">\r\n    <table class="table work-table">\r\n        <tr>\r\n            <td colspan="4" class="work-title">\r\n                <span>营销应用</span>\r\n            </td>\r\n        </tr>\r\n        <tr class="work-list">\r\n            <!-- <td width="25%" class="work-link" data-link="online-marketing-index/work">\r\n                <div class="icon-marketing icon-wrapper">\r\n                    <img src="app_img/icon-marketing.png">\r\n                </div>\r\n                在线营销\r\n            </td> -->\r\n            <td width="25%" class="work-link" data-link="marketing-task/work/index">\r\n                <div class="icon-marketing icon-wrapper">\r\n                    <img src="app_img/index/icon-sail-task.png">\r\n                </div>\r\n                <span class="redPot"></span>\r\n                <!-- 营销任务 -->\r\n            </td>\r\n            <td width="25%" class="work-link" data-link="my-customer/work/index">\r\n                <div class="icon-marketing icon-wrapper">\r\n                    <img src="app_img/index/icon-my-customer.png">\r\n                </div>\r\n                <span class="redPot"></span>\r\n                <!-- 我的客户 -->\r\n            </td>\r\n            <td width="25%" class="work-link" data-link="query-remuneration/work/index">\r\n                <div class="icon-marketing icon-wrapper">\r\n                    <img src="app_img/index/icon-remunetion.png">\r\n                </div>\r\n                <span class="redPot"></span>\r\n                <!-- 酬金查询 -->\r\n            </td>\r\n            <td width="25%" class="work-link" data-link="marketing-communications/work/index">\r\n                <div class="icon-marketing icon-wrapper">\r\n                    <img src="app_img/index/icon-sail-notice.png">\r\n                </div>\r\n                <span class="redPot"></span>\r\n                <!-- 营销通报 -->\r\n            </td>\r\n        </tr>\r\n        <tr class="work-list">\r\n            <td width="25%" class="work-link" data-link="graphic-marketing/work/index">\r\n                <div class="icon-marketing icon-wrapper">\r\n                    <img src="app_img/index/icon-sail-picfont.png">\r\n                </div>\r\n                <span class="redPot"></span>\r\n                <!-- 图文营销 -->\r\n            </td>\r\n        </tr>\r\n        </tr>\r\n    </table>\r\n    <table class="table work-table border-top-grey">\r\n        <tr>\r\n            <td colspan="4" class="work-title">\r\n                <span>学习应用</span>\r\n            </td>\r\n        </tr>\r\n        <tr class="work-list">\r\n            <td width="25%" class="work-link" data-link="online-read-index/work/index">\r\n                <div class="icon-read icon-wrapper icon-marketing">\r\n                    <img src="app_img/index/icon-learn-online.png">\r\n                </div>\r\n                <!-- 在线阅读 -->\r\n            </td>\r\n            <td width="25%" class="work-link" data-link="exam-index/work/index">\r\n                <div class="icon-exam icon-wrapper icon-marketing">\r\n                    <img src="app_img/index/icon-test-oline.png">\r\n                </div>\r\n                <!-- 在线测评 -->\r\n            </td>\r\n            <td width="25%" class="work-link" data-title="营销话术" >\r\n                <div class="icon-knowledge icon-wrapper icon-marketing">\r\n                    <img src="app_img/index/icon-sail-speak.png">\r\n                </div>\r\n                <!-- 营销话术   -->\r\n            </td>\r\n            <td width="25%" style="padding-bottom: 10px;" class="work-link" data-title="互动问答"  data-link="mobile-repository-index/0/work/index">\r\n                <div class="icon-wait icon-wrapper icon-marketing">\r\n                    <img src="app_img/index/icon-answer-query.png">\r\n                </div>\r\n                <!-- 互动问答 -->\r\n            </td>\r\n        </tr>\r\n        <tr class="work-list">\r\n            <td width="25%">\r\n                <div class="icon-marketing icon-wrapper icon-marketing work-link" data-title="投诉案例" data-link="mobile-repository-index/1/work/index">\r\n                    <img src="app_img/index/icon-complaint-case.png">\r\n                </div>\r\n                <!-- 投诉案例 -->\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <table class="table work-table border-top-grey">\r\n        <tr>\r\n            <td colspan="4" class="work-title ">\r\n                <span>门店管理</span>\r\n            </td>\r\n        </tr>\r\n        <tr class="work-list">\r\n            <td width="25%" class="work-link" data-link="" data-title="服务巡检">\r\n                <div class="icon-diary icon-wrapper icon-marketing">\r\n                    <img src="app_img/index/icon-sevice-query.png">\r\n                </div>\r\n                <!-- 服务巡检 -->\r\n            </td>\r\n            <td width="25%" class="work-link" data-title="服务上门">\r\n                <div class="icon-research icon-wrapper icon-marketing">\r\n                    <img src="app_img/index/icon-service-offline.png">\r\n                </div>\r\n                <!-- 服务上门 -->\r\n            </td>\r\n            <td width="25%">\r\n                <!-- <div class="icon-wait icon-wrapper">\r\n                    <img src="app_img/icon-wait.png">\r\n                </div>\r\n                请期待 -->\r\n                &nbsp;\r\n            </td>\r\n            <td width="25%">&nbsp;</td>\r\n        </tr>\r\n    </table>\r\n    <table class="table work-table border-top-grey">\r\n        <tr>\r\n            <td colspan="4" class="work-title">\r\n                <span>其他管理</span>\r\n            </td>\r\n        </tr>\r\n        <tr class="work-list">\r\n            <td width="25%" class="work-link" data-link="" data-title="问卷管理">\r\n                <div class="icon-diary icon-wrapper icon-marketing">\r\n                    <img src="app_img/index/icon-query.png">\r\n                </div>\r\n                <!-- 问卷管理 -->\r\n            </td>\r\n            <td width="25%" class="work-link" data-title="宽带资源">\r\n                <div class="icon-research icon-wrapper icon-marketing">\r\n                    <img src="app_img/index/icon-broadband-resources.png">\r\n                </div>\r\n                <!-- 宽带资源 -->\r\n            </td>\r\n            <!-- 免扰客户 -->\r\n            <td width="25%">\r\n                <div class="icon-research icon-wrapper icon-marketing work-link" data-link="dataStatisticIndex/work/index" data-title="数据统计">\r\n                    <img src="app_img/index/icon-data-statictic.png">\r\n                </div>\r\n            </td>\r\n            <!-- <td width="25%">&nbsp;</td> -->\r\n            <td width="25%">&nbsp;</td>\r\n        </tr>\r\n    </table>\r\n</div>';});

/**
 *   首页
 **/

define('view/work',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/tpl/work.html','view/app-header','view/app-menu','view/expecting'],function(require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/tpl/work.html');
    var AppHeader = require('view/app-header');
    var AppMenu = require('view/app-menu');
    var ExpectingView = require('view/expecting');

    var View = Backbone.View.extend({
        el: 'body',
        events: {
            'tap .work-link': 'viewPage' ,
            'tap .common-header .right-button .manager': 'toastInfo'
        },
        toastInfo: function(e){
            $.jtoast("敬请期待");
        },
        viewPage: function(e) {
            var link = $(e.currentTarget).data('link');
            var works = $(".common-content .work-link") ;
            for(var i = 0 ; i < works.length ; i++){
                if(works[i] == e.currentTarget){
                    window.workLinkArr = window.workLinkArr || [] ;
                    window.workLinkArr.push(i) ;
                    $.unique(window.workLinkArr) ;// 去重
                    break ;
                }
            }
            if (!link) {
                // $.jtoast('敬请期待');
                var title = $(e.currentTarget).data('title');
                var view = new ExpectingView({
                    title: title
                });
                view.show();

                return;
            }

            Backbone.history.navigate(link, { trigger: true });
        },
        backbutton: function() {
            Backbone.history.navigate('index', { trigger: true });
        },
        initialize: function(options) {
            window._pageHistory = "" ;
            this.history = options.history;
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '应用管理'
            });

            // this.menu = new AppMenu({
            //     index: 2
            // });

            // this.$el.empty().append(this.header.$el).append(template).append(this.menu.$el);
            this.$el.empty().append(this.header.$el).append(template);
            this.$(".common-header .right-button").removeClass("hide");
            this.$(".common-header .right-button").html("<div class='manager' style='width: 100%;height: 100%;line-height: 45px;'>编辑</div>");
            // this.$(".common-header").css("background","url(../app_img/banner.png) no-repeat;");
            var mySwiper = new Swiper('.swiper-container', {
                direction: 'horizontal',
                loop: true,
                autoplay: 3000,
                // 如果需要分页器
                pagination: '.swiper-pagination'
            });
            setTimeout(function(){
                if(window.workLinkArr && window.workLinkArr.length){
                    for(var i = 0 ; i < window.workLinkArr.length ; i++ ){
                        var needRemoveIndex = window.workLinkArr[i] ;
                        $($(".common-content .work-link")[needRemoveIndex]).find(".redPot").removeClass("redPot") ;
                    }
                }
            },5);
        },
        render: function() {
            return this;
        }
    });


    return View;
});

define('text!view/online_read/tpl/index.html',[],function () { return '<div class="common-content bg-gray online_read_index" id="onlineReadIndex">\r\n    <div class="header common_header_for_read_knowledge">\r\n        <div class="list_ctrl_bar pd10 clearfix">\r\n            <div class="pull-right show_ctrl_btn">\r\n                <i class="iconfont icon-shaixuan"></i>筛选\r\n                <i class="iconfont icon-sjiantou02 double-arrow-right"></i>\r\n                <i class="iconfont icon-sjiantou03 double-arrow-down hide"></i>\r\n            </div>\r\n            <div class="overhidden">\r\n                <div class="app_search clearfix">\r\n                    <div class="pull-right">\r\n                        <div class="btn btn-primary btn-search">查询</div>\r\n                    </div>\r\n                    <div class="overhidden">\r\n                        <i class="iconfont icon-sousuo"></i>\r\n                        <input type="text" class="form-control input-search" placeholder="请输入关键字搜索">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="list_ctrl_btn weui-row active">\r\n            <div class="weui-col-33" data-type="time">\r\n                按时间&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n                <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n            </div>\r\n            <div class="weui-col-33" data-type="type">\r\n                按类别&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n                <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n            </div>\r\n            <div class="weui-col-33" data-type="view">\r\n                浏览量&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n                <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class="content">\r\n        <div class="inner">\r\n            <div class="weui-pull-to-refresh-layer">\r\n                <div class="pull-to-refresh-arrow"></div>\r\n                <div class="pull-to-refresh-preloader"></div>\r\n                <div class="down">下拉刷新</div>\r\n                <div class="up">释放刷新</div>\r\n                <div class="refresh">正在刷新...</div>\r\n                <div class="done">刷新完成</div>\r\n            </div>\r\n\r\n            <div class="list-warning">\r\n                搜索结果如下，点此查看全部\r\n            </div>\r\n\r\n            <div class="read_wrapper">\r\n                <!--<div class="read_box clearfix">\r\n                    <div class="pull-left">\r\n                        <div class="read_box_img" style="background: url(app_img/none.jpg) no-repeat center center/140px 70px"></div>\r\n                    </div>\r\n                    <div class="overhidden">\r\n                        <h3>多少九分裤说领导房间是了东方</h3>\r\n                        <p>说领导开发机历史打飞机路上看的积分路上看的积分</p>\r\n                        <div class="clearfix type">\r\n                            <div class="pull-left">浏览量：12444</div>\r\n                            <div class="pull-right">\r\n                                类别：热门(4G、家宽)\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    \r\n<div class="sort_mask">\r\n    <ul class="sort_panel">\r\n        <!--<li class="active">由高到低</li>\r\n        <li>由低到高</li>-->\r\n    </ul>\r\n</div>\r\n\r\n<script id="sortTimeTpl" type="text/template">\r\n    <li class="sort_time_btn" data-type="2" data-order="2">由近到远</li>\r\n    <li class="sort_time_btn" data-type="2" data-order="1">由远到近</li>\r\n</script>\r\n\r\n<script id="typeTpl" type="text/template">\r\n    <li class="sort_type_btn" data-uuid="">全部</li>\r\n    <% _.each(list, function(v){ %>\r\n        <li  class="sort_type_btn" data-uuid="<%=v.uuid%>"><%=v.coursewareType%></li>\r\n    <% }) %>\r\n</script>\r\n\r\n<script id="sortViewTpl" type="text/template">\r\n    <li class="sort_view_btn" data-type="1" data-order="2">由高到低</li>\r\n    <li class="sort_view_btn" data-type="1" data-order="1">由低到高</li>\r\n</script>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n    %>\r\n        <div class="read_box clearfix" data-uuid="<%=v.uuid%>" data-read="<%=v.isRead%>">\r\n            <div class="pull-left">\r\n                <div class="read_box_img" style="background: url(<%=v.courTypeImageUrl%>) no-repeat center center/cover"></div>\r\n            </div>\r\n            <div class="overhidden">\r\n                <h3><%=v.courName%></h3>\r\n                <p style="color: #10bbf3;"><%=v.isRead==\'1\'?\'已\':\'未\'%>学习</p>\r\n                <div class="clearfix type">\r\n                    <div class="pull-left">浏览量：<%=v.readCount%></div>\r\n                    <!-- <div class="pull-left"><%=v.readCount==\'1\'?\'已\':\'未\'%>学习</div> -->\r\n                    <!-- <div class="pull-right">\r\n                        类别：<%=v.courTypeStr%>\r\n                    </div> -->\r\n                    <div class="pull-right learn" data-uuid="<%=v.uuid%>" data-read="<%=v.isRead%>">\r\n                        学习\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>';});


define('text!view/online_read/tpl/my.html',[],function () { return '<div class="common-content bg-gray online_read_index">\r\n    <div class="read_wrapper">\r\n        <!--<div class="read_record_box">\r\n            <div class="read_box clearfix">\r\n                <div class="pull-left">\r\n                    <div class="read_box_img" style="background: url(app_img/none.jpg) no-repeat center center/140px 70px"></div>\r\n                </div>\r\n                <div class="overhidden">\r\n                    <h3>多少九分裤说领导房间是了东方</h3>\r\n                    <p>说领导开发机历史打飞机路上看的积分路上看的积分</p>\r\n                    <div class="clearfix type">\r\n                        <div class="pull-left">浏览量：12444</div>\r\n                        <div class="pull-right">\r\n                            类别：热门(4G、家宽)\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="record_time">于 2017-02-22 20:50 首次阅读</div>\r\n        </div>-->\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n    %>\r\n        <div class="read_record_box">\r\n            <div class="read_box clearfix">\r\n                <div class="pull-left">\r\n                    <div class="read_box_img" style="background: url(<%=v.courImageUrl%>) no-repeat center center/cover"></div>\r\n                </div>\r\n                <div class="overhidden">\r\n                    <h3><%=v.courName%></h3>\r\n                    <p><%=v.courdesc%></p>\r\n                    <div class="clearfix type">\r\n                        <div class="pull-left">浏览量：<%=v.readcount%></div>\r\n                        <div class="pull-right">\r\n                            类别：<%=v.courTypeStr%>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="record_time">于 <%=v.createTime.substr(0,16)%> 首次阅读</div>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>';});

/**
 * 阅读记录
 */

define('view/online_read/my',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_read/tpl/my.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_read/tpl/my.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
			'tap .btn-prev,.btn-next': 'viewPage'
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
		getList: function (page) {
			this.current_page = page;

			$.showLoading();
			businessDelegate.myReadList({
				page: this.current_page,
				rows: this.rows
			}, _.bind(function (data) {
				$.hideLoading();

				var tpl = _.template(this.listTemplate)({ data: data.obj});
				this.$listContent.html(tpl);

				this.$listContent.scrollTop(0);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.$listContent.html(this.errorHTML);
			}, this));
		},
		initialize: function (options) {
            this.options = options;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '阅读记录'
            });

            this.$el.empty().append(this.header.$el).append(template);

            this.$listContent = this.$('.read_wrapper');
			this.listTemplate = this.$('#listTpl').html();

            this.current_page = 1;	//当前页
			this.rows = 10; //每页显示数目
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';
		},
		render: function () {
			this.getList(1);
			return this;
		}
	});

	return View;
});

/**
*   在线阅读
**/

define('view/online_read/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_read/tpl/index.html','view/app-header','view/online_read/my'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_read/tpl/index.html');
	var AppHeader = require('view/app-header');
	var MyRead = require('view/online_read/my');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .show_ctrl_btn': 'toggleCtrlBtn',
			'tap .list_ctrl_btn > div': 'getSortPanel',
			'tap .list-warning': 'initList',
			'tap .btn-prev,.btn-next': 'viewPage',
			'tap .btn-search': 'searchByKeyword',
			'tap .sort_type_btn': 'searchByType',
			'tap .sort_time_btn': 'sortByTime',
			'tap .sort_view_btn': 'sortByView',
			'tap .myread': 'viewMyRead',
			'tap #onlineReadIndex .read_box': 'viewInfo',
			"tap #onlineReadIndex .read_box .learn": 'toLearn'
		},
		toLearn: function(e){
			e.stopPropagation();
			var read = $(e.currentTarget).data("read") ;
			var uuid = $(e.currentTarget).data("uuid") ;
			window.currentRecordRead = read ;
			Backbone.history.navigate('online-read-attachment/'+uuid, { trigger: true });
		},
		viewInfo: function (e) {
			var $e = $(e.currentTarget);
			var uuid = $e.data('uuid');
			var read = $(e.currentTarget).data("read") ;
			window.currentRecordRead = read ;
			Backbone.history.navigate('online-read-info/' + uuid, { trigger: true });
		},
		viewMyRead: function(){
			var view = new MyRead();
			view.show();
		},
		toggleCtrlBtn: function (e) {
			if (this.$('.list_ctrl_btn').hasClass('active')) {
				//收起
				this.$('.list_ctrl_btn').removeClass('active');
				this.$('.double-arrow-down').addClass('hide');
				this.$('.double-arrow-right').removeClass('hide');

				//收起
				this.$('.arrow-down').addClass('hide');
				this.$('.arrow-up').removeClass('hide');
				this.$('.sort_mask').removeClass('active');
				this.current_sort_btn = '';
			} else {
				//打开
				this.$('.list_ctrl_btn').addClass('active');
				this.$('.double-arrow-right').addClass('hide');
				this.$('.double-arrow-down').removeClass('hide');
			}
		},
		getSortPanel: function (e) {
			var $e = $(e.currentTarget);
			var type = $e.data('type');

			if (!this.current_sort_btn) {
				this.current_sort_btn = type;
				this.renderSortPanel($e);
			} else {
				if (type == this.current_sort_btn) {
					this.toggleSortPanel($e);
					return;
				} else {
					this.current_sort_btn = type;
					this.renderSortPanel($e);
				}
			}
		},
		showSortPanel: function ($e) {
			this.$('.arrow-down').addClass('hide');
			this.$('.arrow-up').removeClass('hide');

			this.$('.sort_mask').addClass('active');
			$e.find('.arrow-up').addClass('hide');
			$e.find('.arrow-down').removeClass('hide');
		},
		hideSortPanel: function ($e) {
			this.$('.sort_mask').removeClass('active');
			$e.find('.arrow-down').addClass('hide');
			$e.find('.arrow-up').removeClass('hide');
		},
		toggleSortPanel: function ($e) {
			if (this.$('.sort_mask').hasClass('active')) {
				//收起
				this.hideSortPanel($e);
			} else {
				//打开
				this.showSortPanel($e);
			}
		},
		renderSortPanel: function ($e) {
			var type = $e.data('type');
			switch (type) {
				case 'time':
					//按时间排序
					this.$('.sort_panel').html(this.sortTimeTemplate);
					break;
				case 'type':
					//按类别搜索
					var tpl = _.template(this.typeTemplate)({ list: this.typeArr });
					this.$('.sort_panel').html(tpl);
					break;
				case 'view':
					//按浏览量排序
					this.$('.sort_panel').html(this.sortViewTemplate);
					break;
			}

			this.showSortPanel($e);
		},
		sortByTime: function(e){
			var $e = $(e.currentTarget);
			this.sort_type = $e.data('type');
			this.sort_order = $e.data('order');

			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(0)');
			this.hideSortPanel($panel);
		},
		sortByView: function(e){
			var $e = $(e.currentTarget);
			this.sort_type = $e.data('type');
			this.sort_order = $e.data('order');

			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(2)');
			this.hideSortPanel($panel);
		},
		searchByType: function(e){
			var uuid = $(e.currentTarget).data('uuid');
			if(!uuid){
				this.initList();
				return;
			}
			
			this.search_type = uuid;
			
			this.$warning.show();
			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(1)');
			this.hideSortPanel($panel);
		},
		searchByKeyword: function () {
			if(!this.data){
				return;
			}

			if (this.$('.sort_mask').hasClass('active') || this.$('.list_ctrl_btn').hasClass('active')) {
				this.toggleCtrlBtn();
			}

			this.search_keyword = '';
			var keyword = $.trim(this.$input.val());
			if (!keyword) {
				return;
			}

			this.search_keyword = keyword;
			this.$warning.show();
			this.getList(1, $.noop);
		},
		initList: function () {
			if (this.$('.sort_mask').hasClass('active') || this.$('.list_ctrl_btn').hasClass('active')) {
				this.toggleCtrlBtn();
			}

			this.$warning.hide();
			this.$input.val('');

			this.search_keyword = '';	//搜索关键字
			this.search_type = '';	//搜索类型uuid
			this.sort_order = '';
			this.sort_type = '';

			this.getList(1, $.noop);
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
		getList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$content.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.readList({
				page: this.current_page,
				rows: this.rows,
				courName: this.search_keyword,
				courImageWidth: 140,
				courTypeUUID: this.search_type,
				sort: this.sort_type,
				order: this.sort_order
			}, _.bind(function (data) {
				this.data = data;

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				this.listData = data.obj.readCourseware;
				this.typeArr = data.obj.readCoursewareType;

				var tpl = _.template(this.listTemplate)({ data: this.listData });
				this.$content.html(tpl);
				this.$content.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$content.html(this.errorHTML);

				callback();
			}, this));
		},
		backbutton: function () {
			if (this.$('.sort_mask').hasClass('active')) {
				this.toggleCtrlBtn();
				return;
			}

            Backbone.history.navigate(this.history, { trigger: true });
		},
		initialize: function () {
			this.history = window._pageHistory?window._pageHistory:"work/index";
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '在线学习'
            });
			this.header.setRightBtn('<span class="text myread">阅读记录</span>');

            this.$el.empty().append(this.header.$el).append(template);


			this.listTemplate = this.$('#listTpl').html();
			this.typeTemplate = this.$('#typeTpl').html();
			this.sortTimeTemplate = this.$('#sortTimeTpl').html();
			this.sortViewTemplate = this.$('#sortViewTpl').html();

            this.$wrapper = this.$('.content > .inner');
			this.$content = this.$('.read_wrapper');
			this.$warning = this.$('.list-warning');
			this.$input = this.$('.input-search');

			this.typeArr;	//类型
			this.listData;	//列表信息

			this.data = null;	//当前内容
			this.current_page = 1;	//当前页
			this.rows = 10; //每页显示数目
			this.search_keyword = '';	//搜索关键字
			this.search_type = '';	//搜索类型uuid
			this.sort_type = ''; 	//按排序类别
			this.sort_order = '';	//排序正负

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.current_sort_btn;
		},
		render: function () {
            //下拉刷新
            this.$wrapper.pullToRefresh();
            this.$wrapper.on("pull-to-refresh", _.bind(function () {
				this.isPullRefresh = 1;
				this.getList(1, _.bind(function () {
					this.$wrapper.pullToRefreshDone();
				}, this));
			}, this));

			this.getList(1, $.noop);
			return this;
		}
	});

	return View;
});


define('text!view/online_read/tpl/info.html',[],function () { return '<div class="common-content bg-gray" id="onlineReadInfo">\r\n    <div class="content">\r\n        <div class="app_detail_content weui_cells">\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>资料标题</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>资料说明</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>资料类别</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>提供人</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>提供科室</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>阅读次数</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>已阅人数</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="weui-row ctrl">\r\n        <!-- <div class="weui-col-50 btn-view-detail">\r\n            查看详情\r\n        </div> -->\r\n        <div class="weui-col-50 btn-view-attachment">\r\n            查看附件\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="infoTpl" type="text/template">\r\n    <div class="app_detail_content weui_cells">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>资料标题</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=data.courName%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>资料说明</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=data.courDesc%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>资料类别</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=data.courTypeStr%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>提供人</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=data.anthor%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>提供科室</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=data.department%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>阅读次数</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=data.viewCount%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>已阅人数</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=data.userCount%>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</script>';});

/**
*   在线阅读-资料概述
**/

define('view/online_read/info',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_read/tpl/info.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_read/tpl/info.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .btn-view-detail': 'viewDetail',
			'tap .btn-view-attachment': 'viewAttachment'	
		},
		viewDetail: function(){
			Backbone.history.navigate('online-read-detail/'+this.uuid, { trigger: true });
		},
		viewAttachment: function(){
			Backbone.history.navigate('online-read-attachment/'+this.uuid, { trigger: true });
		},
		getInfo: function(){
			$.showLoading();
			businessDelegate.readInfo({
				coursewareUuid: this.uuid,
				addCount:this.addCount
			}, _.bind(function (data) {
				$.hideLoading();
				this.renderInfo(data.obj);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		renderInfo: function(data){
			this.$('.btn-view-detail').prop('disabled', false);
			this.$('.btn-view-attachment').prop('disabled', false);

			var tpl = _.template(this.infoTemplate)({data:data});
			this.$wrapper.html(tpl);
		},
		backbutton: function () {
            Backbone.history.navigate('online-read-index/work/index', { trigger: true });
		},
		initialize: function (opitons) {
			this.uuid = opitons.uuid;
			this.addCount = opitons.addCount;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '资料概述'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.infoTemplate = this.$('#infoTpl').html();
			this.$wrapper = this.$('.content');
		},
		render: function () {
			this.getInfo();
			return this;
		}
	});

	return View;
});


define('text!view/online_read/tpl/detail.html',[],function () { return '<div class="common-content bg-gray online_read_detail overhidden" id="onlineReadDetail">\r\n    <div class="content">\r\n        <div class="pd10 bg-white article_wrapper">\r\n            <div class="article_info">\r\n                <h3>-----</h3>\r\n                <p>作者：-- &nbsp;&nbsp;更新时间：0000-00-00</p>\r\n            </div>\r\n\r\n            <div class="article_content clearfix"></div>\r\n        </div>\r\n        \r\n        <div class="article_ctrl pd10 bg-white clearfix">\r\n            <div class="pull-left">\r\n                <div class="article_ctrl_btn like_btn not_like">\r\n                    <div class="icon_wrapper">\r\n                        <i class="iconfont icon-aixin empty_love"></i>\r\n                        <i class="iconfont icon-xiazai1 fill_love hide"></i>\r\n                    </div>\r\n                    <p>0</p>\r\n                </div>\r\n\r\n                <div class="article_ctrl_btn reply_btn">\r\n                    <div class="icon_wrapper">\r\n                        <i class="iconfont icon-pinglun"></i>\r\n                    </div>\r\n                    \r\n                    <p>0</p>\r\n                </div>\r\n            </div>\r\n            <!--<div class="pull-right">\r\n                <div class="link_ctrl_btn">\r\n                    <i class="iconfont icon-xiazai"></i>\r\n                    <p>附件下载</p>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n\r\n        <div class="comment_sum">\r\n            评论\r\n        </div>\r\n        <div class="comment_wrapper bg-white">\r\n            <!--<div class="warning-panel">暂无评论</div>-->\r\n            <!--<div class="comment_floor">\r\n                <div class="comment_box clearfix">\r\n                    <div class="pull-left">\r\n                        <img src="app_img/noavatar.png" alt="">\r\n                    </div>\r\n                    <div class="overhidden">\r\n                        <div class="comment_info">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="comment_ctrl pull-right">\r\n                                    <div class="like_ctrl">\r\n                                        <i class="iconfont icon-aixin empty_love"></i> 1\r\n                                    </div>\r\n                                    <div class="reply_ctrl">\r\n                                        <i class="iconfont icon-groupcopy5"></i> 2\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <p class="date">2016-02-02</p>\r\n                        </div>\r\n                        <p>回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容</p>\r\n                    </div>\r\n                </div>\r\n                <div class="comment_sub_box">\r\n                    <div class="comment_box clearfix">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="date pull-right">2016-02-02</div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class="comment_box clearfix">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="date pull-right">2016-02-02</div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n\r\n    <div class="form clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-block btn-reply">发送</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <input type="text" class="form-control input-comment" placeholder="发表一下你的点评吧~">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="detailTpl" type="text/template">\r\n    <%\r\n        var a = \'佚名\';\r\n        if(data.anthor){\r\n            a = data.anthor;\r\n        }\r\n    %>\r\n    <div class="article_info">\r\n        <h3><%=data.courName%></h3>\r\n        <p>作者：<%=a%> &nbsp;&nbsp;更新时间：<%=data.createTime%></p>\r\n    </div>\r\n\r\n    <div class="article_content clearfix"><%=data.courDetails%></div>\r\n</script>\r\n\r\n\r\n\r\n<script id="commentTpl" type="text/template">\r\n<% if(!data.list.rows.length){ %>\r\n    <div class="warning-panel">暂无评论</div>\r\n<% }else{ %>\r\n    <%\r\n        _.each(data.list.rows,function(v,i){\r\n    %>\r\n        <div class="comment_floor">\r\n            <div class="comment_box clearfix">\r\n                <div class="pull-left">\r\n                    <% if(v.headimgurl){ %>\r\n                        <img src="<%=v.headimgurl%>">\r\n                    <% }else{ %>\r\n                        <img src="app_img/noavatar.png">\r\n                    <% } %>\r\n                </div>\r\n                <div class="overhidden">\r\n                    <div class="comment_info">\r\n                        <div class="clearfix">\r\n                            <div class="name pull-left"><%=v.name%></div>\r\n                            <div class="comment_ctrl pull-right">\r\n                                <div class="like_ctrl" data-uuid="<%=v.uuid%>">\r\n                                    <%\r\n                                        var h1 = \'\';\r\n                                        var h2 = \'hide\';\r\n                                        if(v.isThumbs){\r\n                                            h1 = \'hide\';\r\n                                            h2 = \'\';\r\n                                        }\r\n                                    %>\r\n                                    <i class="iconfont icon-aixin empty_love <%=h1%>"></i>\r\n                                    <i class="iconfont icon-xiazai1 fill_love <%=h2%>"></i> <span><%=v.thumbsCount%></span>\r\n                                </div>\r\n                                <div class="reply_ctrl" data-uuid="<%=v.uuid%>" data-name="<%=v.name%>">\r\n                                    <i class="iconfont icon-groupcopy5"></i> <%=v.commentsCount%>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p class="date"><%=v.commentsTime%></p>\r\n                    </div>\r\n                    <p><%=v.commentsContent%></p>\r\n                </div>\r\n            </div>\r\n            <% if(v.secondaryJson && v.secondaryJson.length > 0){ %>\r\n                <div class="comment_sub_box">\r\n                    <% _.each(v.secondaryJson, function(s){ %>\r\n                        <div class="comment_box clearfix">\r\n                            <div class="pull-left">\r\n                                <% if(s.headimgurl){ %>\r\n                                    <img src="<%=s.headimgurl%>">\r\n                                <% }else{ %>\r\n                                    <img src="app_img/noavatar.png ">\r\n                                <% } %>\r\n                            </div>\r\n                            <div class="overhidden">\r\n                                <div class="clearfix">\r\n                                    <div class="name pull-left"><%=s.name%></div>\r\n                                    <div class="date pull-right"><%=s.commentsTime%></div>\r\n                                </div>\r\n                                <p><%=s.commentsContent%></p>\r\n                            </div>\r\n                        </div>\r\n                    <% }); %>\r\n                </div>\r\n            <% } %>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n    <% if(data.list.hasNextPage || data.list.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.list.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.list.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.list.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.list.pageNum%>/<%=data.list.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.list.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n<% } %>\r\n</script>';});

/**
*   在线阅读-详细描述
**/

define('view/online_read/detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_read/tpl/detail.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_read/tpl/detail.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .not_like': 'likeArticle',
			'tap .btn-prev,.btn-next': 'viewPage',
			'tap .like_ctrl': 'likeComment',
			'tap #onlineReadDetail > .content': 'prepareReply',
			'tap .reply_ctrl': 'prepareReplyReply',
			'tap .btn-reply': 'sendReply',
			'tap .btn-reply-reply': 'sendReplyReply',
			// 'tap .link_ctrl_btn': 'viewAttachment'
		},
		// viewAttachment: function () {
		// 	Backbone.history.navigate('online-read-attachment/' + this.uuid, { trigger: true });
		// },
		//评论点赞
		likeComment: function (e) {
			var $e = $(e.currentTarget);
			var uuid = $e.data('uuid');

			//点赞方法
			businessDelegate.likeReadComment({
				commentsUuid: uuid
			}, _.bind(function (data) {
				this.renderLike($e);

				var count = new Number($e.find('span').text());
				$e.find('span').text(count + 1);
			}, this), _.bind(function (err) {
				if (err == '已点赞') {
					this.renderLike($e);
				}
			}, this));
		},
		prepareReply: function () {
			if (this.$('.btn-reply-reply').length) {
				this.$('.btn-reply-reply').removeClass('btn-reply-reply').addClass('btn-reply');
			} else {
				return;
			}

			this.replyUUID = '';
			this.replyName = '';

			this.$('.input-comment').val('');
			this.$('.input-comment').attr('placeholder', '发表一下你的点评吧~');
		},
		prepareReplyReply: function (e) {
			var $e = $(e.currentTarget);
			this.replyUUID = $e.data('uuid');
			this.replyName = $e.data('name');

			this.$('.input-comment').val('');
			this.$('.input-comment').attr('placeholder', '回复' + this.replyName);

			if (this.$('.btn-reply').length) {
				this.$('.btn-reply').removeClass('btn-reply').addClass('btn-reply-reply');
			}

			return false;
		},
		//一级回复
		sendReply: function () {
			var text = $.trim(this.$('.input-comment').val());

			if (!text) {
				$.jtoast('请填写点评内容');
				return;
			}

			$.showLoading('正在发表');
			businessDelegate.addReadComment({
				coursewareUuid: this.uuid,
				comments: text
			}, _.bind(function (data) {
				$.hideLoading();

				this.viewPage = true;
				this.getList(1);

				this.$('.input-comment').val('');
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		//二级回复
		sendReplyReply: function () {
			var text = $.trim(this.$('.input-comment').val());
			if (!text) {
				$.jtoast('请填写点评内容');
				return;
			}

			$.showLoading('正在发表');
			businessDelegate.addReadCommentReply({
				commentsUuid: this.replyUUID,
				comments: text
			}, _.bind(function (data) {
				$.hideLoading();

				this.viewPage = false;
				this.getList(this.current_page);

				this.prepareReply();
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		viewPage: function (e) {
			this.viewPage = true;
			var page = $(e.currentTarget).data('page');
			this.getList(page);
		},
		getList: function (page) {
			this.current_page = page;
			$.showLoading();
			businessDelegate.readCommentsList({
				commentsUuid: this.uuid,
				page: page,
				rows: this.rows
			}, _.bind(function (data) {
				$.hideLoading();

				var tpl = _.template(this.commentTemplate)({ data: data.obj });
				this.$commentWrapper.html(tpl);

				//重新获取评论数
				this.$('.reply_btn > p').html(data.obj.commentsCount);

				if (this.viewPage) {
					this.scrollToCommentTop();
				}
			}, this), _.bind(function (err) {
				$.hideLoading();
				this.$commentWrapper.html(this.errorHTML);
				$.jtoast(err);
			}, this));
		},
		/**
		 * 文章信息
		 */
		likeArticle: function () {
			var $like = this.$('.like_btn');

			businessDelegate.likeReadDetail({
				coursewareUuid: this.uuid
			}, _.bind(function (data) {
				this.renderLike($like);

				var count = parseInt(this.$('.like_btn > p').text()) + 1;
				this.$('.like_btn > p').text(count);
			}, this), _.bind(function (err) {
				if (err == '已点赞') {
					this.renderLike($like);
				}
			}, this));
		},
		getDetail: function () {
			$.showLoading();
			businessDelegate.readDetail({
				coursewareUuid: this.uuid
			}, _.bind(function (data) {
				$.hideLoading();
				this.renderDetail(data.obj);
				this.getList(1);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		renderDetail: function (data) {
			//渲染文章
			data.courDetails = $.formatText(data.courDetails);
			var tpl = _.template(this.detailTemplate)({ data: data });
			this.$('.article_wrapper').html(tpl);

			//渲染评论数
			this.$('.reply_btn > p').html(data.commentsCount);

			//渲染点赞数
			this.$('.like_btn > p').html(data.thumbsCount);

			//渲染点赞
			if (data.isThumbs) {
				var $like = this.$('.like_btn');
				$like.removeClass('not_like');
				this.renderLike($like);
			}
		},
		/**
		 * 工具
		 */
		scrollToCommentTop: function () {
			var h1 = this.$('.article_wrapper').height();
			var h2 = this.$('.article_ctrl').height();
			this.$wrapper.scrollTop(h1 + h2);
		},
		renderLike: function ($like) {
			if ($like.find('.fill_love').hasClass('hide')) {
				$like.find('.empty_love').addClass('hide');
				$like.find('.fill_love').removeClass('hide');
			}
		},
		backbutton: function () {
            Backbone.history.navigate('online-read-info/'+this.uuid, { trigger: true });
		},
		initialize: function (options) {
			this.history = window._pageHistory?window._pageHistory:"work/index";
			this.uuid = options.uuid;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '资料详情'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.detailTemplate = this.$('#detailTpl').html();
			this.commentTemplate = this.$('#commentTpl').html();

			this.$wrapper = $('#onlineReadDetail > .content');
			this.$commentWrapper = this.$('.comment_wrapper');

			this.current_page = 1;	//当前页
			this.rows = 50; //每页显示数目
			this.viewPage = false; //是否在翻阅评论

			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.getDetail();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/online_read/tpl/attachment.html',[],function () { return '<div class="common-content bg-gray">\r\n    \r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <% if(list.length == 0){ %>\r\n        <div class="warning-panel">暂无附件</div>\r\n    <% }else{ %>\r\n        <table class="table attachment_table bg-white">\r\n            <% \r\n                _.each(list, function(v){ \r\n                    var fileIcon = \'<i class="iconfont icon-file"></i>\';\r\n                    switch(v.fileType){\r\n                        case \'.xls\':\r\n                        case \'.xlsx\':\r\n                            fileIcon = \'<i class="iconfont icon-iconfontexcel"></i>\';\r\n                            break;\r\n                        case \'.docx\':\r\n                        case \'.doc\':\r\n                            fileIcon = \'<i class="iconfont icon-fileword"></i>\';\r\n                            break;\r\n                        case \'.pptx\':\r\n                        case \'.ppt\':\r\n                            fileIcon = \'<i class="iconfont icon-iconfonticonfontexcel"></i>\';\r\n                            break;\r\n                        case \'.mp4\':\r\n                            fileIcon = \'<i class="iconfont icon-shipin"></i>\';\r\n                            break;\r\n                        case \'.pdf\':\r\n                            fileIcon = \'<i class="iconfont icon-pdf"></i>\';\r\n                            break;\r\n                    }\r\n            %>\r\n            <tr>\r\n                <td width="18%">\r\n                    <!--<i class="iconfont icon-file"></i>-->\r\n                    <!--<i class="iconfont icon-iconfontexcel"></i>-->\r\n                    <!--<i class="iconfont icon-fileword"></i>-->\r\n                    <!--<i class="iconfont icon-iconfonticonfontexcel"></i>-->\r\n                    <!--<i class="iconfont icon-shipin"></i>-->\r\n                    <!--<i class="iconfont icon-pdf"></i>-->\r\n                    <%=fileIcon%>\r\n                </td>\r\n                <td width="47%">\r\n                    <h4><%=v.fileName%></h4>\r\n                    <p>文件大小：<%=v.fileSizeDesc%></p>\r\n                </td>\r\n                <td width="35%" class="text-right">\r\n                    <% if(v.canPreview){ %>\r\n                        <button class="btn btn-primary btn-sm btn-preview" data-uuid="<%=v.uuid%>">\r\n                            <%=\'1\'==v.isRead?\'已\':\'\'%>学习\r\n                            <!-- <%=\'1\'==currentRecordRead?\'已\':\'\'%>学习 -->\r\n                        </button>\r\n                    <% } %>\r\n                    <% if(v.canDownload){ %>\r\n                        <button class="btn btn-primary btn-sm btn-download" data-uuid="<%=v.uuid%>">下载</button>\r\n                    <% } %>\r\n                </td>\r\n            </tr>\r\n            <% }) %>\r\n        </table>\r\n    <% } %>\r\n</script>';});

/**
*   在线阅读-附件下载
**/

define('view/online_read/attachment',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_read/tpl/attachment.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
	var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_read/tpl/attachment.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
		events: {
			'tap .btn-preview': 'preview',
			'tap .btn-download': 'download'
		},
		download: function (e) {
			var $e = $(e.currentTarget);
			var uuid = $e.data('uuid');

			console.log('下载' + uuid);

			$.showLoading('正在获取下载信息', function () {
				$('.weui_toast').css({
					'width': '10em',
					'margin-left': '-5em'
				});
			});

			businessDelegate.getReadAttachmentDownload({
				attacmentsUuid: uuid
			}, _.bind(function (data) {
				$.hideLoading();
				$.alert('下载地址已发送至您的邮箱<br>该邮件可能会被您的邮箱误判为垃圾邮件，若您查询不到相关邮件，请在垃圾箱中查看');
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		preview: function (e) {
			var $e = $(e.currentTarget);
			$e.text("已学习") ;
			window.currentRecordRead = 1 ;
			var uuid = $e.data('uuid');

			console.log('预览' + uuid);

			$.showLoading('正在获取预览信息', function () {
				$('.weui_toast').css({
					'width': '10em',
					'margin-left': '-5em'
				});
			});

			businessDelegate.getReadAttachmentPreview({
				attacmentsUuid: uuid
			}, _.bind(function (data) {
				$.hideLoading();
				screen.orientation.lock('landscape');
				if(/^(\S*).mp4$/.test(data.obj.realUrl)){
					window.plugins.streamingMedia.playVideo(data.obj.realUrl);
				}else{
					window.open(data.obj.viewUrl, '_blank', 'location=no,zoom=yes,enableViewportScale=yes,closebuttoncaption=完成');
				}
				// window.plugins.streamingMedia.playVideo("http://47.100.126.72/ProMark/hnwximg/read/courseware/mp4/2018-05-07/a38bfec8-fa25-451d-b87f-fdec72d4ebddWxPc.mp4");
				// var my_media = new Media("http://47.100.126.72/ProMark/hnwximg/read/courseware/mp4/2018-05-07/a38bfec8-fa25-451d-b87f-fdec72d4ebddWxPc.mp4",         // success callback
				// 	function () {
				// 		console.log("playAudio():Audio Success");
				// 	},
				// 	// error callback
				// 	function (err) {
				// 		console.log("playAudio():Audio Error: " + err);
				// 	}
				// );
				// // Play audio
				// my_media.play();
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		getList: function () {
			$.showLoading();
			businessDelegate.readAttachment({
				coursewareUuid: this.uuid
			}, _.bind(function (data) {
				$.hideLoading();
				let list = data.obj ;
				for(var i = 0 ; i < list.length ;i++){
					list[i].isRead = window.currentRecordRead ;
				}
				var tpl = _.template(this.listTemplate)({ list: list });
				this.$content.html(tpl);

			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.$content.html(this.errorHTML);
			}, this));
		},
		backbutton: function () {
			// Backbone.history.navigate('online-read-info/' + this.uuid, { trigger: true });
			window.history.go(-1);
		},
		initialize: function (options) {
			this.uuid = options.uuid;

			this.header = new AppHeader({
				host: this,
				main: false, //是否主页面
				title: '学习内容'
			});

			this.$el.empty().append(this.header.$el).append(template);

			this.listTemplate = this.$('#listTpl').html();
			this.$content = this.$('.common-content');
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';
		},
		render: function () {
			this.getList();
			return this;
		}
	});

	return View;
});

function DateLinkMapping(date, fill) {
    this.Date = date;
    if(!fill){
    	fill = false;
    }
    this.isfill = fill;
}
Date.prototype.format = function(format) {
	if(!format){
		format = 'yyyyMMdd';
	}
	var o = {
		"M+": this.getMonth() + 1, //month
		"d+": this.getDate(), //day
		"h+": this.getHours(), //hour
		"m+": this.getMinutes(), //minute
		"s+": this.getSeconds(), //second
		"q+": Math.floor((this.getMonth() + 3) / 3), //quarter
		"S": this.getMilliseconds() //millisecond
	}
	if (/(y+)/.test(format)) format = format.replace(RegExp.$1,
		(this.getFullYear() + "").substr(4 - RegExp.$1.length));
	for (var k in o) {
		if (new RegExp("(" + k + ")").test(format)){
			format = format.replace(RegExp.$1,
				RegExp.$1.length == 1 ? o[k] :
				("00" + o[k]).substr(("" + o[k]).length));
		}
	}
	return format;
}
var Calendar = {
	
    settings:
            {
                firstDayOfWeek: 1,
                baseClass: "calendar",
                curDayClass: "curDay curMonth",
                prevMonthCellClass: "prevMonth",
                nextMonthCellClass: "prevMonth",
                curMonthNormalCellClass: "curMonth",
                prevNextMonthDaysVisible: true,
            },
    containerId: "",
    weekDayNames: null,
    dateLinkMappings: [],
    Init: function(dateLinkMappings) {
        if (!this.weekDayNames ) {
        	this.weekDayNames = [];
            this.weekDayNames[1] = "一";
            this.weekDayNames[2] = "二";
            this.weekDayNames[3] = "三";
            this.weekDayNames[4] = "四";
            this.weekDayNames[5] = "五";
            this.weekDayNames[6] = "六";
            this.weekDayNames[7] = "日";
        } 
        if (dateLinkMappings) {
            this.dateLinkMappings = dateLinkMappings;
        }
        Calendar.RenderCalendar("calendar", new Date());
    },
    InitWeekSetting: function(weekDayNames, dateLinkMappings, settings) {
        if (!weekDayNames || weekDayNames.length && weekDayNames.length != 7) {
            this.weekDayNames[1] = "一";
            this.weekDayNames[2] = "二";
            this.weekDayNames[3] = "三";
            this.weekDayNames[4] = "四";
            this.weekDayNames[5] = "五";
            this.weekDayNames[6] = "六";
            this.weekDayNames[7] = "日";
        }
        else {
            this.weekDayNames = weekDayNames;
        }
        if (dateLinkMappings) {
            this.dateLinkMappings = dateLinkMappings;
        }
    },
    RenderCalendar: function(divId, date) {
    	var year = date.getFullYear(); //获取完整的年份(4位,1970-????) 
		var month = date.getMonth() + 1; //获取当前月份(0-11,0代表1月) 
        this.containerId = divId;
        var ht = [];
		ht.push(this.initYearStr(date));
		
        ht.push("<table class='", this.settings.baseClass, "' cellspacing='0' cellpadding='0' border='0'>");
        ht.push(this._RenderTitle(month, year));
        ht.push(this._RenderBody(month, year));
        ht.push("</table>");
        document.getElementById(divId).innerHTML = ht.join("");
    },
    initYearStr:function(myDate){
		var year = myDate.getFullYear(); //获取完整的年份(4位,1970-????) 
		var month = myDate.getMonth() + 1; //获取当前月份(0-11,0代表1月) 
		var date = myDate.getDate(); //获取当前日(1-31) 
		var day = myDate.getDay(); //获取当前星期X(0-6,0代表星期天) 
		if(month < 10){
			month = '0'+month;
		}
		if(date < 10){
			date = '0' + date;
		}
		if(day == 0){
			day = 7;
		}
		day = this.weekDayNames[day];
		var _html =
		'<div class="year">'+
			year + '-'+ month +'-'+ date +'<span>星期'+ day +'</span>'+
		'</div>';
		return _html;
	},
    _RenderTitle: function(month, year) {
        var ht = [];
        //星期
        ht.push("<tr  class='week' >");
        for (var i = 0; i < 7; i++) {
            var day = (i + this.settings.firstDayOfWeek) == 7 ? 7 : (i + this.settings.firstDayOfWeek) % 7;
            ht.push("<th >", this.weekDayNames[day], "</th>")
        }
        ht.push("</tr>");
        return ht.join("");
    },
    _RenderBody: function(month, year) {
        var date = new Date(year, month - 1, 1);
        var day = date.getDay();
        var dayOfMonth = 1;
        var daysOfPrevMonth = (7 - this.settings.firstDayOfWeek + day) % 7;
        var totalDays = this._GetTotalDays(month, year);
        var totalDaysOfPrevMonth = this._GetToalDaysOfPrevMonth(month, year);
        var ht = [];
        var curDate;

        for (var i = 0; ; i++) {
            curDate = null;
            if (i % 7 == 0) {//新起一行
                ht.push("<tr>");
            }
            ht.push("<td");
            if (i >= daysOfPrevMonth && dayOfMonth <= totalDays) {//本月
                curDate = new Date(year, month - 1, dayOfMonth);
                if (Date.parse(new Date().toDateString()) - curDate == 0) {
                    ht.push(" class=' day"+dayOfMonth+" ", this.settings.curDayClass, "'");
                }
                else {
                    ht.push(" class=' day"+dayOfMonth+" ", this.settings.curMonthNormalCellClass, "'");
                }
                dayOfMonth++;

            }
            else if (i < daysOfPrevMonth) {//上月
                if (this.settings.prevNextMonthDaysVisible) {
                    var prevMonth = month;
                    var prevYear = year;
                    if (month == 1) {
                        prevMonth = 12;
                        prevYear = prevYear - 1;
                    }
                    else {
                        prevMonth = prevMonth - 1;
                    }
                    curDate = new Date(prevYear, prevMonth - 1, totalDaysOfPrevMonth - (daysOfPrevMonth - i - 1));

                    ht.push(" class='", this.settings.prevMonthCellClass, "'");
                }
            }
            else {//下月
                if (this.settings.prevNextMonthDaysVisible) {
                    var nextMonth = month;
                    var nextYear = year;
                    if (month == 12) {
                        nextMonth = 1;
                        nextYear = prevYear + 1;
                    }
                    else {
                        nextMonth = nextMonth + 1;
                    }
                    curDate = new Date(nextYear, nextMonth - 1, i - dayOfMonth - daysOfPrevMonth + 2);
                    ht.push(" class='", this.settings.nextMonthCellClass, "'");
                }
            }
            ht.push(">");
            ht.push(this._BuildCell(curDate));
            ht.push("</td>");
            if (i % 7 == 6) {//结束一行
                ht.push("</tr>");
            }
            if (i % 7 == 6 && dayOfMonth - 1 >= totalDays) {
                break;
            }
        }
        return ht.join("");
    },
    _BuildCell: function(curDate) {
        var ht = [];
        if (curDate) {
            // if (this.dateLinkMappings[curDate.format()]) {
            //    // ht.push(curDate.getDate());
            //     if(this.dateLinkMappings[curDate.format()].fill == 1){
            //     	ht.push('<div class="td_sign_2" >'+ curDate.getDate() +'</div>');
            //     }else{
            //     	ht.push('<div class="td_sign_1" >'+ curDate.getDate() +'</div>');
            //     }
            // }else{
            	ht.push(curDate.getDate());
            // }
        }
        else {
            ht.push("&nbsp;");
        }
        return ht.join("");
    },
    //计算指定月的总天数
    _GetTotalDays: function(month, year) {
        if (month == 2) {
            if (this._IsLeapYear(year)) {
                return 29;
            }
            else {
                return 28;
            }
        }
        else if (month == 4 || month == 6 || month == 9 || month == 11) {
            return 30;
        }
        else {
            return 31;
        }
    },
    _GetToalDaysOfPrevMonth: function(month, year) {
        if (month == 1) {
            month = 12;
            year = year - 1;
        }
        else {
            month = month - 1;
        }
        return this._GetTotalDays(month, year);
    },
    //判断是否是闰年
    _IsLeapYear: function(year) {
        return year % 400 == 0 || (year % 4 == 0 && year % 100 != 0);
    }
};
define("Calendar", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.Calendar;
    };
}(this)));


define('text!view/exam/tpl/index.html',[],function () { return '<div class="common-content bg-gray">\r\n    <div class="exam-menu weui-row">\r\n        <div class="weui-col-25 active">\r\n            <div>考试日历</div>\r\n        </div>\r\n        <div class="weui-col-25" data-href="exam-record">\r\n            <div>考试成绩</div>\r\n        </div>\r\n        <div class="weui-col-25" data-href="exam-fault">\r\n            <div>错题库</div>\r\n        </div>\r\n        <div class="weui-col-25" data-href="exam-banklist">\r\n            <div>原题库</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="calendar" id="calendar">\r\n    </div>\r\n\r\n    <div class="exam-list">\r\n        <div class="warning-panel">今日没有考试</div>\r\n    </div>\r\n</div>\r\n\r\n<script type="text/template" id="tpl">\r\n    <% if(list.length == 0){ %>\r\n        <div class="warning-panel">今日没有考试</div>\r\n    <% }else{ %>\r\n        <% _.each(list, function(v){ %>\r\n            <div class="exam-box">\r\n                <h3><%=v.examTitle%></h3>\r\n                <p>开始时间：<%=v.examStartTime%></p>\r\n                <p>开始时间：<%=v.examEndtime%></p>\r\n                <p>考试时长：<%=v.examTime%>分钟</p>\r\n\r\n                <div class="btn btn-primary btn-startexam" data-uuid="<%=v.examUUID%>">答题</div>\r\n            </div>\r\n        <% }) %>\r\n    <% } %>\r\n</script>';});

/**
 * 考试首页
 */

define('view/exam/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','Calendar','text!view/exam/tpl/index.html','view/app-header'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    var Calendar = require('Calendar');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/exam/tpl/index.html');
    var AppHeader = require('view/app-header');

    var View = Backbone.View.extend({
        el: 'body',
        events: {
            'tap .exam-menu > div,.exam-help': 'viewPage',
            'tap .btn-startexam': 'viewPaper'
        },
		viewPaper: function(e){
            var uuid = $(e.currentTarget).data('uuid');
            if(!uuid){
                return;
            }

			Backbone.history.navigate('exam-paper/'+uuid, { trigger: true });
		},
        viewPage: function (e) {
            var href = $(e.currentTarget).data('href');
            if (!href) {
                return;
            }

            Backbone.history.navigate(href, { trigger: true });
        },
        renderExamDay: function (date) {
            var day_first = date.substr(8, 1);
            var day_second = date.substr(9, 1);

            var day;

            if (day_first == 0) {
                day = new Number(day_second);
            } else {
                day = new Number(date.substr(8, 2));
            }

            console.log(day);

            var cur = new Number(this.$('.curDay').html());

            var str = '<div class="td_sign_1" >' + day + '</div>';
            
            if(cur > day){
                str = '<div class="td_sign_2" >' + day + '</div>';
            }
            
            this.$('.day' + day).html(str);
        },
        getData: function () {
            $.showLoading();
            businessDelegate.getExam(_.bind(function (data) {
                $.hideLoading();

                _.each(data.obj.examDateArr, _.bind(function (v) {
                    this.renderExamDay(v);
                }, this));

                var tpl = _.template(this.template)({ list: data.obj.list });
                $('.exam-list').html(tpl);

            }, this), _.bind(function (err) {
                $.hideLoading();
                $.jtoast(err);
            }, this))
        },
        backbutton: function () {
            Backbone.history.navigate(this.history, { trigger: true });
        },
        initialize: function () {
            this.history = window._pageHistory ? window._pageHistory : "work/index";
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '在线测评'
            });

            this.header.setRightBtn('<span class="text exam-help" data-href="exam-help">考试须知</span>');

            this.$el.empty().append(this.header.$el).append(template);

            this.template = this.$('#tpl').html();

            Calendar.Init(null);

            var i = this.$('.curDay').index('.curMonth');
            $('.curMonth:lt('+i+')').css('color', '#aaa');
            
            this.getData();
        },
        render: function () {
            return this;
        }
    });

    return View;
});


define('text!view/exam/tpl/help.html',[],function () { return '\r\n<div class="common-content pd10 ">\r\n    <!--<div class="weui-pull-to-refresh-layer">\r\n        <div class="pull-to-refresh-arrow"></div>\r\n        <div class="pull-to-refresh-preloader"></div> \r\n        <div class="down">下拉刷新</div>\r\n        <div class="up">释放刷新</div>\r\n        <div class="refresh">正在刷新...</div>\r\n    </div>-->\r\n    <div class="exam-info-content"></div>\r\n</div>';});

/**
 * 考试须知
 */

define('view/exam/help',['require','exports','module','jquery','underscore','backbone','utils','phonegaputil','business-delegate','text!view/exam/tpl/help.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/exam/tpl/help.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
		},
		getData: function(callback){
			$.showLoading();
			businessDelegate.getExamHelp(_.bind(function (data) {
				$.hideLoading();
				this.$content.html($.formatText(data.obj));
				callback();
			}, this), _.bind(function (err) {
				$.hideLoading();
				this.$content.html(this.errorHTML);
				$.jtoast(err);
				callback();
			}, this))
		},
		backbutton: function () {
            Backbone.history.navigate('exam-index/work/index', { trigger: true });
		},
		initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: false,
                title: '考试须知'
            });

            this.$el.empty().append(this.header.$el).append(template);

            this.$content = this.$('.exam-info-content');
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			// $('.common-content').pullToRefresh();
			// $('.common-content').on("pull-to-refresh", _.bind(function() {
			// 	  this.getData(function(){
			// 			$('.common-content').pullToRefreshDone();
			// 	  });
			// },this));
		},
		render: function () {
			this.getData($.noop);
			return this;
		}
	});

	return View;
});


define('text!view/exam/tpl/paper.html',[],function () { return '<div class="common-content paper-exam-wrapper paper-wrapper">\r\n    <div class="paper-header clearfix">\r\n        <div id="camera" class="pull-right"></div>\r\n        <div class="paper-info overhidden">\r\n            <h3 class="paper-timecount-title">倒计时：</h3>\r\n            <p class="paper-timecount">-</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="paper-content">\r\n\r\n    </div>\r\n\r\n    <div class="paper-control">\r\n        <div>\r\n            <div class="prev disable">\r\n                <i class="iconfont icon-zuojiantou"></i>\r\n            </div>\r\n        </div>\r\n        <div class="exam-index">\r\n            0/0\r\n        </div>\r\n        <div>\r\n            <div class="next disable">\r\n                <i class="iconfont icon-youjiantou"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="question-item-tpl" type="text/template">\r\n    <div class="paper-tag">\r\n        <% \r\n            var type;\r\n            if(q.questionType == 1){\r\n                type = \'单选题\';\r\n            }else if(q.questionType == 2){\r\n                type = \'多选题\';\r\n            }else if(q.questionType == 3){\r\n                type = \'判断题\';\r\n            }\r\n        %>\r\n\r\n        <%=type%>\r\n    </div>\r\n    <div class="paper-question">\r\n        <%=q.question%>\r\n    </div>\r\n    <% if(q.questionImgUrl){ %>\r\n    <div class="paper-image">\r\n        <img src="<%=q.questionImgUrl%>">\r\n    </div>\r\n    <% } %>\r\n    <div class="paper-items">\r\n        <ul>\r\n            <% \r\n                var answer = [];\r\n\r\n                if(q.put_answer && q.put_answer.length > 0){\r\n                    answer = q.put_answer;\r\n                }\r\n\r\n                _.each(q.option,function(v,i){\r\n                    if(!v){\r\n                        return;\r\n                    }\r\n\r\n                    var checked = \'\';\r\n                    if(_.find(answer, function(v){ return v == i; })){\r\n                        checked = \'checked\';\r\n                    }\r\n            %>\r\n                <li>\r\n                    <label for="paper-item<%=i%>">\r\n                        <% if(q.questionType == 2) { %>\r\n                            <div class="paper-item"><input <%=checked%> type="checkbox" class="blue-chk" id="paper-item<%=i%>" name="paper-item" value="<%=i%>"></div> \r\n                        <% }else{ %>\r\n                            <div class="paper-item"><input <%=checked%> type="radio" class="blue-chk" id="paper-item<%=i%>" name="paper-item" value="<%=i%>"></div> \r\n                        <% } %>\r\n                        <div class="overhidden"><%=i%>、<%=v%></div>\r\n                    </label>\r\n                </li>\r\n            <% }) %>\r\n        </ul>\r\n    </div>\r\n</script>';});


define('text!view/exam/tpl/result.html',[],function () { return '<%\r\n    var text = \'\';\r\n    if(examLevel == \'A\'){\r\n        text = \'你真棒！\';\r\n    }else if(examLevel == \'B\'){\r\n        text = \'再接再厉！\';\r\n    }else if(examLevel == \'C\'){\r\n        text = \'继续加油！\';\r\n    }else{\r\n        text = \'还需要再努力!\';\r\n    }\r\n%>\r\n\r\n<div class="common-content paper-result-content">\r\n    <div class="exam-result-wrapper">\r\n        <div class="exam-result-header">\r\n            <%=text%>\r\n        </div>\r\n\r\n        <div class="exam-result-content">\r\n            <p>等级：</p>\r\n\r\n            <div class="result-level">\r\n                <%=examLevel%>\r\n            </div>\r\n\r\n            <p style="margin-top: 40px;">考试成绩： <span class="font-orange"><%=gradeSum%>分</span></p>\r\n            <p>考试用时： <span class="font-orange"><%=timer%></span></p>\r\n        </div>\r\n    </div>\r\n</div>';});

/**
 * 考试成绩
 */
define('view/exam/result',['require','exports','module','jquery','underscore','backbone','text!view/exam/tpl/result.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/exam/tpl/result.html');
	var AppHeader = require('view/app-header');
    var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
            
		},
        backbutton: function(){
            this.host.backbutton();
        },
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false, 
                title: '考试结果'
            });

            this.data = options.data;
            this.host = options.host;

            this.$el.empty().append(this.header.$el);
            var tpl = _.template(template)(this.data);
            this.$el.append(tpl);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 考试试卷
 */

define('view/exam/paper',['require','exports','module','jquery','underscore','backbone','utils','phonegaputil','business-delegate','text!view/exam/tpl/paper.html','view/app-header','view/exam/result'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/exam/tpl/paper.html');
	var AppHeader = require('view/app-header');
	var ExamResult = require('view/exam/result');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .btn-back': 'backbutton',
			'change input[name=paper-item]': 'putAnswer',
			'tap .next': 'nextItem',
			'tap .prev': 'prevItem',
			'tap .btn-submit': 'submitPaper'
        },
		initCamera: function () {
			if (!window.cordova) {
				return;
			}

			var x = $(window).width() - 110;
            var rect = { x: x, y: 45, width: 100, height: 120 };

            cordova.plugins.camerapreview.startCamera(rect, "front", false, false, false);

			cordova.plugins.camerapreview.setOnPictureTakenHandler(_.bind(function (result) {
				console.log('======================CAMERA==========================');
				console.log(result);

				//删除裁剪图片
				if(phonegaputil.getDevicePlatform() == 'android'){
					phonegaputil.removeFileByCamerapreview(result[1]);
				}
				
				//上传图片
				this.imageUpload(result[0]);
			}, this));

			this.takePicture();
		},
		takePicture: function () {
			if (this.isSubmit) {
				return;
			}

			if (this.imageArr.length == this.imageLimit) {
				return;
			}

			var timer = this.imageTimer;
			if(this.imageArr.length == 0){
				timer = 8000;
			}

			this.timeout = setTimeout(function () {
				// alert('开始拍照咯');
				cordova.plugins.camerapreview.takePicture();
			}, timer);
		},
		imageUpload: function (file_path) {
			var imageURI = file_path;
			var uploadAction = businessDelegate.getUploadUrl();
			var dataParam = phonegaputil.getHeadAndBody({ bucketName: this.bucketName });
			var param = { b: JSON.stringify(dataParam) };

			//开始上传图片
			phonegaputil.uploadPhoto(imageURI, uploadAction, param, _.bind(function (entry) {
				//上传成功
				this.retryUploadCount = 0;
				var data = $.parseJSON(entry.response);

				if (data.code === 0) {
					//获取返回参数
					this.imageArr.push(data.obj.relativeUrl); //data.obj.url;data.obj.relativeUrl;

					//删除照片
					phonegaputil.removeFileByCamerapreview(file_path);

					//继续执行拍照
					this.takePicture();
				} else {
					console.log('上传失败');
				}
			}, this), _.bind(function (error) {
				this.retryUploadCount++;
				if (this.retryUploadCount > 10) {
					//上传图片结束
					this.retryUploadCount = 0;
					console.log('上传失败');
				} else {
					//重新上传
					this.imageUpload(file_path);
				}
			}, this), $.noop);
		},
        initPaper: function () {
			$.showLoading('正在获取试卷信息');
			businessDelegate.getExamPaper({
				examUUID: this.uuid
			}, _.bind(function (data) {
				$.hideLoading();
				this.exam = data.obj;
				this.examPaper = data.obj.papersContent;
				this.examPaperLength = this.examPaper.length;
				this.timer = this.exam.examTime * 60;
				// this.timer = 10;

				$.alert('考试即将开始，考试中我们将对您的面部进行摄像，请注意将您的面部对准手机前置摄像头', _.bind(function () {
					//试卷正式开始
					this.canBack = 1;
					//渲染题目
					this.renderItem();
					//开始倒计时
					this.startInterval();
					//启动摄像头
					this.initCamera();
				}, this));
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.alert(err, _.bind(function () {
					this.back();
				}, this));
			}, this), this.apiMode);
        },
		renderItem: function () {
			this.$('.prev').removeClass('disable');
			this.$('.next').removeClass('disable');

			if (this.examPaperIndex == 0) {
				$('.prev').addClass('disable');
			}

			if (this.examPaperIndex == this.examPaperLength - 1) {
				$('.next').addClass('disable');
			}

			var q = this.examPaper[this.examPaperIndex];

			var tpl = _.template(this.itemTemplate)({ q: q });
			this.$paperContent.html(tpl);

			this.$('.exam-index').html((this.examPaperIndex + 1) + '/' + this.examPaperLength);
			this.$paperContent.scrollTop(0);
		},
		startInterval: function () {
			var str = utils.formatTimeLengthSimple(this.timer);
			this.$('.paper-timecount').html(str);

			this.interval = setInterval(_.bind(this.intervalTimer, this), 1000);
		},
		reStartCounting: function () {
			this.interval = setInterval(_.bind(this.intervalTimer, this), 1000);
		},
		intervalTimer: function () {
			this.timer--;

			var str = utils.formatTimeLengthSimple(this.timer);
			this.$('.paper-timecount').html(str);

			//时间到
			if (this.timer === 0) {
				clearInterval(this.interval);

				//到时提交试卷
				$.alert('时间到，考试结束', _.bind(function () {
					var obj = this.getAnswerPaper();
					this.submitData(obj.answer_paper);
				}, this));
			}
		},
		//交卷
		submitPaper: function () {
			var obj = this.getAnswerPaper();
			console.log(obj);

			var msg = '您确认提交试卷吗？';
			if (obj.flag > 0) {
				msg = '您还有题目未完成，确认提交试卷吗？'
			}

			$.confirm(msg, _.bind(function () {
				this.submitData(obj.answer_paper);
			}, this), $.noop);
		},
		//提交数据到服务器
		submitData: function (answer_paper) {
			console.log('提交数据');

			//停止倒计时
			clearInterval(this.interval);
			this.canBack = 0;

			var json_str = JSON.stringify(answer_paper);
			var image_str = this.imageArr.join(',');

			console.log(json_str);

			$.showLoading('正在提交试卷');
			businessDelegate.submitExamPaper({
				examUUID: this.uuid,
				answer: json_str,
				examingImages: image_str
			}, _.bind(function (data) {
				//success
				$.hideLoading();
				this.canBack = 1;
				this.isSubmit = 1;

				var result = data.obj;

				var str = utils.formatTimeLengthSimple(this.exam.examTime * 60 - this.timer);
				result.timer = str;
				this.showResult(result);
			}, this), _.bind(function (err) {
				//error
				$.hideLoading();
				$.jtoast(err);

				this.canBack = 1;
				this.reStartCounting();
			}, this), this.apiMode);
		},
		//展示结果
		showResult: function (result) {
			console.log(result);
			//关闭摄像头
			if (window.cordova) {
				cordova.plugins.camerapreview.stopCamera();
			}

			var view = new ExamResult({
				data: result,
				host: this
			});
			view.show();
		},
		//获取答卷
		getAnswerPaper: function () {
			var answer_paper = {};
			var flag = 0;
			_.each(this.examPaper, function (v) {
				if (!v.put_answer) {
					v.put_answer = [];
					flag++;
				}
				answer_paper[v.uuid] = v.put_answer.join(',');
			});

			return {
				answer_paper: answer_paper,
				flag: flag
			}
		},
		putAnswer: function () {
			var answer = _.pluck(this.$('input[name=paper-item]:checked'), 'value');
			this.examPaper[this.examPaperIndex].put_answer = answer;
		},
		prevItem: function (e) {
			var $e = $(e.currentTarget);
			if ($e.hasClass("disable")) {
				return;
			}

			console.log('prev');
			if (this.examPaperIndex == 0) {
				return;
			}

			this.examPaperIndex--;
			this.renderItem();
		},
		nextItem: function (e) {
			var $e = $(e.currentTarget);
			if ($e.hasClass("disable")) {
				return;
			}

			console.log('next');
			if (this.examPaperIndex == this.examPaperLength - 1) {
				return;
			}

			this.examPaperIndex++;
			this.renderItem();
		},
		back: function () {
			Backbone.history.navigate('exam-index', { trigger: true });
		},
		backbutton: function () {
			if (this.isSubmit) {
				Backbone.history.navigate('exam-index', { trigger: true });
				return;
			}

			if (this.canBack) {
				$.closeModal();
				$.confirm('每场考试只有2次应试机会<br>您确认要退出考试吗', '考试未完成', function () {
					Backbone.history.navigate('exam-index', { trigger: true });
				}, $.noop);
			}
		},
		initialize: function (options) {
			this.uuid = options.uuid;
            this.header = new AppHeader({
                host: this,
                main: false,
                title: '考试'
            });
			this.header.setRightBtn('<span class="text btn-submit">提交试卷</span>');

            this.$el.empty().append(this.header.$el).append(template);

			this.$paperContent = this.$('.paper-content');
			this.itemTemplate = $('#question-item-tpl').html();

			this.exam = null; //考试信息
			this.examPaper = null; //试卷信息
			this.examPaperLength = 0;	//题目总数
			this.examPaperIndex = 0;	//当前题目

			this.canBack = 0;
			this.timer = 0;	//考试时长
			this.isSubmit = 0; //是否已提交

			this.apiMode = '';	//调试模式
			// this.apiMode = 'local';

			this.imageArr = []; //拍摄图片
			this.imageLimit = 9;	//拍摄上限
			this.imageTimer = 60000;	//拍照间隔
			this.bucketName = 'exam'; //照片参数
			this.retryUploadCount = 0;
		},
		render: function () {
            this.initPaper();
			return this;
		},
		destroy: function () {
			//取消计时器
			clearInterval(this.interval);
			clearTimeout(this.timeout);

			//关闭摄像头
			if (window.cordova) {
				cordova.plugins.camerapreview.stopCamera();
			}
		}
	});

	return View;
});


define('text!view/exam/tpl/record.html',[],function () { return '<div class="common-content overhidden bg-gray">\r\n    <div class="refresh_inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n        <div class="list-info-content">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无考试记录</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(data.rows,function(v){\r\n            var scoreClass = \'\';\r\n            if( v.examResult < 60 ){\r\n                scoreClass = \'failed\';\r\n            }\r\n\r\n            var str = \'\';\r\n            switch(v.states){\r\n                case 0:\r\n                    str = \'<span class="label label-danger">未参与考试</span>\';\r\n                break;\r\n                case 1:\r\n                    str = \'<span class="label label-danger">未提交试卷</span>\';\r\n                break;\r\n                case 2:\r\n                    str = \'<span class="label label-danger">已用完考试机会</span>\';\r\n                break;\r\n                case 3:\r\n                    str = \'<span class="label label-success">已完成</span>\';\r\n                break;\r\n            }\r\n    %>\r\n        <div class="exam-record-box clearfix">\r\n            <div class="score <%=scoreClass%>">\r\n                <div class="icon-score">\r\n                    <div class="icon-title">score</div>\r\n                    <%=v.examResult%>\r\n                </div>\r\n            </div>\r\n            <div class="info">\r\n                <h3><%=v.examTitle%></h3>\r\n                <!--p class="time"><%=v.examStartTime%> 至 <%=v.examEndtime%></p-->\r\n                \r\n                <p class="time">开始时间：<%=v.examStartTime%></p>\r\n                <p class="time">结束时间：<%=v.examEndtime%></p>\r\n\r\n                <% if(v.userStartExamTime){ %>\r\n                    <p class="time">参与考试时间：<%=v.userStartExamTime%></p>\r\n                <% } %>\r\n                \r\n                <p class="rank">本次考试排名：<span><%=v.ranking%></span></p>\r\n                <p><%=str%></p>\r\n            </div>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>';});

/**
 * 考试记录
 */
define('view/exam/record',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/exam/tpl/record.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/exam/tpl/record.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .btn-prev,.btn-next': 'viewPage'
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
        getList: function (page, callback) {
            if (!this.isPullRefresh) {
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getExamRecord({
				page: page,
				rows: this.rows
			}, _.bind(function (data) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				var tpl = _.template(this.listTemplate)({ data: data.obj });
				this.$content.html(tpl);

				this.$wrapper.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$content.html(this.errorHTML);

				callback();
			}, this));
        },
		backbutton: function () {
            Backbone.history.navigate('exam-index/work/index', { trigger: true });
		},
		initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '考试成绩'
            });

            this.$el.empty().append(this.header.$el).append(template);

            this.listTemplate = this.$('#listTpl').html();
            this.$content = this.$('.list-info-content');
            this.$wrapper = this.$('.common-content > div');

			this.rows = 10; //每页显示数目
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.isPullRefresh = 0;
			//下拉刷新
            this.$wrapper.pullToRefresh();
            this.$wrapper.on("pull-to-refresh", _.bind(function () {
				this.isPullRefresh = 1;
				this.getList(1, _.bind(function () {
					this.$wrapper.pullToRefreshDone();
				}, this));
			}, this));

            this.getList(1, $.noop);
		},
		render: function () {
			
			return this;
		}
	});

	return View;
});


define('text!view/exam/tpl/fault.html',[],function () { return '<div class="common-content paper-wrapper">\r\n    <div class="paper-content">\r\n\r\n    </div>\r\n\r\n    <div class="paper-control">\r\n        <div>\r\n            <div class="prev disable">\r\n                <i class="iconfont icon-zuojiantou"></i>\r\n            </div>\r\n        </div>\r\n        <div class="exam-index">\r\n            0/0\r\n        </div>\r\n        <div>\r\n            <div class="next disable">\r\n                <i class="iconfont icon-youjiantou"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="question-item-tpl" type="text/template">\r\n    <div class="paper-tag">\r\n        <% \r\n            var type;\r\n            if(q.questionType == 1){\r\n                type = \'单选题\';\r\n            }else if(q.questionType == 2){\r\n                type = \'多选题\';\r\n            }else if(q.questionType == 3){\r\n                type = \'判断题\';\r\n            }\r\n        %>\r\n\r\n        <%=type%>\r\n    </div>\r\n    <div class="paper-question">\r\n        <%=q.question%>\r\n    </div>\r\n    <% if(q.questionImgUrl){ %>\r\n    <div class="paper-image">\r\n        <img src="<%=q.questionImgUrl%>">\r\n    </div>\r\n    <% } %>\r\n    <div class="paper-items">\r\n        <ul>\r\n            <% \r\n                var answer = [];\r\n\r\n                if(q.put_answer && q.put_answer.length > 0){\r\n                    answer = q.put_answer;\r\n                }\r\n\r\n                _.each(q.option,function(v,i){\r\n                    if(!v){\r\n                        return;\r\n                    }\r\n                    \r\n                    var checked = \'\';\r\n                    if(_.find(answer, function(v){ return v == i; })){\r\n                        checked = \'checked\';\r\n                    }\r\n            %>\r\n                <li>\r\n                    <label for="paper-item<%=i%>">\r\n                        <% if(q.questionType == 2) { %>\r\n                            <div class="paper-item"><input <%=checked%> type="checkbox" class="blue-chk" disabled id="paper-item<%=i%>" name="paper-item" value="<%=i%>"></div> \r\n                        <% }else{ %>\r\n                            <div class="paper-item"><input <%=checked%> type="radio" class="blue-chk" disabled id="paper-item<%=i%>" name="paper-item" value="<%=i%>"></div> \r\n                        <% } %>\r\n                        <div class="overhidden"><%=i%>、<%=v%></div>\r\n                    </label>\r\n                </li>\r\n            <% }) %>\r\n        </ul>\r\n    </div>\r\n    <div class="paper-items-answer">\r\n        <p>答案：&nbsp;<%=q.answer%></p>\r\n        <% if(typeof q.explains != undefined && q.explains){ %>\r\n            <p><%=q.explains%></p>\r\n        <% } %>\r\n    </div>\r\n</script>';});

/**
 * 我的错题
 */
define('view/exam/fault',['require','exports','module','jquery','underscore','backbone','utils','phonegaputil','business-delegate','text!view/exam/tpl/fault.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/exam/tpl/fault.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .next': 'nextItem',
			'tap .prev': 'prevItem'
		},
        initPaper: function () {
			$.showLoading('正在获取错题集');
			businessDelegate.getExamFault(_.bind(function (data) {
				$.hideLoading();

				this.examPaper = data.obj;
				this.examPaperLength = this.examPaper.length;

				if(this.examPaperLength == 0){
					this.$paperContent.html(this.nullHTML);
					return;	
				}

                //渲染题目
                this.renderItem();
			}, this), _.bind(function (err) {
				$.hideLoading();
                $.jtoast(err);
                this.$paperContent.html(this.errorHTML);
			}, this));
        },
		renderItem: function () {
			this.$('.prev').removeClass('disable');
			this.$('.next').removeClass('disable');

			if (this.examPaperIndex == 0) {
				$('.prev').addClass('disable');
			}

			if (this.examPaperIndex == this.examPaperLength - 1) {
				$('.next').addClass('disable');
			}

			var q = this.examPaper[this.examPaperIndex];

			var tpl = _.template(this.itemTemplate)({ q: q });
			this.$paperContent.html(tpl);

			this.$('.exam-index').html((this.examPaperIndex + 1) + '/' + this.examPaperLength);
			this.$paperContent.scrollTop(0);
		},
		prevItem: function (e) {
			var $e = $(e.currentTarget);
			if ($e.hasClass("disable")) {
				return;
			}

			console.log('prev');
			if (this.examPaperIndex == 0) {
				return;
			}

			this.examPaperIndex--;
			this.renderItem();
		},
		nextItem: function (e) {
			var $e = $(e.currentTarget);
			if ($e.hasClass("disable")) {
				return;
			}

			console.log('next');
			if (this.examPaperIndex == this.examPaperLength - 1) {
				return;
			}

			this.examPaperIndex++;
			this.renderItem();
		},
		backbutton: function () {
			$.closeModal();
			$.confirm('确认退出错题集吗？', function () {
				Backbone.history.navigate('exam-index/work/index', { trigger: true });
			}, $.noop);
		},
		initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: false,
                title: '错题集'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.$paperContent = this.$('.paper-content');
			this.itemTemplate = $('#question-item-tpl').html();
            
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';
			this.nullHTML = '<div class="warning-panel">暂无错题数据</div>';
            
			this.examPaper = []; //试卷信息
			this.examPaperLength = 0;	//题目总数
			this.examPaperIndex = 0;	//当前题目
		},
		render: function () {
            this.initPaper();
			return this;
		}
	});

	return View;
});


define('text!view/exam/tpl/banklist.html',[],function () { return '<div class="common-content overhidden bg-gray">\r\n    <div class="refresh_inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n        <div class="list-info-content exam-bank-wrapper bg-white"></div>\r\n\t</div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(list.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无题库信息</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(list,function(v){\r\n    %>\r\n        <div class="exam-bank-box" data-uuid="<%=v.uuid%>">\r\n           <div class="title"><%=v.name%></div>\r\n           <div class="questionsCount">共 <%=v.questionsCount%> 题</div>\r\n           <div class="arrow"><i class="iconfont icon-qianjin"></i></div>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n</script>';});

/**
 * 原始题库列表
 */
define('view/exam/banklist',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/exam/tpl/banklist.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/exam/tpl/banklist.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .exam-bank-box': 'viewBank'
		},
        viewBank: function (e) {
            var $e = $(e.currentTarget);
            var uuid = $e.data('uuid');
            Backbone.history.navigate('exam-bank/' + uuid, { trigger: true });
        },
        getList: function (callback) {
            if (!this.isPullRefresh) {
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getExamBankList(_.bind(function (data) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				var tpl = _.template(this.listTemplate)({ list: data.obj });
				this.$content.html(tpl);

				this.$wrapper.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$content.html(this.errorHTML);

				callback();
			}, this));
        },
		backbutton: function () {
            Backbone.history.navigate('exam-index/work/index', { trigger: true });
		},
		initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '原题库'
            });

            this.$el.empty().append(this.header.$el).append(template);

            this.listTemplate = this.$('#listTpl').html();
            this.$content = this.$('.list-info-content');
            this.$wrapper = this.$('.common-content > div');

			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';
			this.isPullRefresh = 0;
			
			//下拉刷新
            this.$wrapper.pullToRefresh();
            this.$wrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
				this.getList(_.bind(function () {
					this.$wrapper.pullToRefreshDone();
				}, this));
			}, this));

            this.getList($.noop);
		},
		render: function () {
			
			return this;
		}
	});

	return View;
});



define('text!view/exam/tpl/bank.html',[],function () { return '<div class="common-content paper-wrapper">\r\n    <div class="paper-content">\r\n\r\n    </div>\r\n\r\n    <div class="paper-control">\r\n        <div>\r\n            <div class="prev disable">\r\n                <i class="iconfont icon-zuojiantou"></i>\r\n            </div>\r\n        </div>\r\n        <div class="exam-index">\r\n            0/0\r\n        </div>\r\n        <div>\r\n            <div class="next disable">\r\n                <i class="iconfont icon-youjiantou"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="question-item-tpl" type="text/template">\r\n    <div class="paper-tag">\r\n        <% \r\n            var type;\r\n            if(q.questionType == 1){\r\n                type = \'单选题\';\r\n            }else if(q.questionType == 2){\r\n                type = \'多选题\';\r\n            }else if(q.questionType == 3){\r\n                type = \'判断题\';\r\n            }\r\n        %>\r\n\r\n        <%=type%>\r\n    </div>\r\n    <div class="paper-question">\r\n        <%=q.question%>\r\n    </div>\r\n    <% if(q.questionImgUrl){ %>\r\n    <div class="paper-image">\r\n        <img src="<%=q.questionImgUrl%>">\r\n    </div>\r\n    <% } %>\r\n    <div class="paper-items">\r\n        <ul>\r\n            <%                 \r\n                var input_state = \'\';\r\n\r\n                if(q.view_answer){\r\n                    input_state = \'disabled\';\r\n                }\r\n\r\n                var correct_answer = q.answer.split(\',\');\r\n                \r\n                var answer = [];\r\n                if(q.put_answer && q.put_answer.length > 0){\r\n                    answer = q.put_answer;\r\n                }\r\n\r\n                _.each(q.option,function(v,i){\r\n                    if(!v){\r\n                        return;\r\n                    }\r\n                    \r\n                    var checked = \'\';\r\n                    if(_.find(answer, function(v){ return v == i; })){\r\n                        checked = \'checked\';\r\n                    }\r\n\r\n                    var state_class = \'\';\r\n                    if(q.view_answer){\r\n                        var flag = ifValueIn(i, answer, correct_answer);\r\n                        if(flag == -1){\r\n                            state_class = \'\';\r\n                        }else{\r\n                            if(flag){\r\n                                state_class = \'success\';\r\n                            }else{\r\n                                state_class = \'error\';\r\n                            }\r\n                        }\r\n                    }\r\n            %>\r\n                <li class="<%=state_class%>">\r\n                    <label for="paper-item<%=i%>">\r\n                        <% if(q.questionType == 2) { %>\r\n                            <div class="paper-item"><input <%=checked%> <%=input_state%> type="checkbox" class="blue-chk" id="paper-item<%=i%>" name="paper-item" value="<%=i%>"></div> \r\n                        <% }else{ %>\r\n                            <div class="paper-item"><input <%=checked%> <%=input_state%> type="radio" class="blue-chk" id="paper-item<%=i%>" name="paper-item" value="<%=i%>"></div> \r\n                        <% } %>\r\n                        <div class="overhidden"><%=i%>、<%=v%></div>\r\n                    </label>\r\n                </li>\r\n            <% }) %>\r\n        </ul>\r\n    </div>\r\n    <%\r\n        var style1 = \'style="display:none"\';\r\n        var style2 = \'style="display:none"\';\r\n\r\n        if(q.view_answer){\r\n            style2 = \'\';\r\n        }else{\r\n            style1 = \'\';\r\n        }\r\n    %>\r\n    <div class="paper-items-control" <%=style1%>>\r\n        <button class="btn btn-primary">查看答案</button>\r\n    </div>\r\n    <div class="paper-items-answer" <%=style2%>>\r\n        <p>答案：&nbsp;<%=q.answer%></p>\r\n        <% if(typeof q.explains != undefined && q.explains){ %>\r\n            <p><%=q.explains%></p>\r\n        <% } %>\r\n    </div>\r\n</script>';});

/**
 * 原始题库
 */
define('view/exam/bank',['require','exports','module','jquery','underscore','backbone','utils','phonegaputil','business-delegate','text!view/exam/tpl/bank.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/exam/tpl/bank.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
            'tap .paper-items-control>.btn': 'validAnswer',
			'tap .next': 'nextItem',
			'tap .prev': 'prevItem'
		},
        initPaper: function () {
			$.showLoading('正在获取题库信息');
			businessDelegate.getExamBankDetail({
				typeUuid: this.uuid
            },_.bind(function (data) {
				$.hideLoading();

				this.header.setTitle(data.obj.typeName);

				this.examPaper = data.obj.question;
				this.examPaperLength = this.examPaper.length;

				if(this.examPaperLength == 0){
					this.$paperContent.html(this.nullHTML);
					return;
				}

                //渲染题目
                this.renderItem();
			}, this), _.bind(function (err) {
				$.hideLoading();
                $.jtoast(err);
                this.$paperContent.html(this.errorHTML);
			}, this));
        },
        //比对答案
        validAnswer: function(){
            console.log('验证答案');
            //保存答案
            var answer = _.pluck(this.$('input[name=paper-item]:checked'), 'value');
			this.examPaper[this.examPaperIndex].put_answer = answer;
			this.examPaper[this.examPaperIndex].view_answer = true;

			this.renderItem();
        },
		//值，输入答案，正确答案
		ifValueIn: function(value, arr1, arr2){
			var flag1 = _.find(arr1, function(v){ return v == value; });
			var flag2 = _.find(arr2, function(v){ return v == value; });

			if(flag1 && flag2){
				return true;
			}

			// if(flag1 && !flag2){
			// 	return false;
			// }

			if(!flag1 && flag2){
				return false;
			}

			return -1;
		},
		renderItem: function () {
			this.$('.prev').removeClass('disable');
			this.$('.next').removeClass('disable');

			if (this.examPaperIndex == 0) {
				$('.prev').addClass('disable');
			}

			if (this.examPaperIndex == this.examPaperLength - 1) {
				$('.next').addClass('disable');
			}

			var q = this.examPaper[this.examPaperIndex];

			if(!q.view_answer){
				this.$('.prev').addClass('disable');
				this.$('.next').addClass('disable');
			}

			var tpl = _.template(this.itemTemplate)({ q: q, ifValueIn: this.ifValueIn });
			this.$paperContent.html(tpl);

			this.$('.exam-index').html((this.examPaperIndex + 1) + '/' + this.examPaperLength);
			this.$paperContent.scrollTop(0);
		},
		prevItem: function (e) {
			var $e = $(e.currentTarget);
			if ($e.hasClass("disable")) {
				return;
			}

			console.log('prev');
			if (this.examPaperIndex == 0) {
				return;
			}

			this.examPaperIndex--;

            //已填写过不展示可回答问题
			this.renderItem();
		},
		nextItem: function (e) {
			var $e = $(e.currentTarget);
			if ($e.hasClass("disable")) {
				return;
			}

			console.log('next');
			if (this.examPaperIndex == this.examPaperLength - 1) {
				return;
			}

			this.examPaperIndex++;
            
            //已填写过不展示可回答问题
			this.renderItem();
		},
		backbutton: function (options) {
			$.closeModal();
			$.confirm('确认退出题库练习吗？', function () {
				Backbone.history.navigate('exam-banklist', { trigger: true });
			}, $.noop);
		},
		initialize: function (options) {
			this.uuid = options.uuid;
            this.header = new AppHeader({
                host: this,
                main: false,
                title: ''
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.$paperContent = this.$('.paper-content');
			this.itemTemplate = $('#question-item-tpl').html();
            
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';
			this.nullHTML = '<div class="warning-panel">暂无题库数据</div>';
            
			this.examPaper = [];  //试卷信息
			this.examPaperLength = 0;	//题目总数
			this.examPaperIndex = 0;	//当前题目
		},
		render: function () {
            this.initPaper();
			return this;
		}
	});

	return View;
});


define('text!view/mobile_repository/tpl/index.html',[],function () { return '<div class="common-content bg-gray mobile_repository_common_content" id="mobileRepositoryIndex">\r\n    <div class="content">\r\n        \r\n    </div>\r\n    <div class="menu weui-row">\r\n        <div class="weui-col-33" data-href="mobile-repository-my/question">\r\n            <div>我的提问</div>\r\n        </div>\r\n        <div class="weui-col-33" data-href="mobile-repository-my/answer">\r\n            <div>我的回答</div>\r\n        </div>\r\n        <div class="weui-col-33" data-href="mobile-repository-question">\r\n            <div>提一个</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="sort_mask sort_mask_rep" id="mobileRepositorySort">\r\n    <ul class="sort_panel">\r\n        <!--<li class="active">由高到低</li>\r\n            <li>由低到高</li>-->\r\n    </ul>\r\n</div>\r\n\r\n<script id="sortTimeTpl" type="text/template">\r\n    <li class="sort_time_btn" data-type="1" data-order="2">由近到远</li>\r\n    <li class="sort_time_btn" data-type="1" data-order="1">由远到近</li>\r\n</script>\r\n\r\n<script id="typeTpl" type="text/template">\r\n    <li class="sort_type_btn" data-uuid="">全部</li>\r\n    <% _.each(list, function(v){ %>\r\n        <li  class="sort_type_btn" data-uuid="<%=v.uuid%>"><%=v.title%></li>\r\n    <% }) %>\r\n</script>\r\n\r\n<script id="sortViewTpl" type="text/template">\r\n    <li class="sort_view_btn" data-type="2" data-order="2">由高到低</li>\r\n    <li class="sort_view_btn" data-type="2" data-order="1">由低到高</li>\r\n</script>';});


define('text!view/mobile_repository/tpl/_base-list.html',[],function () { return '<div class="header common_header_for_read_knowledge bg-white" id="mobileRepositoryBaseHeader">\r\n    <div class="list_ctrl_bar clearfix">\r\n        <div class="pull-right show_ctrl_btn">\r\n            <i class="iconfont icon-shaixuan"></i>筛选\r\n            <i class="iconfont icon-sjiantou02 double-arrow-right"></i>\r\n            <i class="iconfont icon-sjiantou03 double-arrow-down hide"></i>\r\n        </div>\r\n        <div class="overhidden">\r\n            <div class="app_search clearfix">\r\n                <div class="pull-right">\r\n                    <div class="btn btn-primary btn-search">查询</div>\r\n                </div>\r\n                <div class="overhidden">\r\n                    <i class="iconfont icon-sousuo"></i>\r\n                    <input type="text" class="form-control input-search" placeholder="请输入关键字搜索">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="list_ctrl_btn weui-row base_list_ctrl_btn">\r\n        <div class="weui-col-33" data-type="time">\r\n            按时间&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n            <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n        </div>\r\n        <div class="weui-col-33" data-type="type">\r\n            按类别&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n            <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n        </div>\r\n        <div class="weui-col-33" data-type="view">\r\n            回答数&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n            <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="nav weui-row bg-white">\r\n    <!-- <div class="weui-col-50 active">\r\n        <div>基础知识</div>\r\n    </div>\r\n    <div class="weui-col-50">\r\n        <div>投诉案例</div>\r\n    </div> -->\r\n</div>\r\n\r\n<div class="wrapper" id="mobileRepositoryBaseWrapper">\r\n    <div class="inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="list-warning">\r\n            搜索结果如下，点此查看全部\r\n        </div>\r\n\r\n        <div class="repository_wrapper">\r\n            <!--<div class="base_box">\r\n                <div class="base_title">\r\n                    <h3>\r\n                        用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？\r\n                    </h3>\r\n                </div>\r\n                <div class="base_img">\r\n                    <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                    <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                </div>\r\n                <div class="base_info">\r\n                    类别：热门（4G、宽带）\r\n                    <span class="font-black">|</span> \r\n                    2016-08-08 11:11\r\n                </div>\r\n                <div class="clearfix base_ctrl">\r\n                    <div class="pull-left author">\r\n                        <div class="pull-left img">\r\n                            <img src="app_img/noavatar.png">\r\n                        </div>\r\n                        <div class="pull-left">\r\n                            了看接口接口技术\r\n                        </div>\r\n                    </div>\r\n                    <div class="pull-right answer">\r\n                        1人回答\r\n                        <span class="font-black">|</span> \r\n                        <span class="font-blue"><i class="iconfont icon-biji"></i> 回答</span>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n    %>\r\n\r\n        <div class="base_box" data-uuid="<%=v.uuid%>">\r\n            <div class="base_title">\r\n                <h3>\r\n                    <%=v.queDesc%>\r\n                </h3>\r\n            </div>\r\n\r\n            <% \r\n                var arr = JSON.parse(v.queImgJson);\r\n                if(arr.length > 0){ \r\n            %>\r\n                <div class="base_img">\r\n                    <% _.each(arr, function(src, i){ %>\r\n                        <% \r\n                            if(i < 3){ \r\n                               \r\n                        %>\r\n                            <div class="img" style="background: url(<%=src%>) no-repeat center center/cover"></div>\r\n                            <!--<img src="<%=src%>" style="width: 80px !important;">-->\r\n                        <% } %>\r\n                    <% }); %>\r\n                </div>\r\n            <% } %>\r\n\r\n            <div class="base_info">\r\n                类别：<%=v.queTypeUuid%>\r\n                &nbsp;<span class="font-black">|</span>&nbsp;\r\n                <%=v.createTimeStr.substr(0, 16)%>\r\n            </div>\r\n            <div class="clearfix base_ctrl">\r\n                <div class="pull-left author">\r\n                    <div class="pull-left img">\r\n                        <% if(v.userHeadImage){ %>\r\n                            <img src="<%=v.userHeadImage%>">\r\n                        <% }else{ %>\r\n                            <img src="app_img/noavatar.png">\r\n                        <% } %>\r\n                        \r\n                    </div>\r\n                    <div class="pull-left">\r\n                        <%=v.userName%>\r\n                    </div>\r\n                </div>\r\n                <div class="pull-right answer">\r\n                    <%=v.replayCount%>人回答\r\n                    <% if(!v.queStatus){ %>\r\n                        &nbsp;<span class="font-black">|</span>&nbsp;\r\n                        <span class="font-blue"><i class="iconfont icon-biji"></i> 回答</span>\r\n                    <% } %>\r\n                </div>\r\n            </div>\r\n        </div>\r\n   \r\n    <%\r\n        });\r\n    %>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>';});

/**
 * 基础知识列表
 */

define('view/mobile_repository/base-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/mobile_repository/tpl/_base-list.html'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/mobile_repository/tpl/_base-list.html');

	var View = Backbone.View.extend({
		el: '.content',
        events: {
			// 'tap #mobileRepositoryBaseHeader .sort_type_btn': 'searchByType',
			// 'tap #mobileRepositoryBaseHeader .sort_time_btn': 'sortByTime',
			// 'tap #mobileRepositoryBaseHeader .sort_view_btn': 'sortByView',
			'tap #mobileRepositoryBaseHeader .btn-search': 'searchByKeyword',
            'tap #mobileRepositoryBaseWrapper .list-warning': 'initList',
            'tap #mobileRepositoryBaseWrapper .btn-prev,#mobileRepositoryBaseWrapper .btn-next': 'viewPage'
		},
		sortByTime: function(e){
			var $e = $(e.currentTarget);
			this.sort_type = $e.data('type');
			this.sort_order = $e.data('order');

			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(0)');
			this.host.hideSortPanel($panel);
		},
		sortByView: function(e){
			var $e = $(e.currentTarget);
			this.sort_type = $e.data('type');
			this.sort_order = $e.data('order');

			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(2)');
			this.host.hideSortPanel($panel);
		},
		searchByType: function(e){
			var uuid = $(e.currentTarget).data('uuid');
			if(!uuid){
				this.initList();
				return;
			}
			
			this.search_type = uuid;
			
			this.$warning.show();
			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(1)');
			this.host.hideSortPanel($panel);
		},
		searchByKeyword: function () {
			if(!this.data){
				return;
			}

			if (this.$('.sort_mask').hasClass('active') || this.$('.list_ctrl_btn').hasClass('active')) {
				this.host.toggleCtrlBtn();
			}

			this.search_keyword = '';
			var keyword = $.trim(this.$input.val());
			if (!keyword) {
				return;
			}

			this.search_keyword = keyword;

			this.$warning.show();
			this.getList(1, $.noop);
		},
		initList: function () {
			if (this.$('.sort_mask').hasClass('active') || this.$('.list_ctrl_btn').hasClass('active')) {
				this.host.toggleCtrlBtn();
			}

			this.$warning.hide();
			this.$input.val('');

			this.search_keyword = '';	//搜索关键字
			this.search_type = '';
			this.sort_order = '';
			this.sort_type = '';

			this.getList(1, $.noop);
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
		getList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getKnowledgeList({
				page: this.current_page,
				rows: this.rows,
				queDesc: this.search_keyword,
				queTypeUuid: this.search_type,
				maxWidth: 120,
				sort: this.sort_type,
				order: this.sort_order
			}, _.bind(function (data) {
				this.data = data;

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				var tpl = _.template(this.listTemplate)({ data: data.obj.queList });
				this.$listContent.html(tpl);

				//获取类型
				this.host.typeArr = data.obj.queTypeList;

				this.$listWrapper.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				callback();
			}, this));
		},
		initialize: function (options) {
			this.host = options.host;
            this.$el.empty().append(template);

			this.listTemplate = this.$('#listTpl').html();

            this.$listWrapper = this.$('.wrapper > .inner');
			this.$listContent = this.$('.repository_wrapper');
			this.listTemplate = this.$('#listTpl').html();
			this.$warning = this.$('.list-warning');
			this.$input = this.$('.input-search');

			this.data = null;	//当前内容
			this.current_page = 1;	//当前页
			this.rows = 30; //每页显示数目
			this.search_keyword = ''; //搜索关键字
			this.search_type = '';	//搜索类型uuid
			this.sort_type = ''; 	//按排序类别
			this.sort_order = '';	//排序正负

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';
			
			//类型数据
			this.host.typeArr = [];

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/mobile_repository/tpl/_example-list.html',[],function () { return '<div class="header common_header_for_read_knowledge bg-white" id="mobileRepositoryExampleHeader">\r\n    <div class="list_ctrl_bar pd10 clearfix">\r\n        <div class="pull-right show_ctrl_btn">\r\n            <i class="iconfont icon-shaixuan"></i>筛选\r\n            <i class="iconfont icon-sjiantou02 double-arrow-right"></i>\r\n            <i class="iconfont icon-sjiantou03 double-arrow-down hide"></i>\r\n        </div>\r\n        <div class="overhidden">\r\n            <div class="app_search clearfix">\r\n                <div class="pull-right">\r\n                    <div class="btn btn-primary btn-search">查询</div>\r\n                </div>\r\n                <div class="overhidden">\r\n                    <i class="iconfont icon-sousuo"></i>\r\n                    <input type="text" class="form-control input-search" placeholder="请输入关键字搜索">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="list_ctrl_btn weui-row base_list_ctrl_btn">\r\n        <div class="weui-col-33" data-type="time">\r\n            按时间&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n            <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n        </div>\r\n        <div class="weui-col-33" data-type="type">\r\n            按类别&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n            <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n        </div>\r\n        <div class="weui-col-33" data-type="view">\r\n            评论数&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n            <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="nav weui-row bg-white">\r\n    <!-- <div class="weui-col-50">\r\n        基础知识\r\n    </div>\r\n    <div class="weui-col-50 active">\r\n        投诉案例\r\n    </div> -->\r\n</div>\r\n\r\n<div class="wrapper" id="mobileRepositoryExampleWrapper">\r\n    <div class="inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="list-warning">\r\n            搜索结果如下，点此查看全部\r\n        </div>\r\n\r\n        <div class="repository_wrapper">\r\n            <div class="example_box" data-uuid="<%=v.uuid%>">\r\n                <h3>最新案例最新案例</h3>\r\n                <p>案例类别：热门</p>\r\n                <p>时间：2017-02-13</p>\r\n                <i class="iconfont icon-qianjin"></i>\r\n            </div>\r\n            <div class="example_box" data-uuid="<%=v.uuid%>">\r\n                <h3>最新案例最新案例</h3>\r\n                <p>案例类别：热门</p>\r\n                <p>时间：2017-02-13</p>\r\n                <i class="iconfont icon-qianjin"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n    %>\r\n        <div class="example_box" data-uuid="<%=v.uuid%>">\r\n            <h3><%=v.title%></h3>\r\n            <p>案例类别：<%=v.typeName%></p>\r\n            <p>时间：<%=v.complaintsTime.substr(0, 16)%></p>\r\n            <i class="iconfont icon-qianjin"></i>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>';});

/**
 * 基础知识列表
 */

define('view/mobile_repository/example-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/mobile_repository/tpl/_example-list.html'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/mobile_repository/tpl/_example-list.html');

	var View = Backbone.View.extend({
		el: '.content',
        events: {
            // 'tap #mobileRepositoryExampleHeader .sort_type_btn': 'searchByType',
			// 'tap #mobileRepositoryExampleHeader .sort_time_btn': 'sortByTime',
			// 'tap #mobileRepositoryExampleHeader .sort_view_btn': 'sortByView',
			'tap #mobileRepositoryExampleHeader .btn-search': 'searchByKeyword',
            'tap #mobileRepositoryExampleWrapper .list-warning': 'initList',
            'tap #mobileRepositoryExampleWrapper .btn-prev,#mobileRepositoryExampleWrapper .btn-next': 'viewPage'
		},
		sortByTime: function(e){
			var $e = $(e.currentTarget);
			this.sort_type = $e.data('type');
			this.sort_order = $e.data('order');

			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(0)');
			this.host.hideSortPanel($panel);
		},
		sortByView: function(e){
			var $e = $(e.currentTarget);
			this.sort_type = $e.data('type');
			this.sort_order = $e.data('order');

			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(2)');
			this.host.hideSortPanel($panel);
		},
		searchByType: function(e){
			var uuid = $(e.currentTarget).data('uuid');
			if(!uuid){
				this.initList();
				return;
			}
			
			this.search_type = uuid;
			
			this.$warning.show();
			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(1)');
			this.host.hideSortPanel($panel);
		},
		searchByKeyword: function () {
			if(!this.data){
				return;
			}

			if (this.$('.sort_mask').hasClass('active') || this.$('.list_ctrl_btn').hasClass('active')) {
				this.host.toggleCtrlBtn();
			}

			this.search_keyword = '';
			var keyword = $.trim(this.$input.val());
			if (!keyword) {
				return;
			}

			this.search_keyword = keyword;

			this.$warning.show();
			this.getList(1, $.noop);
		},
		initList: function () {
			if (this.$('.sort_mask').hasClass('active') || this.$('.list_ctrl_btn').hasClass('active')) {
				this.host.toggleCtrlBtn();
			}

			this.$warning.hide();
			this.$input.val('');

			this.search_keyword = '';	//搜索关键字
			this.search_type = '';
			this.sort_order = '';
			this.sort_type = '';

			this.getList(1, $.noop);
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
		getList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getExampleList({
				page: this.current_page,
				rows: this.rows,
				title: this.search_keyword,
				typeUuid: this.search_type,
				sort: this.sort_type,
				order: this.sort_order
			}, _.bind(function (data) {
				this.data = data;

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				var tpl = _.template(this.listTemplate)({ data: data.obj.list });
				this.$listContent.html(tpl);

				//获取类型
				this.host.typeArr = data.obj.queTypeList;

				this.$listWrapper.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				callback();
			}, this));
		},
		initialize: function (options) {
			this.host = options.host;
            this.$el.empty().append(template);

			this.listTemplate = this.$('#listTpl').html();

            this.$listWrapper = this.$('.wrapper > .inner');
			this.$listContent = this.$('.repository_wrapper');
			this.listTemplate = this.$('#listTpl').html();
			this.$warning = this.$('.list-warning');
			this.$input = this.$('.input-search');

			this.data = null;	//当前内容
			this.current_page = 1;	//当前页
			this.rows = 30; //每页显示数目
			this.search_keyword = ''; //搜索关键字
			this.search_type = '';	//搜索类型uuid
			this.sort_type = ''; 	//按排序类别
			this.sort_order = '';	//排序正负

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			//类型数据
			this.host.typeArr = [];

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
*   知识库首页
**/

define('view/mobile_repository/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/mobile_repository/tpl/index.html','view/app-header','view/mobile_repository/base-list','view/mobile_repository/example-list'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/mobile_repository/tpl/index.html');
	var AppHeader = require('view/app-header');

	var BaseList = require('view/mobile_repository/base-list');
	var ExampleList = require('view/mobile_repository/example-list');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap #mobileRepositorySort .sort_type_btn': 'searchByType',
			'tap #mobileRepositorySort .sort_time_btn': 'sortByTime',
			'tap #mobileRepositorySort .sort_view_btn': 'sortByView',

			'tap .show_ctrl_btn': 'toggleCtrlBtn',
			'tap .list_ctrl_btn > div': 'getSortPanel',
			'tap .nav > div': 'renderList',
			'tap .menu > div': 'viewPage',
			'tap .base_box': 'viewBaseDetail',
			'tap .example_box': 'viewExampleDetail'
		},
		sortByTime: function(e){
			if(this.i == 0){
				this.baseList.sortByTime(e);
			}else if(this.i == 1){
				this.exampleList.sortByTime(e);
			}
		},
		sortByView: function(e){
			if(this.i == 0){
				this.baseList.sortByView(e);
			}else if(this.i == 1){
				this.exampleList.sortByView(e);
			}
		},
		searchByType: function(e){
			if(this.i == 0){
				this.baseList.searchByType(e);
			}else if(this.i == 1){
				this.exampleList.searchByType(e);
			}
		},
		viewExampleDetail: function(e){
			var uuid = $(e.currentTarget).data('uuid');
			Backbone.history.navigate('example-detail/' + uuid, { trigger: true });
		},
		viewBaseDetail: function (e) {
			var uuid = $(e.currentTarget).data('uuid');
			Backbone.history.navigate('mobile-repository-detail/' + uuid + '/mobile-repository-index/' + this.nav, { trigger: true });
		},
		viewPage: function (e) {
			var href = $(e.currentTarget).data('href');
			if (!href) {
				return;
			}

			Backbone.history.navigate(href, { trigger: true });
		},
		toggleCtrlBtn: function (e) {
			if (this.$('.list_ctrl_btn').hasClass('active')) {
				//收起
				this.$('.list_ctrl_btn').removeClass('active');
				this.$('.double-arrow-down').addClass('hide');
				this.$('.double-arrow-right').removeClass('hide');

				//收起
				this.$('.arrow-down').addClass('hide');
				this.$('.arrow-up').removeClass('hide');
				this.$('.sort_mask').removeClass('active');
				this.current_sort_btn = '';
			} else {
				//打开
				this.$('.list_ctrl_btn').addClass('active');
				this.$('.double-arrow-right').addClass('hide');
				this.$('.double-arrow-down').removeClass('hide');
			}
		},
		getSortPanel: function (e) {
			var $e = $(e.currentTarget);
			var type = $e.data('type');

			if (!this.current_sort_btn) {
				this.current_sort_btn = type;
				this.renderSortPanel($e);
			} else {
				if (type == this.current_sort_btn) {
					this.toggleSortPanel($e);
					return;
				} else {
					this.current_sort_btn = type;
					this.renderSortPanel($e);
				}
			}
		},
		showSortPanel: function ($e) {
			this.$('.arrow-down').addClass('hide');
			this.$('.arrow-up').removeClass('hide');

			this.$('.sort_mask').addClass('active');
			$e.find('.arrow-up').addClass('hide');
			$e.find('.arrow-down').removeClass('hide');
		},
		hideSortPanel: function ($e) {
			this.$('.sort_mask').removeClass('active');
			$e.find('.arrow-down').addClass('hide');
			$e.find('.arrow-up').removeClass('hide');
		},
		toggleSortPanel: function ($e) {
			if (this.$('.sort_mask').hasClass('active')) {
				//收起
				this.hideSortPanel($e);
			} else {
				//打开
				this.showSortPanel($e);
			}
		},
		renderSortPanel: function ($e) {
			var type = $e.data('type');
			switch (type) {
				case 'time':
					//按时间排序
					this.$('.sort_panel').html(this.sortTimeTemplate);
					break;
				case 'type':
					//按类别搜索
					var tpl = _.template(this.typeTemplate)({ list: this.typeArr });
					this.$('.sort_panel').html(tpl);
					break;
				case 'view':
					//按浏览量排序
					this.$('.sort_panel').html(this.sortViewTemplate);
					break;
			}

			this.showSortPanel($e);
		},
		renderList: function (i) {
			this.i = i;
			if (i == 0) {
				if (this.baseList) {
					this.baseList.initialize({
						host: this
					});
				} else {
					this.baseList = new BaseList({
						host: this
					});
				}
			} else if (i == 1) {
				if (this.exampleList) {
					this.exampleList.initialize({
						host: this
					});
				} else {
					this.exampleList = new ExampleList({
						host: this
					});
				}
			} else {
				var $e = $(i.currentTarget);
				var index = $e.index();

				if (!$e.hasClass('active')) {
					this.renderList(index);
				}
			}
		},
		backbutton: function () {
			if (this.$('.sort_mask').hasClass('active')) {
				this.toggleCtrlBtn();
				return;
			}
            Backbone.history.navigate(this.history, { trigger: true });
		},
		initialize: function (options) {
			this.history = window._pageHistory ? window._pageHistory : "work/index";
			var type = options.nav || 0 ;//0 基础知识  1 投诉案例
			this.nav = type  ;
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '0' == type ? "基础知识" : "投诉案例"
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.typeTemplate = this.$('#typeTpl').html();
			this.sortTimeTemplate = this.$('#sortTimeTpl').html();
			this.sortViewTemplate = this.$('#sortViewTpl').html();

			this.typeArr;	//类型

			if(options.nav){
				this.renderList(options.nav);
			}else{
				this.renderList(0);
			}
			
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * Swiper 3.3.1
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * 
 * http://www.idangero.us/swiper/
 * 
 * Copyright 2016, Vladimir Kharlampidi
 * The iDangero.us
 * http://www.idangero.us/
 * 
 * Licensed under MIT
 * 
 * Released on: February 7, 2016
 */
(function () {
    'use strict';
    var $;
    /*===========================
    Swiper
    ===========================*/
    var Swiper = function (container, params) {
        if (!(this instanceof Swiper)) return new Swiper(container, params);

        var defaults = {
            direction: 'horizontal',
            touchEventsTarget: 'container',
            initialSlide: 0,
            speed: 300,
            // autoplay
            autoplay: false,
            autoplayDisableOnInteraction: true,
            autoplayStopOnLast: false,
            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).
            iOSEdgeSwipeDetection: false,
            iOSEdgeSwipeThreshold: 20,
            // Free mode
            freeMode: false,
            freeModeMomentum: true,
            freeModeMomentumRatio: 1,
            freeModeMomentumBounce: true,
            freeModeMomentumBounceRatio: 1,
            freeModeSticky: false,
            freeModeMinimumVelocity: 0.02,
            // Autoheight
            autoHeight: false,
            // Set wrapper width
            setWrapperSize: false,
            // Virtual Translate
            virtualTranslate: false,
            // Effects
            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
            coverflow: {
                rotate: 50,
                stretch: 0,
                depth: 100,
                modifier: 1,
                slideShadows : true
            },
            flip: {
                slideShadows : true,
                limitRotation: true
            },
            cube: {
                slideShadows: true,
                shadow: true,
                shadowOffset: 20,
                shadowScale: 0.94
            },
            fade: {
                crossFade: false
            },
            // Parallax
            parallax: false,
            // Scrollbar
            scrollbar: null,
            scrollbarHide: true,
            scrollbarDraggable: false,
            scrollbarSnapOnRelease: false,
            // Keyboard Mousewheel
            keyboardControl: false,
            mousewheelControl: false,
            mousewheelReleaseOnEdges: false,
            mousewheelInvert: false,
            mousewheelForceToAxis: false,
            mousewheelSensitivity: 1,
            // Hash Navigation
            hashnav: false,
            // Breakpoints
            breakpoints: undefined,
            // Slides grid
            spaceBetween: 0,
            slidesPerView: 1,
            slidesPerColumn: 1,
            slidesPerColumnFill: 'column',
            slidesPerGroup: 1,
            centeredSlides: false,
            slidesOffsetBefore: 0, // in px
            slidesOffsetAfter: 0, // in px
            // Round length
            roundLengths: false,
            // Touches
            touchRatio: 1,
            touchAngle: 45,
            simulateTouch: true,
            shortSwipes: true,
            longSwipes: true,
            longSwipesRatio: 0.5,
            longSwipesMs: 300,
            followFinger: true,
            onlyExternal: false,
            threshold: 0,
            touchMoveStopPropagation: true,
            // Unique Navigation Elements
            uniqueNavElements: true,
            // Pagination
            pagination: null,
            paginationElement: 'span',
            paginationClickable: false,
            paginationHide: false,
            paginationBulletRender: null,
            paginationProgressRender: null,
            paginationFractionRender: null,
            paginationCustomRender: null,
            paginationType: 'bullets', // 'bullets' or 'progress' or 'fraction' or 'custom'
            // Resistance
            resistance: true,
            resistanceRatio: 0.85,
            // Next/prev buttons
            nextButton: null,
            prevButton: null,
            // Progress
            watchSlidesProgress: false,
            watchSlidesVisibility: false,
            // Cursor
            grabCursor: false,
            // Clicks
            preventClicks: true,
            preventClicksPropagation: true,
            slideToClickedSlide: false,
            // Lazy Loading
            lazyLoading: false,
            lazyLoadingInPrevNext: false,
            lazyLoadingInPrevNextAmount: 1,
            lazyLoadingOnTransitionStart: false,
            // Images
            preloadImages: true,
            updateOnImagesReady: true,
            // loop
            loop: false,
            loopAdditionalSlides: 0,
            loopedSlides: null,
            // Control
            control: undefined,
            controlInverse: false,
            controlBy: 'slide', //or 'container'
            // Swiping/no swiping
            allowSwipeToPrev: true,
            allowSwipeToNext: true,
            swipeHandler: null, //'.swipe-handler',
            noSwiping: true,
            noSwipingClass: 'swiper-no-swiping',
            // NS
            slideClass: 'swiper-slide',
            slideActiveClass: 'swiper-slide-active',
            slideVisibleClass: 'swiper-slide-visible',
            slideDuplicateClass: 'swiper-slide-duplicate',
            slideNextClass: 'swiper-slide-next',
            slidePrevClass: 'swiper-slide-prev',
            wrapperClass: 'swiper-wrapper',
            bulletClass: 'swiper-pagination-bullet',
            bulletActiveClass: 'swiper-pagination-bullet-active',
            buttonDisabledClass: 'swiper-button-disabled',
            paginationCurrentClass: 'swiper-pagination-current',
            paginationTotalClass: 'swiper-pagination-total',
            paginationHiddenClass: 'swiper-pagination-hidden',
            paginationProgressbarClass: 'swiper-pagination-progressbar',
            // Observer
            observer: false,
            observeParents: false,
            // Accessibility
            a11y: false,
            prevSlideMessage: 'Previous slide',
            nextSlideMessage: 'Next slide',
            firstSlideMessage: 'This is the first slide',
            lastSlideMessage: 'This is the last slide',
            paginationBulletMessage: 'Go to slide {{index}}',
            // Callbacks
            runCallbacksOnInit: true
            /*
            Callbacks:
            onInit: function (swiper)
            onDestroy: function (swiper)
            onClick: function (swiper, e)
            onTap: function (swiper, e)
            onDoubleTap: function (swiper, e)
            onSliderMove: function (swiper, e)
            onSlideChangeStart: function (swiper)
            onSlideChangeEnd: function (swiper)
            onTransitionStart: function (swiper)
            onTransitionEnd: function (swiper)
            onImagesReady: function (swiper)
            onProgress: function (swiper, progress)
            onTouchStart: function (swiper, e)
            onTouchMove: function (swiper, e)
            onTouchMoveOpposite: function (swiper, e)
            onTouchEnd: function (swiper, e)
            onReachBeginning: function (swiper)
            onReachEnd: function (swiper)
            onSetTransition: function (swiper, duration)
            onSetTranslate: function (swiper, translate)
            onAutoplayStart: function (swiper)
            onAutoplayStop: function (swiper),
            onLazyImageLoad: function (swiper, slide, image)
            onLazyImageReady: function (swiper, slide, image)
            */
        
        };
        var initialVirtualTranslate = params && params.virtualTranslate;
        
        params = params || {};
        var originalParams = {};
        for (var param in params) {
            if (typeof params[param] === 'object' && params[param] !== null && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {
                originalParams[param] = {};
                for (var deepParam in params[param]) {
                    originalParams[param][deepParam] = params[param][deepParam];
                }
            }
            else {
                originalParams[param] = params[param];
            }
        }
        for (var def in defaults) {
            if (typeof params[def] === 'undefined') {
                params[def] = defaults[def];
            }
            else if (typeof params[def] === 'object') {
                for (var deepDef in defaults[def]) {
                    if (typeof params[def][deepDef] === 'undefined') {
                        params[def][deepDef] = defaults[def][deepDef];
                    }
                }
            }
        }
        
        // Swiper
        var s = this;
        
        // Params
        s.params = params;
        s.originalParams = originalParams;
        
        // Classname
        s.classNames = [];
        /*=========================
          Dom Library and plugins
          ===========================*/
        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined'){
            $ = Dom7;
        }
        if (typeof $ === 'undefined') {
            if (typeof Dom7 === 'undefined') {
                $ = window.Dom7 || window.Zepto || window.jQuery;
            }
            else {
                $ = Dom7;
            }
            if (!$) return;
        }
        // Export it to Swiper instance
        s.$ = $;
        
        /*=========================
          Breakpoints
          ===========================*/
        s.currentBreakpoint = undefined;
        s.getActiveBreakpoint = function () {
            //Get breakpoint for window width
            if (!s.params.breakpoints) return false;
            var breakpoint = false;
            var points = [], point;
            for ( point in s.params.breakpoints ) {
                if (s.params.breakpoints.hasOwnProperty(point)) {
                    points.push(point);
                }
            }
            points.sort(function (a, b) {
                return parseInt(a, 10) > parseInt(b, 10);
            });
            for (var i = 0; i < points.length; i++) {
                point = points[i];
                if (point >= window.innerWidth && !breakpoint) {
                    breakpoint = point;
                }
            }
            return breakpoint || 'max';
        };
        s.setBreakpoint = function () {
            //Set breakpoint for window width and update parameters
            var breakpoint = s.getActiveBreakpoint();
            if (breakpoint && s.currentBreakpoint !== breakpoint) {
                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;
                var needsReLoop = s.params.loop && (breakPointsParams.slidesPerView !== s.params.slidesPerView);
                for ( var param in breakPointsParams ) {
                    s.params[param] = breakPointsParams[param];
                }
                s.currentBreakpoint = breakpoint;
                if(needsReLoop && s.destroyLoop) {
                    s.reLoop(true);
                }
            }
        };
        // Set breakpoint on load
        if (s.params.breakpoints) {
            s.setBreakpoint();
        }
        
        /*=========================
          Preparation - Define Container, Wrapper and Pagination
          ===========================*/
        s.container = $(container);
        if (s.container.length === 0) return;
        if (s.container.length > 1) {
            var swipers = [];
            s.container.each(function () {
                var container = this;
                swipers.push(new Swiper(this, params));
            });
            return swipers;
        }
        
        // Save instance in container HTML Element and in data
        s.container[0].swiper = s;
        s.container.data('swiper', s);
        
        s.classNames.push('swiper-container-' + s.params.direction);
        
        if (s.params.freeMode) {
            s.classNames.push('swiper-container-free-mode');
        }
        if (!s.support.flexbox) {
            s.classNames.push('swiper-container-no-flexbox');
            s.params.slidesPerColumn = 1;
        }
        if (s.params.autoHeight) {
            s.classNames.push('swiper-container-autoheight');
        }
        // Enable slides progress when required
        if (s.params.parallax || s.params.watchSlidesVisibility) {
            s.params.watchSlidesProgress = true;
        }
        // Coverflow / 3D
        if (['cube', 'coverflow', 'flip'].indexOf(s.params.effect) >= 0) {
            if (s.support.transforms3d) {
                s.params.watchSlidesProgress = true;
                s.classNames.push('swiper-container-3d');
            }
            else {
                s.params.effect = 'slide';
            }
        }
        if (s.params.effect !== 'slide') {
            s.classNames.push('swiper-container-' + s.params.effect);
        }
        if (s.params.effect === 'cube') {
            s.params.resistanceRatio = 0;
            s.params.slidesPerView = 1;
            s.params.slidesPerColumn = 1;
            s.params.slidesPerGroup = 1;
            s.params.centeredSlides = false;
            s.params.spaceBetween = 0;
            s.params.virtualTranslate = true;
            s.params.setWrapperSize = false;
        }
        if (s.params.effect === 'fade' || s.params.effect === 'flip') {
            s.params.slidesPerView = 1;
            s.params.slidesPerColumn = 1;
            s.params.slidesPerGroup = 1;
            s.params.watchSlidesProgress = true;
            s.params.spaceBetween = 0;
            s.params.setWrapperSize = false;
            if (typeof initialVirtualTranslate === 'undefined') {
                s.params.virtualTranslate = true;
            }
        }
        
        // Grab Cursor
        if (s.params.grabCursor && s.support.touch) {
            s.params.grabCursor = false;
        }
        
        // Wrapper
        s.wrapper = s.container.children('.' + s.params.wrapperClass);
        
        // Pagination
        if (s.params.pagination) {
            s.paginationContainer = $(s.params.pagination);
            if (s.params.uniqueNavElements && typeof s.params.pagination === 'string' && s.paginationContainer.length > 1 && s.container.find(s.params.pagination).length === 1) {
                s.paginationContainer = s.container.find(s.params.pagination);
            }
        
            if (s.params.paginationType === 'bullets' && s.params.paginationClickable) {
                s.paginationContainer.addClass('swiper-pagination-clickable');
            }
            else {
                s.params.paginationClickable = false;
            }
            s.paginationContainer.addClass('swiper-pagination-' + s.params.paginationType);
        }
        // Next/Prev Buttons
        if (s.params.nextButton || s.params.prevButton) {
            if (s.params.nextButton) {
                s.nextButton = $(s.params.nextButton);
                if (s.params.uniqueNavElements && typeof s.params.nextButton === 'string' && s.nextButton.length > 1 && s.container.find(s.params.nextButton).length === 1) {
                    s.nextButton = s.container.find(s.params.nextButton);
                }
            }
            if (s.params.prevButton) {
                s.prevButton = $(s.params.prevButton);
                if (s.params.uniqueNavElements && typeof s.params.prevButton === 'string' && s.prevButton.length > 1 && s.container.find(s.params.prevButton).length === 1) {
                    s.prevButton = s.container.find(s.params.prevButton);
                }
            }
        }
        
        // Is Horizontal
        s.isHorizontal = function () {
            return s.params.direction === 'horizontal';
        };
        // s.isH = isH;
        
        // RTL
        s.rtl = s.isHorizontal() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');
        if (s.rtl) {
            s.classNames.push('swiper-container-rtl');
        }
        
        // Wrong RTL support
        if (s.rtl) {
            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';
        }
        
        // Columns
        if (s.params.slidesPerColumn > 1) {
            s.classNames.push('swiper-container-multirow');
        }
        
        // Check for Android
        if (s.device.android) {
            s.classNames.push('swiper-container-android');
        }
        
        // Add classes
        s.container.addClass(s.classNames.join(' '));
        
        // Translate
        s.translate = 0;
        
        // Progress
        s.progress = 0;
        
        // Velocity
        s.velocity = 0;
        
        /*=========================
          Locks, unlocks
          ===========================*/
        s.lockSwipeToNext = function () {
            s.params.allowSwipeToNext = false;
        };
        s.lockSwipeToPrev = function () {
            s.params.allowSwipeToPrev = false;
        };
        s.lockSwipes = function () {
            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;
        };
        s.unlockSwipeToNext = function () {
            s.params.allowSwipeToNext = true;
        };
        s.unlockSwipeToPrev = function () {
            s.params.allowSwipeToPrev = true;
        };
        s.unlockSwipes = function () {
            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;
        };
        
        /*=========================
          Round helper
          ===========================*/
        function round(a) {
            return Math.floor(a);
        }
        /*=========================
          Set grab cursor
          ===========================*/
        if (s.params.grabCursor) {
            s.container[0].style.cursor = 'move';
            s.container[0].style.cursor = '-webkit-grab';
            s.container[0].style.cursor = '-moz-grab';
            s.container[0].style.cursor = 'grab';
        }
        /*=========================
          Update on Images Ready
          ===========================*/
        s.imagesToLoad = [];
        s.imagesLoaded = 0;
        
        s.loadImage = function (imgElement, src, srcset, checkForComplete, callback) {
            var image;
            function onReady () {
                if (callback) callback();
            }
            if (!imgElement.complete || !checkForComplete) {
                if (src) {
                    image = new window.Image();
                    image.onload = onReady;
                    image.onerror = onReady;
                    if (srcset) {
                        image.srcset = srcset;
                    }
                    if (src) {
                        image.src = src;
                    }
                } else {
                    onReady();
                }
        
            } else {//image already loaded...
                onReady();
            }
        };
        s.preloadImages = function () {
            s.imagesToLoad = s.container.find('img');
            function _onReady() {
                if (typeof s === 'undefined' || s === null) return;
                if (s.imagesLoaded !== undefined) s.imagesLoaded++;
                if (s.imagesLoaded === s.imagesToLoad.length) {
                    if (s.params.updateOnImagesReady) s.update();
                    s.emit('onImagesReady', s);
                }
            }
            for (var i = 0; i < s.imagesToLoad.length; i++) {
                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), true, _onReady);
            }
        };
        
        /*=========================
          Autoplay
          ===========================*/
        s.autoplayTimeoutId = undefined;
        s.autoplaying = false;
        s.autoplayPaused = false;
        function autoplay() {
            s.autoplayTimeoutId = setTimeout(function () {
                if (s.params.loop) {
                    s.fixLoop();
                    s._slideNext();
                    s.emit('onAutoplay', s);
                }
                else {
                    if (!s.isEnd) {
                        s._slideNext();
                        s.emit('onAutoplay', s);
                    }
                    else {
                        if (!params.autoplayStopOnLast) {
                            s._slideTo(0);
                            s.emit('onAutoplay', s);
                        }
                        else {
                            s.stopAutoplay();
                        }
                    }
                }
            }, s.params.autoplay);
        }
        s.startAutoplay = function () {
            if (typeof s.autoplayTimeoutId !== 'undefined') return false;
            if (!s.params.autoplay) return false;
            if (s.autoplaying) return false;
            s.autoplaying = true;
            s.emit('onAutoplayStart', s);
            autoplay();
        };
        s.stopAutoplay = function (internal) {
            if (!s.autoplayTimeoutId) return;
            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);
            s.autoplaying = false;
            s.autoplayTimeoutId = undefined;
            s.emit('onAutoplayStop', s);
        };
        s.pauseAutoplay = function (speed) {
            if (s.autoplayPaused) return;
            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);
            s.autoplayPaused = true;
            if (speed === 0) {
                s.autoplayPaused = false;
                autoplay();
            }
            else {
                s.wrapper.transitionEnd(function () {
                    if (!s) return;
                    s.autoplayPaused = false;
                    if (!s.autoplaying) {
                        s.stopAutoplay();
                    }
                    else {
                        autoplay();
                    }
                });
            }
        };
        /*=========================
          Min/Max Translate
          ===========================*/
        s.minTranslate = function () {
            return (-s.snapGrid[0]);
        };
        s.maxTranslate = function () {
            return (-s.snapGrid[s.snapGrid.length - 1]);
        };
        /*=========================
          Slider/slides sizes
          ===========================*/
        s.updateAutoHeight = function () {
            // Update Height
            var slide = s.slides.eq(s.activeIndex)[0];
            if (typeof slide !== 'undefined') {
                var newHeight = slide.offsetHeight;
                if (newHeight) s.wrapper.css('height', newHeight + 'px');
            }
        };
        s.updateContainerSize = function () {
            var width, height;
            if (typeof s.params.width !== 'undefined') {
                width = s.params.width;
            }
            else {
                width = s.container[0].clientWidth;
            }
            if (typeof s.params.height !== 'undefined') {
                height = s.params.height;
            }
            else {
                height = s.container[0].clientHeight;
            }
            if (width === 0 && s.isHorizontal() || height === 0 && !s.isHorizontal()) {
                return;
            }
        
            //Subtract paddings
            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);
            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);
        
            // Store values
            s.width = width;
            s.height = height;
            s.size = s.isHorizontal() ? s.width : s.height;
        };
        
        s.updateSlidesSize = function () {
            s.slides = s.wrapper.children('.' + s.params.slideClass);
            s.snapGrid = [];
            s.slidesGrid = [];
            s.slidesSizesGrid = [];
        
            var spaceBetween = s.params.spaceBetween,
                slidePosition = -s.params.slidesOffsetBefore,
                i,
                prevSlideSize = 0,
                index = 0;
            if (typeof s.size === 'undefined') return;
            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;
            }
        
            s.virtualSize = -spaceBetween;
            // reset margins
            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});
            else s.slides.css({marginRight: '', marginBottom: ''});
        
            var slidesNumberEvenToRows;
            if (s.params.slidesPerColumn > 1) {
                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {
                    slidesNumberEvenToRows = s.slides.length;
                }
                else {
                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;
                }
                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {
                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);
                }
            }
        
            // Calc slides
            var slideSize;
            var slidesPerColumn = s.params.slidesPerColumn;
            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);
            for (i = 0; i < s.slides.length; i++) {
                slideSize = 0;
                var slide = s.slides.eq(i);
                if (s.params.slidesPerColumn > 1) {
                    // Set slides order
                    var newSlideOrderIndex;
                    var column, row;
                    if (s.params.slidesPerColumnFill === 'column') {
                        column = Math.floor(i / slidesPerColumn);
                        row = i - column * slidesPerColumn;
                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {
                            if (++row >= slidesPerColumn) {
                                row = 0;
                                column++;
                            }
                        }
                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;
                        slide
                            .css({
                                '-webkit-box-ordinal-group': newSlideOrderIndex,
                                '-moz-box-ordinal-group': newSlideOrderIndex,
                                '-ms-flex-order': newSlideOrderIndex,
                                '-webkit-order': newSlideOrderIndex,
                                'order': newSlideOrderIndex
                            });
                    }
                    else {
                        row = Math.floor(i / slidesPerRow);
                        column = i - row * slidesPerRow;
                    }
                    slide
                        .css({
                            'margin-top': (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')
                        })
                        .attr('data-swiper-column', column)
                        .attr('data-swiper-row', row);
        
                }
                if (slide.css('display') === 'none') continue;
                if (s.params.slidesPerView === 'auto') {
                    slideSize = s.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);
                    if (s.params.roundLengths) slideSize = round(slideSize);
                }
                else {
                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;
                    if (s.params.roundLengths) slideSize = round(slideSize);
        
                    if (s.isHorizontal()) {
                        s.slides[i].style.width = slideSize + 'px';
                    }
                    else {
                        s.slides[i].style.height = slideSize + 'px';
                    }
                }
                s.slides[i].swiperSlideSize = slideSize;
                s.slidesSizesGrid.push(slideSize);
        
        
                if (s.params.centeredSlides) {
                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;
                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;
                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);
                    s.slidesGrid.push(slidePosition);
                }
                else {
                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);
                    s.slidesGrid.push(slidePosition);
                    slidePosition = slidePosition + slideSize + spaceBetween;
                }
        
                s.virtualSize += slideSize + spaceBetween;
        
                prevSlideSize = slideSize;
        
                index ++;
            }
            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;
            var newSlidesGrid;
        
            if (
                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {
                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
            }
            if (!s.support.flexbox || s.params.setWrapperSize) {
                if (s.isHorizontal()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});
            }
        
            if (s.params.slidesPerColumn > 1) {
                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;
                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;
                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
                if (s.params.centeredSlides) {
                    newSlidesGrid = [];
                    for (i = 0; i < s.snapGrid.length; i++) {
                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);
                    }
                    s.snapGrid = newSlidesGrid;
                }
            }
        
            // Remove last grid elements depending on width
            if (!s.params.centeredSlides) {
                newSlidesGrid = [];
                for (i = 0; i < s.snapGrid.length; i++) {
                    if (s.snapGrid[i] <= s.virtualSize - s.size) {
                        newSlidesGrid.push(s.snapGrid[i]);
                    }
                }
                s.snapGrid = newSlidesGrid;
                if (Math.floor(s.virtualSize - s.size) - Math.floor(s.snapGrid[s.snapGrid.length - 1]) > 1) {
                    s.snapGrid.push(s.virtualSize - s.size);
                }
            }
            if (s.snapGrid.length === 0) s.snapGrid = [0];
        
            if (s.params.spaceBetween !== 0) {
                if (s.isHorizontal()) {
                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});
                    else s.slides.css({marginRight: spaceBetween + 'px'});
                }
                else s.slides.css({marginBottom: spaceBetween + 'px'});
            }
            if (s.params.watchSlidesProgress) {
                s.updateSlidesOffset();
            }
        };
        s.updateSlidesOffset = function () {
            for (var i = 0; i < s.slides.length; i++) {
                s.slides[i].swiperSlideOffset = s.isHorizontal() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;
            }
        };
        
        /*=========================
          Slider/slides progress
          ===========================*/
        s.updateSlidesProgress = function (translate) {
            if (typeof translate === 'undefined') {
                translate = s.translate || 0;
            }
            if (s.slides.length === 0) return;
            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();
        
            var offsetCenter = -translate;
            if (s.rtl) offsetCenter = translate;
        
            // Visible Slides
            s.slides.removeClass(s.params.slideVisibleClass);
            for (var i = 0; i < s.slides.length; i++) {
                var slide = s.slides[i];
                var slideProgress = (offsetCenter - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);
                if (s.params.watchSlidesVisibility) {
                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
                    var slideAfter = slideBefore + s.slidesSizesGrid[i];
                    var isVisible =
                        (slideBefore >= 0 && slideBefore < s.size) ||
                        (slideAfter > 0 && slideAfter <= s.size) ||
                        (slideBefore <= 0 && slideAfter >= s.size);
                    if (isVisible) {
                        s.slides.eq(i).addClass(s.params.slideVisibleClass);
                    }
                }
                slide.progress = s.rtl ? -slideProgress : slideProgress;
            }
        };
        s.updateProgress = function (translate) {
            if (typeof translate === 'undefined') {
                translate = s.translate || 0;
            }
            var translatesDiff = s.maxTranslate() - s.minTranslate();
            var wasBeginning = s.isBeginning;
            var wasEnd = s.isEnd;
            if (translatesDiff === 0) {
                s.progress = 0;
                s.isBeginning = s.isEnd = true;
            }
            else {
                s.progress = (translate - s.minTranslate()) / (translatesDiff);
                s.isBeginning = s.progress <= 0;
                s.isEnd = s.progress >= 1;
            }
            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);
            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);
        
            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);
            s.emit('onProgress', s, s.progress);
        };
        s.updateActiveIndex = function () {
            var translate = s.rtl ? s.translate : -s.translate;
            var newActiveIndex, i, snapIndex;
            for (i = 0; i < s.slidesGrid.length; i ++) {
                if (typeof s.slidesGrid[i + 1] !== 'undefined') {
                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {
                        newActiveIndex = i;
                    }
                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {
                        newActiveIndex = i + 1;
                    }
                }
                else {
                    if (translate >= s.slidesGrid[i]) {
                        newActiveIndex = i;
                    }
                }
            }
            // Normalize slideIndex
            if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;
            // for (i = 0; i < s.slidesGrid.length; i++) {
                // if (- translate >= s.slidesGrid[i]) {
                    // newActiveIndex = i;
                // }
            // }
            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);
            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;
        
            if (newActiveIndex === s.activeIndex) {
                return;
            }
            s.snapIndex = snapIndex;
            s.previousIndex = s.activeIndex;
            s.activeIndex = newActiveIndex;
            s.updateClasses();
        };
        
        /*=========================
          Classes
          ===========================*/
        s.updateClasses = function () {
            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass);
            var activeSlide = s.slides.eq(s.activeIndex);
            // Active classes
            activeSlide.addClass(s.params.slideActiveClass);
            // Next Slide
            var nextSlide = activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);
            if (s.params.loop && nextSlide.length === 0) {
                s.slides.eq(0).addClass(s.params.slideNextClass);
            }
            // Prev Slide
            var prevSlide = activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);
            if (s.params.loop && prevSlide.length === 0) {
                s.slides.eq(-1).addClass(s.params.slidePrevClass);
            }
        
            // Pagination
            if (s.paginationContainer && s.paginationContainer.length > 0) {
                // Current/Total
                var current,
                    total = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
                if (s.params.loop) {
                    current = Math.ceil((s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup);
                    if (current > s.slides.length - 1 - s.loopedSlides * 2) {
                        current = current - (s.slides.length - s.loopedSlides * 2);
                    }
                    if (current > total - 1) current = current - total;
                    if (current < 0 && s.params.paginationType !== 'bullets') current = total + current;
                }
                else {
                    if (typeof s.snapIndex !== 'undefined') {
                        current = s.snapIndex;
                    }
                    else {
                        current = s.activeIndex || 0;
                    }
                }
                // Types
                if (s.params.paginationType === 'bullets' && s.bullets && s.bullets.length > 0) {
                    s.bullets.removeClass(s.params.bulletActiveClass);
                    if (s.paginationContainer.length > 1) {
                        s.bullets.each(function () {
                            if ($(this).index() === current) $(this).addClass(s.params.bulletActiveClass);
                        });
                    }
                    else {
                        s.bullets.eq(current).addClass(s.params.bulletActiveClass);
                    }
                }
                if (s.params.paginationType === 'fraction') {
                    s.paginationContainer.find('.' + s.params.paginationCurrentClass).text(current + 1);
                    s.paginationContainer.find('.' + s.params.paginationTotalClass).text(total);
                }
                if (s.params.paginationType === 'progress') {
                    var scale = (current + 1) / total,
                        scaleX = scale,
                        scaleY = 1;
                    if (!s.isHorizontal()) {
                        scaleY = scale;
                        scaleX = 1;
                    }
                    s.paginationContainer.find('.' + s.params.paginationProgressbarClass).transform('translate3d(0,0,0) scaleX(' + scaleX + ') scaleY(' + scaleY + ')').transition(s.params.speed);
                }
                if (s.params.paginationType === 'custom' && s.params.paginationCustomRender) {
                    s.paginationContainer.html(s.params.paginationCustomRender(s, current + 1, total));
                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);
                }
            }
        
            // Next/active buttons
            if (!s.params.loop) {
                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                    if (s.isBeginning) {
                        s.prevButton.addClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.disable(s.prevButton);
                    }
                    else {
                        s.prevButton.removeClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.enable(s.prevButton);
                    }
                }
                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                    if (s.isEnd) {
                        s.nextButton.addClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.disable(s.nextButton);
                    }
                    else {
                        s.nextButton.removeClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.enable(s.nextButton);
                    }
                }
            }
        };
        
        /*=========================
          Pagination
          ===========================*/
        s.updatePagination = function () {
            if (!s.params.pagination) return;
            if (s.paginationContainer && s.paginationContainer.length > 0) {
                var paginationHTML = '';
                if (s.params.paginationType === 'bullets') {
                    var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
                    for (var i = 0; i < numberOfBullets; i++) {
                        if (s.params.paginationBulletRender) {
                            paginationHTML += s.params.paginationBulletRender(i, s.params.bulletClass);
                        }
                        else {
                            paginationHTML += '<' + s.params.paginationElement+' class="' + s.params.bulletClass + '"></' + s.params.paginationElement + '>';
                        }
                    }
                    s.paginationContainer.html(paginationHTML);
                    s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);
                    if (s.params.paginationClickable && s.params.a11y && s.a11y) {
                        s.a11y.initPagination();
                    }
                }
                if (s.params.paginationType === 'fraction') {
                    if (s.params.paginationFractionRender) {
                        paginationHTML = s.params.paginationFractionRender(s, s.params.paginationCurrentClass, s.params.paginationTotalClass);
                    }
                    else {
                        paginationHTML =
                            '<span class="' + s.params.paginationCurrentClass + '"></span>' +
                            ' / ' +
                            '<span class="' + s.params.paginationTotalClass+'"></span>';
                    }
                    s.paginationContainer.html(paginationHTML);
                }
                if (s.params.paginationType === 'progress') {
                    if (s.params.paginationProgressRender) {
                        paginationHTML = s.params.paginationProgressRender(s, s.params.paginationProgressbarClass);
                    }
                    else {
                        paginationHTML = '<span class="' + s.params.paginationProgressbarClass + '"></span>';
                    }
                    s.paginationContainer.html(paginationHTML);
                }
                if (s.params.paginationType !== 'custom') {
                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);
                }
            }
        };
        /*=========================
          Common update method
          ===========================*/
        s.update = function (updateTranslate) {
            s.updateContainerSize();
            s.updateSlidesSize();
            s.updateProgress();
            s.updatePagination();
            s.updateClasses();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
            }
            function forceSetTranslate() {
                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
                s.setWrapperTranslate(newTranslate);
                s.updateActiveIndex();
                s.updateClasses();
            }
            if (updateTranslate) {
                var translated, newTranslate;
                if (s.controller && s.controller.spline) {
                    s.controller.spline = undefined;
                }
                if (s.params.freeMode) {
                    forceSetTranslate();
                    if (s.params.autoHeight) {
                        s.updateAutoHeight();
                    }
                }
                else {
                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
                        translated = s.slideTo(s.slides.length - 1, 0, false, true);
                    }
                    else {
                        translated = s.slideTo(s.activeIndex, 0, false, true);
                    }
                    if (!translated) {
                        forceSetTranslate();
                    }
                }
            }
            else if (s.params.autoHeight) {
                s.updateAutoHeight();
            }
        };
        
        /*=========================
          Resize Handler
          ===========================*/
        s.onResize = function (forceUpdatePagination) {
            //Breakpoints
            if (s.params.breakpoints) {
                s.setBreakpoint();
            }
        
            // Disable locks on resize
            var allowSwipeToPrev = s.params.allowSwipeToPrev;
            var allowSwipeToNext = s.params.allowSwipeToNext;
            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;
        
            s.updateContainerSize();
            s.updateSlidesSize();
            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
            }
            if (s.controller && s.controller.spline) {
                s.controller.spline = undefined;
            }
            var slideChangedBySlideTo = false;
            if (s.params.freeMode) {
                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
                s.setWrapperTranslate(newTranslate);
                s.updateActiveIndex();
                s.updateClasses();
        
                if (s.params.autoHeight) {
                    s.updateAutoHeight();
                }
            }
            else {
                s.updateClasses();
                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
                    slideChangedBySlideTo = s.slideTo(s.slides.length - 1, 0, false, true);
                }
                else {
                    slideChangedBySlideTo = s.slideTo(s.activeIndex, 0, false, true);
                }
            }
            if (s.params.lazyLoading && !slideChangedBySlideTo && s.lazy) {
                s.lazy.load();
            }
            // Return locks after resize
            s.params.allowSwipeToPrev = allowSwipeToPrev;
            s.params.allowSwipeToNext = allowSwipeToNext;
        };
        
        /*=========================
          Events
          ===========================*/
        
        //Define Touch Events
        var desktopEvents = ['mousedown', 'mousemove', 'mouseup'];
        if (window.navigator.pointerEnabled) desktopEvents = ['pointerdown', 'pointermove', 'pointerup'];
        else if (window.navigator.msPointerEnabled) desktopEvents = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];
        s.touchEvents = {
            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : desktopEvents[0],
            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : desktopEvents[1],
            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : desktopEvents[2]
        };
        
        
        // WP8 Touch Events Fix
        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {
            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);
        }
        
        // Attach/detach events
        s.initEvents = function (detach) {
            var actionDom = detach ? 'off' : 'on';
            var action = detach ? 'removeEventListener' : 'addEventListener';
            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];
            var target = s.support.touch ? touchEventsTarget : document;
        
            var moveCapture = s.params.nested ? true : false;
        
            //Touch Events
            if (s.browser.ie) {
                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);
                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);
                target[action](s.touchEvents.end, s.onTouchEnd, false);
            }
            else {
                if (s.support.touch) {
                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);
                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);
                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, false);
                }
                if (params.simulateTouch && !s.device.ios && !s.device.android) {
                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);
                    document[action]('mousemove', s.onTouchMove, moveCapture);
                    document[action]('mouseup', s.onTouchEnd, false);
                }
            }
            window[action]('resize', s.onResize);
        
            // Next, Prev, Index
            if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                s.nextButton[actionDom]('click', s.onClickNext);
                if (s.params.a11y && s.a11y) s.nextButton[actionDom]('keydown', s.a11y.onEnterKey);
            }
            if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                s.prevButton[actionDom]('click', s.onClickPrev);
                if (s.params.a11y && s.a11y) s.prevButton[actionDom]('keydown', s.a11y.onEnterKey);
            }
            if (s.params.pagination && s.params.paginationClickable) {
                s.paginationContainer[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);
                if (s.params.a11y && s.a11y) s.paginationContainer[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);
            }
        
            // Prevent Links Clicks
            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);
        };
        s.attachEvents = function () {
            s.initEvents();
        };
        s.detachEvents = function () {
            s.initEvents(true);
        };
        
        /*=========================
          Handle Clicks
          ===========================*/
        // Prevent Clicks
        s.allowClick = true;
        s.preventClicks = function (e) {
            if (!s.allowClick) {
                if (s.params.preventClicks) e.preventDefault();
                if (s.params.preventClicksPropagation && s.animating) {
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                }
            }
        };
        // Clicks
        s.onClickNext = function (e) {
            e.preventDefault();
            if (s.isEnd && !s.params.loop) return;
            s.slideNext();
        };
        s.onClickPrev = function (e) {
            e.preventDefault();
            if (s.isBeginning && !s.params.loop) return;
            s.slidePrev();
        };
        s.onClickIndex = function (e) {
            e.preventDefault();
            var index = $(this).index() * s.params.slidesPerGroup;
            if (s.params.loop) index = index + s.loopedSlides;
            s.slideTo(index);
        };
        
        /*=========================
          Handle Touches
          ===========================*/
        function findElementInEvent(e, selector) {
            var el = $(e.target);
            if (!el.is(selector)) {
                if (typeof selector === 'string') {
                    el = el.parents(selector);
                }
                else if (selector.nodeType) {
                    var found;
                    el.parents().each(function (index, _el) {
                        if (_el === selector) found = selector;
                    });
                    if (!found) return undefined;
                    else return selector;
                }
            }
            if (el.length === 0) {
                return undefined;
            }
            return el[0];
        }
        s.updateClickedSlide = function (e) {
            var slide = findElementInEvent(e, '.' + s.params.slideClass);
            var slideFound = false;
            if (slide) {
                for (var i = 0; i < s.slides.length; i++) {
                    if (s.slides[i] === slide) slideFound = true;
                }
            }
        
            if (slide && slideFound) {
                s.clickedSlide = slide;
                s.clickedIndex = $(slide).index();
            }
            else {
                s.clickedSlide = undefined;
                s.clickedIndex = undefined;
                return;
            }
            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {
                var slideToIndex = s.clickedIndex,
                    realIndex,
                    duplicatedSlides;
                if (s.params.loop) {
                    if (s.animating) return;
                    realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');
                    if (s.params.centeredSlides) {
                        if ((slideToIndex < s.loopedSlides - s.params.slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + s.params.slidesPerView/2)) {
                            s.fixLoop();
                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.swiper-slide-duplicate)').eq(0).index();
                            setTimeout(function () {
                                s.slideTo(slideToIndex);
                            }, 0);
                        }
                        else {
                            s.slideTo(slideToIndex);
                        }
                    }
                    else {
                        if (slideToIndex > s.slides.length - s.params.slidesPerView) {
                            s.fixLoop();
                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.swiper-slide-duplicate)').eq(0).index();
                            setTimeout(function () {
                                s.slideTo(slideToIndex);
                            }, 0);
                        }
                        else {
                            s.slideTo(slideToIndex);
                        }
                    }
                }
                else {
                    s.slideTo(slideToIndex);
                }
            }
        };
        
        var isTouched,
            isMoved,
            allowTouchCallbacks,
            touchStartTime,
            isScrolling,
            currentTranslate,
            startTranslate,
            allowThresholdMove,
            // Form elements to match
            formElements = 'input, select, textarea, button',
            // Last click time
            lastClickTime = Date.now(), clickTimeout,
            //Velocities
            velocities = [],
            allowMomentumBounce;
        
        // Animating Flag
        s.animating = false;
        
        // Touches information
        s.touches = {
            startX: 0,
            startY: 0,
            currentX: 0,
            currentY: 0,
            diff: 0
        };
        
        // Touch handlers
        var isTouchEvent, startMoving;
        s.onTouchStart = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            isTouchEvent = e.type === 'touchstart';
            if (!isTouchEvent && 'which' in e && e.which === 3) return;
            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {
                s.allowClick = true;
                return;
            }
            if (s.params.swipeHandler) {
                if (!findElementInEvent(e, s.params.swipeHandler)) return;
            }
        
            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
        
            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore
            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {
                return;
            }
        
            isTouched = true;
            isMoved = false;
            allowTouchCallbacks = true;
            isScrolling = undefined;
            startMoving = undefined;
            s.touches.startX = startX;
            s.touches.startY = startY;
            touchStartTime = Date.now();
            s.allowClick = true;
            s.updateContainerSize();
            s.swipeDirection = undefined;
            if (s.params.threshold > 0) allowThresholdMove = false;
            if (e.type !== 'touchstart') {
                var preventDefault = true;
                if ($(e.target).is(formElements)) preventDefault = false;
                if (document.activeElement && $(document.activeElement).is(formElements)) {
                    document.activeElement.blur();
                }
                if (preventDefault) {
                    e.preventDefault();
                }
            }
            s.emit('onTouchStart', s, e);
        };
        
        s.onTouchMove = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            if (isTouchEvent && e.type === 'mousemove') return;
            if (e.preventedByNestedSwiper) {
                s.touches.startX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
                s.touches.startY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                return;
            }
            if (s.params.onlyExternal) {
                // isMoved = true;
                s.allowClick = false;
                if (isTouched) {
                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                    touchStartTime = Date.now();
                }
                return;
            }
            if (isTouchEvent && document.activeElement) {
                if (e.target === document.activeElement && $(e.target).is(formElements)) {
                    isMoved = true;
                    s.allowClick = false;
                    return;
                }
            }
            if (allowTouchCallbacks) {
                s.emit('onTouchMove', s, e);
            }
            if (e.targetTouches && e.targetTouches.length > 1) return;
        
            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
        
            if (typeof isScrolling === 'undefined') {
                var touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;
                isScrolling = s.isHorizontal() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);
            }
            if (isScrolling) {
                s.emit('onTouchMoveOpposite', s, e);
            }
            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {
                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {
                    startMoving = true;
                }
            }
            if (!isTouched) return;
            if (isScrolling)  {
                isTouched = false;
                return;
            }
            if (!startMoving && s.browser.ieTouch) {
                return;
            }
            s.allowClick = false;
            s.emit('onSliderMove', s, e);
            e.preventDefault();
            if (s.params.touchMoveStopPropagation && !s.params.nested) {
                e.stopPropagation();
            }
        
            if (!isMoved) {
                if (params.loop) {
                    s.fixLoop();
                }
                startTranslate = s.getWrapperTranslate();
                s.setWrapperTransition(0);
                if (s.animating) {
                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');
                }
                if (s.params.autoplay && s.autoplaying) {
                    if (s.params.autoplayDisableOnInteraction) {
                        s.stopAutoplay();
                    }
                    else {
                        s.pauseAutoplay();
                    }
                }
                allowMomentumBounce = false;
                //Grab Cursor
                if (s.params.grabCursor) {
                    s.container[0].style.cursor = 'move';
                    s.container[0].style.cursor = '-webkit-grabbing';
                    s.container[0].style.cursor = '-moz-grabbin';
                    s.container[0].style.cursor = 'grabbing';
                }
            }
            isMoved = true;
        
            var diff = s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;
        
            diff = diff * s.params.touchRatio;
            if (s.rtl) diff = -diff;
        
            s.swipeDirection = diff > 0 ? 'prev' : 'next';
            currentTranslate = diff + startTranslate;
        
            var disableParentSwiper = true;
            if ((diff > 0 && currentTranslate > s.minTranslate())) {
                disableParentSwiper = false;
                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);
            }
            else if (diff < 0 && currentTranslate < s.maxTranslate()) {
                disableParentSwiper = false;
                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);
            }
        
            if (disableParentSwiper) {
                e.preventedByNestedSwiper = true;
            }
        
            // Directions locks
            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {
                currentTranslate = startTranslate;
            }
            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {
                currentTranslate = startTranslate;
            }
        
            if (!s.params.followFinger) return;
        
            // Threshold
            if (s.params.threshold > 0) {
                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {
                    if (!allowThresholdMove) {
                        allowThresholdMove = true;
                        s.touches.startX = s.touches.currentX;
                        s.touches.startY = s.touches.currentY;
                        currentTranslate = startTranslate;
                        s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;
                        return;
                    }
                }
                else {
                    currentTranslate = startTranslate;
                    return;
                }
            }
            // Update active index in free mode
            if (s.params.freeMode || s.params.watchSlidesProgress) {
                s.updateActiveIndex();
            }
            if (s.params.freeMode) {
                //Velocity
                if (velocities.length === 0) {
                    velocities.push({
                        position: s.touches[s.isHorizontal() ? 'startX' : 'startY'],
                        time: touchStartTime
                    });
                }
                velocities.push({
                    position: s.touches[s.isHorizontal() ? 'currentX' : 'currentY'],
                    time: (new window.Date()).getTime()
                });
            }
            // Update progress
            s.updateProgress(currentTranslate);
            // Update translate
            s.setWrapperTranslate(currentTranslate);
        };
        s.onTouchEnd = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            if (allowTouchCallbacks) {
                s.emit('onTouchEnd', s, e);
            }
            allowTouchCallbacks = false;
            if (!isTouched) return;
            //Return Grab Cursor
            if (s.params.grabCursor && isMoved && isTouched) {
                s.container[0].style.cursor = 'move';
                s.container[0].style.cursor = '-webkit-grab';
                s.container[0].style.cursor = '-moz-grab';
                s.container[0].style.cursor = 'grab';
            }
        
            // Time diff
            var touchEndTime = Date.now();
            var timeDiff = touchEndTime - touchStartTime;
        
            // Tap, doubleTap, Click
            if (s.allowClick) {
                s.updateClickedSlide(e);
                s.emit('onTap', s, e);
                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {
                    if (clickTimeout) clearTimeout(clickTimeout);
                    clickTimeout = setTimeout(function () {
                        if (!s) return;
                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {
                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);
                        }
                        s.emit('onClick', s, e);
                    }, 300);
        
                }
                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {
                    if (clickTimeout) clearTimeout(clickTimeout);
                    s.emit('onDoubleTap', s, e);
                }
            }
        
            lastClickTime = Date.now();
            setTimeout(function () {
                if (s) s.allowClick = true;
            }, 0);
        
            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {
                isTouched = isMoved = false;
                return;
            }
            isTouched = isMoved = false;
        
            var currentPos;
            if (s.params.followFinger) {
                currentPos = s.rtl ? s.translate : -s.translate;
            }
            else {
                currentPos = -currentTranslate;
            }
            if (s.params.freeMode) {
                if (currentPos < -s.minTranslate()) {
                    s.slideTo(s.activeIndex);
                    return;
                }
                else if (currentPos > -s.maxTranslate()) {
                    if (s.slides.length < s.snapGrid.length) {
                        s.slideTo(s.snapGrid.length - 1);
                    }
                    else {
                        s.slideTo(s.slides.length - 1);
                    }
                    return;
                }
        
                if (s.params.freeModeMomentum) {
                    if (velocities.length > 1) {
                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();
        
                        var distance = lastMoveEvent.position - velocityEvent.position;
                        var time = lastMoveEvent.time - velocityEvent.time;
                        s.velocity = distance / time;
                        s.velocity = s.velocity / 2;
                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {
                            s.velocity = 0;
                        }
                        // this implies that the user stopped moving a finger then released.
                        // There would be no events with distance zero, so the last event is stale.
                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {
                            s.velocity = 0;
                        }
                    } else {
                        s.velocity = 0;
                    }
        
                    velocities.length = 0;
                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;
                    var momentumDistance = s.velocity * momentumDuration;
        
                    var newPosition = s.translate + momentumDistance;
                    if (s.rtl) newPosition = - newPosition;
                    var doBounce = false;
                    var afterBouncePosition;
                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;
                    if (newPosition < s.maxTranslate()) {
                        if (s.params.freeModeMomentumBounce) {
                            if (newPosition + s.maxTranslate() < -bounceAmount) {
                                newPosition = s.maxTranslate() - bounceAmount;
                            }
                            afterBouncePosition = s.maxTranslate();
                            doBounce = true;
                            allowMomentumBounce = true;
                        }
                        else {
                            newPosition = s.maxTranslate();
                        }
                    }
                    else if (newPosition > s.minTranslate()) {
                        if (s.params.freeModeMomentumBounce) {
                            if (newPosition - s.minTranslate() > bounceAmount) {
                                newPosition = s.minTranslate() + bounceAmount;
                            }
                            afterBouncePosition = s.minTranslate();
                            doBounce = true;
                            allowMomentumBounce = true;
                        }
                        else {
                            newPosition = s.minTranslate();
                        }
                    }
                    else if (s.params.freeModeSticky) {
                        var j = 0,
                            nextSlide;
                        for (j = 0; j < s.snapGrid.length; j += 1) {
                            if (s.snapGrid[j] > -newPosition) {
                                nextSlide = j;
                                break;
                            }
        
                        }
                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {
                            newPosition = s.snapGrid[nextSlide];
                        } else {
                            newPosition = s.snapGrid[nextSlide - 1];
                        }
                        if (!s.rtl) newPosition = - newPosition;
                    }
                    //Fix duration
                    if (s.velocity !== 0) {
                        if (s.rtl) {
                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);
                        }
                        else {
                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);
                        }
                    }
                    else if (s.params.freeModeSticky) {
                        s.slideReset();
                        return;
                    }
        
                    if (s.params.freeModeMomentumBounce && doBounce) {
                        s.updateProgress(afterBouncePosition);
                        s.setWrapperTransition(momentumDuration);
                        s.setWrapperTranslate(newPosition);
                        s.onTransitionStart();
                        s.animating = true;
                        s.wrapper.transitionEnd(function () {
                            if (!s || !allowMomentumBounce) return;
                            s.emit('onMomentumBounce', s);
        
                            s.setWrapperTransition(s.params.speed);
                            s.setWrapperTranslate(afterBouncePosition);
                            s.wrapper.transitionEnd(function () {
                                if (!s) return;
                                s.onTransitionEnd();
                            });
                        });
                    } else if (s.velocity) {
                        s.updateProgress(newPosition);
                        s.setWrapperTransition(momentumDuration);
                        s.setWrapperTranslate(newPosition);
                        s.onTransitionStart();
                        if (!s.animating) {
                            s.animating = true;
                            s.wrapper.transitionEnd(function () {
                                if (!s) return;
                                s.onTransitionEnd();
                            });
                        }
        
                    } else {
                        s.updateProgress(newPosition);
                    }
        
                    s.updateActiveIndex();
                }
                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {
                    s.updateProgress();
                    s.updateActiveIndex();
                }
                return;
            }
        
            // Find current slide
            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];
            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {
                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {
                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {
                        stopIndex = i;
                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];
                    }
                }
                else {
                    if (currentPos >= s.slidesGrid[i]) {
                        stopIndex = i;
                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];
                    }
                }
            }
        
            // Find current slide size
            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;
        
            if (timeDiff > s.params.longSwipesMs) {
                // Long touches
                if (!s.params.longSwipes) {
                    s.slideTo(s.activeIndex);
                    return;
                }
                if (s.swipeDirection === 'next') {
                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);
                    else s.slideTo(stopIndex);
        
                }
                if (s.swipeDirection === 'prev') {
                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);
                    else s.slideTo(stopIndex);
                }
            }
            else {
                // Short swipes
                if (!s.params.shortSwipes) {
                    s.slideTo(s.activeIndex);
                    return;
                }
                if (s.swipeDirection === 'next') {
                    s.slideTo(stopIndex + s.params.slidesPerGroup);
        
                }
                if (s.swipeDirection === 'prev') {
                    s.slideTo(stopIndex);
                }
            }
        };
        /*=========================
          Transitions
          ===========================*/
        s._slideTo = function (slideIndex, speed) {
            return s.slideTo(slideIndex, speed, true, true);
        };
        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (typeof slideIndex === 'undefined') slideIndex = 0;
            if (slideIndex < 0) slideIndex = 0;
            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);
            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;
        
            var translate = - s.snapGrid[s.snapIndex];
            // Stop autoplay
            if (s.params.autoplay && s.autoplaying) {
                if (internal || !s.params.autoplayDisableOnInteraction) {
                    s.pauseAutoplay(speed);
                }
                else {
                    s.stopAutoplay();
                }
            }
            // Update progress
            s.updateProgress(translate);
        
            // Normalize slideIndex
            for (var i = 0; i < s.slidesGrid.length; i++) {
                if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {
                    slideIndex = i;
                }
            }
        
            // Directions locks
            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {
                return false;
            }
            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {
                if ((s.activeIndex || 0) !== slideIndex ) return false;
            }
        
            // Update Index
            if (typeof speed === 'undefined') speed = s.params.speed;
            s.previousIndex = s.activeIndex || 0;
            s.activeIndex = slideIndex;
        
            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {
                // Update Height
                if (s.params.autoHeight) {
                    s.updateAutoHeight();
                }
                s.updateClasses();
                if (s.params.effect !== 'slide') {
                    s.setWrapperTranslate(translate);
                }
                return false;
            }
            s.updateClasses();
            s.onTransitionStart(runCallbacks);
        
            if (speed === 0) {
                s.setWrapperTranslate(translate);
                s.setWrapperTransition(0);
                s.onTransitionEnd(runCallbacks);
            }
            else {
                s.setWrapperTranslate(translate);
                s.setWrapperTransition(speed);
                if (!s.animating) {
                    s.animating = true;
                    s.wrapper.transitionEnd(function () {
                        if (!s) return;
                        s.onTransitionEnd(runCallbacks);
                    });
                }
        
            }
        
            return true;
        };
        
        s.onTransitionStart = function (runCallbacks) {
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (s.params.autoHeight) {
                s.updateAutoHeight();
            }
            if (s.lazy) s.lazy.onTransitionStart();
            if (runCallbacks) {
                s.emit('onTransitionStart', s);
                if (s.activeIndex !== s.previousIndex) {
                    s.emit('onSlideChangeStart', s);
                    if (s.activeIndex > s.previousIndex) {
                        s.emit('onSlideNextStart', s);
                    }
                    else {
                        s.emit('onSlidePrevStart', s);
                    }
                }
        
            }
        };
        s.onTransitionEnd = function (runCallbacks) {
            s.animating = false;
            s.setWrapperTransition(0);
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (s.lazy) s.lazy.onTransitionEnd();
            if (runCallbacks) {
                s.emit('onTransitionEnd', s);
                if (s.activeIndex !== s.previousIndex) {
                    s.emit('onSlideChangeEnd', s);
                    if (s.activeIndex > s.previousIndex) {
                        s.emit('onSlideNextEnd', s);
                    }
                    else {
                        s.emit('onSlidePrevEnd', s);
                    }
                }
            }
            if (s.params.hashnav && s.hashnav) {
                s.hashnav.setHash();
            }
        
        };
        s.slideNext = function (runCallbacks, speed, internal) {
            if (s.params.loop) {
                if (s.animating) return false;
                s.fixLoop();
                var clientLeft = s.container[0].clientLeft;
                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);
            }
            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);
        };
        s._slideNext = function (speed) {
            return s.slideNext(true, speed, true);
        };
        s.slidePrev = function (runCallbacks, speed, internal) {
            if (s.params.loop) {
                if (s.animating) return false;
                s.fixLoop();
                var clientLeft = s.container[0].clientLeft;
                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);
            }
            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);
        };
        s._slidePrev = function (speed) {
            return s.slidePrev(true, speed, true);
        };
        s.slideReset = function (runCallbacks, speed, internal) {
            return s.slideTo(s.activeIndex, speed, runCallbacks);
        };
        
        /*=========================
          Translate/transition helpers
          ===========================*/
        s.setWrapperTransition = function (duration, byController) {
            s.wrapper.transition(duration);
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                s.effects[s.params.effect].setTransition(duration);
            }
            if (s.params.parallax && s.parallax) {
                s.parallax.setTransition(duration);
            }
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.setTransition(duration);
            }
            if (s.params.control && s.controller) {
                s.controller.setTransition(duration, byController);
            }
            s.emit('onSetTransition', s, duration);
        };
        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {
            var x = 0, y = 0, z = 0;
            if (s.isHorizontal()) {
                x = s.rtl ? -translate : translate;
            }
            else {
                y = translate;
            }
        
            if (s.params.roundLengths) {
                x = round(x);
                y = round(y);
            }
        
            if (!s.params.virtualTranslate) {
                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');
                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');
            }
        
            s.translate = s.isHorizontal() ? x : y;
        
            // Check if we need to update progress
            var progress;
            var translatesDiff = s.maxTranslate() - s.minTranslate();
            if (translatesDiff === 0) {
                progress = 0;
            }
            else {
                progress = (translate - s.minTranslate()) / (translatesDiff);
            }
            if (progress !== s.progress) {
                s.updateProgress(translate);
            }
        
            if (updateActiveIndex) s.updateActiveIndex();
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                s.effects[s.params.effect].setTranslate(s.translate);
            }
            if (s.params.parallax && s.parallax) {
                s.parallax.setTranslate(s.translate);
            }
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.setTranslate(s.translate);
            }
            if (s.params.control && s.controller) {
                s.controller.setTranslate(s.translate, byController);
            }
            s.emit('onSetTranslate', s, s.translate);
        };
        
        s.getTranslate = function (el, axis) {
            var matrix, curTransform, curStyle, transformMatrix;
        
            // automatic axis detection
            if (typeof axis === 'undefined') {
                axis = 'x';
            }
        
            if (s.params.virtualTranslate) {
                return s.rtl ? -s.translate : s.translate;
            }
        
            curStyle = window.getComputedStyle(el, null);
            if (window.WebKitCSSMatrix) {
                curTransform = curStyle.transform || curStyle.webkitTransform;
                if (curTransform.split(',').length > 6) {
                    curTransform = curTransform.split(', ').map(function(a){
                        return a.replace(',','.');
                    }).join(', ');
                }
                // Some old versions of Webkit choke when 'none' is passed; pass
                // empty string instead in this case
                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);
            }
            else {
                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
                matrix = transformMatrix.toString().split(',');
            }
        
            if (axis === 'x') {
                //Latest Chrome and webkits Fix
                if (window.WebKitCSSMatrix)
                    curTransform = transformMatrix.m41;
                //Crazy IE10 Matrix
                else if (matrix.length === 16)
                    curTransform = parseFloat(matrix[12]);
                //Normal Browsers
                else
                    curTransform = parseFloat(matrix[4]);
            }
            if (axis === 'y') {
                //Latest Chrome and webkits Fix
                if (window.WebKitCSSMatrix)
                    curTransform = transformMatrix.m42;
                //Crazy IE10 Matrix
                else if (matrix.length === 16)
                    curTransform = parseFloat(matrix[13]);
                //Normal Browsers
                else
                    curTransform = parseFloat(matrix[5]);
            }
            if (s.rtl && curTransform) curTransform = -curTransform;
            return curTransform || 0;
        };
        s.getWrapperTranslate = function (axis) {
            if (typeof axis === 'undefined') {
                axis = s.isHorizontal() ? 'x' : 'y';
            }
            return s.getTranslate(s.wrapper[0], axis);
        };
        
        /*=========================
          Observer
          ===========================*/
        s.observers = [];
        function initObserver(target, options) {
            options = options || {};
            // create an observer instance
            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
            var observer = new ObserverFunc(function (mutations) {
                mutations.forEach(function (mutation) {
                    s.onResize(true);
                    s.emit('onObserverUpdate', s, mutation);
                });
            });
        
            observer.observe(target, {
                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
                childList: typeof options.childList === 'undefined' ? true : options.childList,
                characterData: typeof options.characterData === 'undefined' ? true : options.characterData
            });
        
            s.observers.push(observer);
        }
        s.initObservers = function () {
            if (s.params.observeParents) {
                var containerParents = s.container.parents();
                for (var i = 0; i < containerParents.length; i++) {
                    initObserver(containerParents[i]);
                }
            }
        
            // Observe container
            initObserver(s.container[0], {childList: false});
        
            // Observe wrapper
            initObserver(s.wrapper[0], {attributes: false});
        };
        s.disconnectObservers = function () {
            for (var i = 0; i < s.observers.length; i++) {
                s.observers[i].disconnect();
            }
            s.observers = [];
        };
        /*=========================
          Loop
          ===========================*/
        // Create looped slides
        s.createLoop = function () {
            // Remove duplicated slides
            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();
        
            var slides = s.wrapper.children('.' + s.params.slideClass);
        
            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;
        
            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);
            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;
            if (s.loopedSlides > slides.length) {
                s.loopedSlides = slides.length;
            }
        
            var prependSlides = [], appendSlides = [], i;
            slides.each(function (index, el) {
                var slide = $(this);
                if (index < s.loopedSlides) appendSlides.push(el);
                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);
                slide.attr('data-swiper-slide-index', index);
            });
            for (i = 0; i < appendSlides.length; i++) {
                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));
            }
            for (i = prependSlides.length - 1; i >= 0; i--) {
                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));
            }
        };
        s.destroyLoop = function () {
            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();
            s.slides.removeAttr('data-swiper-slide-index');
        };
        s.reLoop = function (updatePosition) {
            var oldIndex = s.activeIndex - s.loopedSlides;
            s.destroyLoop();
            s.createLoop();
            s.updateSlidesSize();
            if (updatePosition) {
                s.slideTo(oldIndex + s.loopedSlides, 0, false);
            }
        
        };
        s.fixLoop = function () {
            var newIndex;
            //Fix For Negative Oversliding
            if (s.activeIndex < s.loopedSlides) {
                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;
                newIndex = newIndex + s.loopedSlides;
                s.slideTo(newIndex, 0, false, true);
            }
            //Fix For Positive Oversliding
            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {
                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;
                newIndex = newIndex + s.loopedSlides;
                s.slideTo(newIndex, 0, false, true);
            }
        };
        /*=========================
          Append/Prepend/Remove Slides
          ===========================*/
        s.appendSlide = function (slides) {
            if (s.params.loop) {
                s.destroyLoop();
            }
            if (typeof slides === 'object' && slides.length) {
                for (var i = 0; i < slides.length; i++) {
                    if (slides[i]) s.wrapper.append(slides[i]);
                }
            }
            else {
                s.wrapper.append(slides);
            }
            if (s.params.loop) {
                s.createLoop();
            }
            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
        };
        s.prependSlide = function (slides) {
            if (s.params.loop) {
                s.destroyLoop();
            }
            var newActiveIndex = s.activeIndex + 1;
            if (typeof slides === 'object' && slides.length) {
                for (var i = 0; i < slides.length; i++) {
                    if (slides[i]) s.wrapper.prepend(slides[i]);
                }
                newActiveIndex = s.activeIndex + slides.length;
            }
            else {
                s.wrapper.prepend(slides);
            }
            if (s.params.loop) {
                s.createLoop();
            }
            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
            s.slideTo(newActiveIndex, 0, false);
        };
        s.removeSlide = function (slidesIndexes) {
            if (s.params.loop) {
                s.destroyLoop();
                s.slides = s.wrapper.children('.' + s.params.slideClass);
            }
            var newActiveIndex = s.activeIndex,
                indexToRemove;
            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {
                for (var i = 0; i < slidesIndexes.length; i++) {
                    indexToRemove = slidesIndexes[i];
                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();
                    if (indexToRemove < newActiveIndex) newActiveIndex--;
                }
                newActiveIndex = Math.max(newActiveIndex, 0);
            }
            else {
                indexToRemove = slidesIndexes;
                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();
                if (indexToRemove < newActiveIndex) newActiveIndex--;
                newActiveIndex = Math.max(newActiveIndex, 0);
            }
        
            if (s.params.loop) {
                s.createLoop();
            }
        
            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
            if (s.params.loop) {
                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);
            }
            else {
                s.slideTo(newActiveIndex, 0, false);
            }
        
        };
        s.removeAllSlides = function () {
            var slidesIndexes = [];
            for (var i = 0; i < s.slides.length; i++) {
                slidesIndexes.push(i);
            }
            s.removeSlide(slidesIndexes);
        };
        

        /*=========================
          Effects
          ===========================*/
        s.effects = {
            fade: {
                setTranslate: function () {
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var offset = slide[0].swiperSlideOffset;
                        var tx = -offset;
                        if (!s.params.virtualTranslate) tx = tx - s.translate;
                        var ty = 0;
                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                        }
                        var slideOpacity = s.params.fade.crossFade ?
                                Math.max(1 - Math.abs(slide[0].progress), 0) :
                                1 + Math.min(Math.max(slide[0].progress, -1), 0);
                        slide
                            .css({
                                opacity: slideOpacity
                            })
                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');
        
                    }
        
                },
                setTransition: function (duration) {
                    s.slides.transition(duration);
                    if (s.params.virtualTranslate && duration !== 0) {
                        var eventTriggered = false;
                        s.slides.transitionEnd(function () {
                            if (eventTriggered) return;
                            if (!s) return;
                            eventTriggered = true;
                            s.animating = false;
                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];
                            for (var i = 0; i < triggerEvents.length; i++) {
                                s.wrapper.trigger(triggerEvents[i]);
                            }
                        });
                    }
                }
            },
            flip: {
                setTranslate: function () {
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var progress = slide[0].progress;
                        if (s.params.flip.limitRotation) {
                            progress = Math.max(Math.min(slide[0].progress, 1), -1);
                        }
                        var offset = slide[0].swiperSlideOffset;
                        var rotate = -180 * progress,
                            rotateY = rotate,
                            rotateX = 0,
                            tx = -offset,
                            ty = 0;
                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                            rotateX = -rotateY;
                            rotateY = 0;
                        }
                        else if (s.rtl) {
                            rotateY = -rotateY;
                        }
        
                        slide[0].style.zIndex = -Math.abs(Math.round(progress)) + s.slides.length;
        
                        if (s.params.flip.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
                        }
        
                        slide
                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px) rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)');
                    }
                },
                setTransition: function (duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                    if (s.params.virtualTranslate && duration !== 0) {
                        var eventTriggered = false;
                        s.slides.eq(s.activeIndex).transitionEnd(function () {
                            if (eventTriggered) return;
                            if (!s) return;
                            if (!$(this).hasClass(s.params.slideActiveClass)) return;
                            eventTriggered = true;
                            s.animating = false;
                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];
                            for (var i = 0; i < triggerEvents.length; i++) {
                                s.wrapper.trigger(triggerEvents[i]);
                            }
                        });
                    }
                }
            },
            cube: {
                setTranslate: function () {
                    var wrapperRotate = 0, cubeShadow;
                    if (s.params.cube.shadow) {
                        if (s.isHorizontal()) {
                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');
                            if (cubeShadow.length === 0) {
                                cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                                s.wrapper.append(cubeShadow);
                            }
                            cubeShadow.css({height: s.width + 'px'});
                        }
                        else {
                            cubeShadow = s.container.find('.swiper-cube-shadow');
                            if (cubeShadow.length === 0) {
                                cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                                s.container.append(cubeShadow);
                            }
                        }
                    }
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var slideAngle = i * 90;
                        var round = Math.floor(slideAngle / 360);
                        if (s.rtl) {
                            slideAngle = -slideAngle;
                            round = Math.floor(-slideAngle / 360);
                        }
                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);
                        var tx = 0, ty = 0, tz = 0;
                        if (i % 4 === 0) {
                            tx = - round * 4 * s.size;
                            tz = 0;
                        }
                        else if ((i - 1) % 4 === 0) {
                            tx = 0;
                            tz = - round * 4 * s.size;
                        }
                        else if ((i - 2) % 4 === 0) {
                            tx = s.size + round * 4 * s.size;
                            tz = s.size;
                        }
                        else if ((i - 3) % 4 === 0) {
                            tx = - s.size;
                            tz = 3 * s.size + s.size * 4 * round;
                        }
                        if (s.rtl) {
                            tx = -tx;
                        }
        
                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                        }
        
                        var transform = 'rotateX(' + (s.isHorizontal() ? 0 : -slideAngle) + 'deg) rotateY(' + (s.isHorizontal() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';
                        if (progress <= 1 && progress > -1) {
                            wrapperRotate = i * 90 + progress * 90;
                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;
                        }
                        slide.transform(transform);
                        if (s.params.cube.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
                        }
                    }
                    s.wrapper.css({
                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',
                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',
                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',
                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'
                    });
        
                    if (s.params.cube.shadow) {
                        if (s.isHorizontal()) {
                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');
                        }
                        else {
                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
                            var scale1 = s.params.cube.shadowScale,
                                scale2 = s.params.cube.shadowScale / multiplier,
                                offset = s.params.cube.shadowOffset;
                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');
                        }
                    }
                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;
                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (s.isHorizontal() ? 0 : wrapperRotate) + 'deg) rotateY(' + (s.isHorizontal() ? -wrapperRotate : 0) + 'deg)');
                },
                setTransition: function (duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                    if (s.params.cube.shadow && !s.isHorizontal()) {
                        s.container.find('.swiper-cube-shadow').transition(duration);
                    }
                }
            },
            coverflow: {
                setTranslate: function () {
                    var transform = s.translate;
                    var center = s.isHorizontal() ? -transform + s.width / 2 : -transform + s.height / 2;
                    var rotate = s.isHorizontal() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;
                    var translate = s.params.coverflow.depth;
                    //Each slide offset from center
                    for (var i = 0, length = s.slides.length; i < length; i++) {
                        var slide = s.slides.eq(i);
                        var slideSize = s.slidesSizesGrid[i];
                        var slideOffset = slide[0].swiperSlideOffset;
                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;
        
                        var rotateY = s.isHorizontal() ? rotate * offsetMultiplier : 0;
                        var rotateX = s.isHorizontal() ? 0 : rotate * offsetMultiplier;
                        // var rotateZ = 0
                        var translateZ = -translate * Math.abs(offsetMultiplier);
        
                        var translateY = s.isHorizontal() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);
                        var translateX = s.isHorizontal() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;
        
                        //Fix for ultra small values
                        if (Math.abs(translateX) < 0.001) translateX = 0;
                        if (Math.abs(translateY) < 0.001) translateY = 0;
                        if (Math.abs(translateZ) < 0.001) translateZ = 0;
                        if (Math.abs(rotateY) < 0.001) rotateY = 0;
                        if (Math.abs(rotateX) < 0.001) rotateX = 0;
        
                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';
        
                        slide.transform(slideTransform);
                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
                        if (s.params.coverflow.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;
                        }
                    }
        
                    //Set correct perspective for IE10
                    if (s.browser.ie) {
                        var ws = s.wrapper[0].style;
                        ws.perspectiveOrigin = center + 'px 50%';
                    }
                },
                setTransition: function (duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                }
            }
        };

        /*=========================
          Images Lazy Loading
          ===========================*/
        s.lazy = {
            initialImageLoaded: false,
            loadImageInSlide: function (index, loadInDuplicate) {
                if (typeof index === 'undefined') return;
                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;
                if (s.slides.length === 0) return;
        
                var slide = s.slides.eq(index);
                var img = slide.find('.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)');
                if (slide.hasClass('swiper-lazy') && !slide.hasClass('swiper-lazy-loaded') && !slide.hasClass('swiper-lazy-loading')) {
                    img = img.add(slide[0]);
                }
                if (img.length === 0) return;
        
                img.each(function () {
                    var _img = $(this);
                    _img.addClass('swiper-lazy-loading');
                    var background = _img.attr('data-background');
                    var src = _img.attr('data-src'),
                        srcset = _img.attr('data-srcset');
                    s.loadImage(_img[0], (src || background), srcset, false, function () {
                        if (background) {
                            _img.css('background-image', 'url("' + background + '")');
                            _img.removeAttr('data-background');
                        }
                        else {
                            if (srcset) {
                                _img.attr('srcset', srcset);
                                _img.removeAttr('data-srcset');
                            }
                            if (src) {
                                _img.attr('src', src);
                                _img.removeAttr('data-src');
                            }
        
                        }
        
                        _img.addClass('swiper-lazy-loaded').removeClass('swiper-lazy-loading');
                        slide.find('.swiper-lazy-preloader, .preloader').remove();
                        if (s.params.loop && loadInDuplicate) {
                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');
                            if (slide.hasClass(s.params.slideDuplicateClass)) {
                                var originalSlide = s.wrapper.children('[data-swiper-slide-index="' + slideOriginalIndex + '"]:not(.' + s.params.slideDuplicateClass + ')');
                                s.lazy.loadImageInSlide(originalSlide.index(), false);
                            }
                            else {
                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + slideOriginalIndex + '"]');
                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);
                            }
                        }
                        s.emit('onLazyImageReady', s, slide[0], _img[0]);
                    });
        
                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);
                });
        
            },
            load: function () {
                var i;
                if (s.params.watchSlidesVisibility) {
                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {
                        s.lazy.loadImageInSlide($(this).index());
                    });
                }
                else {
                    if (s.params.slidesPerView > 1) {
                        for (i = s.activeIndex; i < s.activeIndex + s.params.slidesPerView ; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                    }
                    else {
                        s.lazy.loadImageInSlide(s.activeIndex);
                    }
                }
                if (s.params.lazyLoadingInPrevNext) {
                    if (s.params.slidesPerView > 1 || (s.params.lazyLoadingInPrevNextAmount && s.params.lazyLoadingInPrevNextAmount > 1)) {
                        var amount = s.params.lazyLoadingInPrevNextAmount;
                        var spv = s.params.slidesPerView;
                        var maxIndex = Math.min(s.activeIndex + spv + Math.max(amount, spv), s.slides.length);
                        var minIndex = Math.max(s.activeIndex - Math.max(spv, amount), 0);
                        // Next Slides
                        for (i = s.activeIndex + s.params.slidesPerView; i < maxIndex; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                        // Prev Slides
                        for (i = minIndex; i < s.activeIndex ; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                    }
                    else {
                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);
                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());
        
                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);
                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());
                    }
                }
            },
            onTransitionStart: function () {
                if (s.params.lazyLoading) {
                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {
                        s.lazy.load();
                    }
                }
            },
            onTransitionEnd: function () {
                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {
                    s.lazy.load();
                }
            }
        };
        

        /*=========================
          Scrollbar
          ===========================*/
        s.scrollbar = {
            isTouched: false,
            setDragPosition: function (e) {
                var sb = s.scrollbar;
                var x = 0, y = 0;
                var translate;
                var pointerPosition = s.isHorizontal() ?
                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :
                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;
                var position = (pointerPosition) - sb.track.offset()[s.isHorizontal() ? 'left' : 'top'] - sb.dragSize / 2;
                var positionMin = -s.minTranslate() * sb.moveDivider;
                var positionMax = -s.maxTranslate() * sb.moveDivider;
                if (position < positionMin) {
                    position = positionMin;
                }
                else if (position > positionMax) {
                    position = positionMax;
                }
                position = -position / sb.moveDivider;
                s.updateProgress(position);
                s.setWrapperTranslate(position, true);
            },
            dragStart: function (e) {
                var sb = s.scrollbar;
                sb.isTouched = true;
                e.preventDefault();
                e.stopPropagation();
        
                sb.setDragPosition(e);
                clearTimeout(sb.dragTimeout);
        
                sb.track.transition(0);
                if (s.params.scrollbarHide) {
                    sb.track.css('opacity', 1);
                }
                s.wrapper.transition(100);
                sb.drag.transition(100);
                s.emit('onScrollbarDragStart', s);
            },
            dragMove: function (e) {
                var sb = s.scrollbar;
                if (!sb.isTouched) return;
                if (e.preventDefault) e.preventDefault();
                else e.returnValue = false;
                sb.setDragPosition(e);
                s.wrapper.transition(0);
                sb.track.transition(0);
                sb.drag.transition(0);
                s.emit('onScrollbarDragMove', s);
            },
            dragEnd: function (e) {
                var sb = s.scrollbar;
                if (!sb.isTouched) return;
                sb.isTouched = false;
                if (s.params.scrollbarHide) {
                    clearTimeout(sb.dragTimeout);
                    sb.dragTimeout = setTimeout(function () {
                        sb.track.css('opacity', 0);
                        sb.track.transition(400);
                    }, 1000);
        
                }
                s.emit('onScrollbarDragEnd', s);
                if (s.params.scrollbarSnapOnRelease) {
                    s.slideReset();
                }
            },
            enableDraggable: function () {
                var sb = s.scrollbar;
                var target = s.support.touch ? sb.track : document;
                $(sb.track).on(s.touchEvents.start, sb.dragStart);
                $(target).on(s.touchEvents.move, sb.dragMove);
                $(target).on(s.touchEvents.end, sb.dragEnd);
            },
            disableDraggable: function () {
                var sb = s.scrollbar;
                var target = s.support.touch ? sb.track : document;
                $(sb.track).off(s.touchEvents.start, sb.dragStart);
                $(target).off(s.touchEvents.move, sb.dragMove);
                $(target).off(s.touchEvents.end, sb.dragEnd);
            },
            set: function () {
                if (!s.params.scrollbar) return;
                var sb = s.scrollbar;
                sb.track = $(s.params.scrollbar);
                if (s.params.uniqueNavElements && typeof s.params.scrollbar === 'string' && sb.track.length > 1 && s.container.find(s.params.scrollbar).length === 1) {
                    sb.track = s.container.find(s.params.scrollbar);
                }
                sb.drag = sb.track.find('.swiper-scrollbar-drag');
                if (sb.drag.length === 0) {
                    sb.drag = $('<div class="swiper-scrollbar-drag"></div>');
                    sb.track.append(sb.drag);
                }
                sb.drag[0].style.width = '';
                sb.drag[0].style.height = '';
                sb.trackSize = s.isHorizontal() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;
        
                sb.divider = s.size / s.virtualSize;
                sb.moveDivider = sb.divider * (sb.trackSize / s.size);
                sb.dragSize = sb.trackSize * sb.divider;
        
                if (s.isHorizontal()) {
                    sb.drag[0].style.width = sb.dragSize + 'px';
                }
                else {
                    sb.drag[0].style.height = sb.dragSize + 'px';
                }
        
                if (sb.divider >= 1) {
                    sb.track[0].style.display = 'none';
                }
                else {
                    sb.track[0].style.display = '';
                }
                if (s.params.scrollbarHide) {
                    sb.track[0].style.opacity = 0;
                }
            },
            setTranslate: function () {
                if (!s.params.scrollbar) return;
                var diff;
                var sb = s.scrollbar;
                var translate = s.translate || 0;
                var newPos;
        
                var newSize = sb.dragSize;
                newPos = (sb.trackSize - sb.dragSize) * s.progress;
                if (s.rtl && s.isHorizontal()) {
                    newPos = -newPos;
                    if (newPos > 0) {
                        newSize = sb.dragSize - newPos;
                        newPos = 0;
                    }
                    else if (-newPos + sb.dragSize > sb.trackSize) {
                        newSize = sb.trackSize + newPos;
                    }
                }
                else {
                    if (newPos < 0) {
                        newSize = sb.dragSize + newPos;
                        newPos = 0;
                    }
                    else if (newPos + sb.dragSize > sb.trackSize) {
                        newSize = sb.trackSize - newPos;
                    }
                }
                if (s.isHorizontal()) {
                    if (s.support.transforms3d) {
                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');
                    }
                    else {
                        sb.drag.transform('translateX(' + (newPos) + 'px)');
                    }
                    sb.drag[0].style.width = newSize + 'px';
                }
                else {
                    if (s.support.transforms3d) {
                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');
                    }
                    else {
                        sb.drag.transform('translateY(' + (newPos) + 'px)');
                    }
                    sb.drag[0].style.height = newSize + 'px';
                }
                if (s.params.scrollbarHide) {
                    clearTimeout(sb.timeout);
                    sb.track[0].style.opacity = 1;
                    sb.timeout = setTimeout(function () {
                        sb.track[0].style.opacity = 0;
                        sb.track.transition(400);
                    }, 1000);
                }
            },
            setTransition: function (duration) {
                if (!s.params.scrollbar) return;
                s.scrollbar.drag.transition(duration);
            }
        };

        /*=========================
          Controller
          ===========================*/
        s.controller = {
            LinearSpline: function (x, y) {
                this.x = x;
                this.y = y;
                this.lastIndex = x.length - 1;
                // Given an x value (x2), return the expected y2 value:
                // (x1,y1) is the known point before given value,
                // (x3,y3) is the known point after given value.
                var i1, i3;
                var l = this.x.length;
        
                this.interpolate = function (x2) {
                    if (!x2) return 0;
        
                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):
                    i3 = binarySearch(this.x, x2);
                    i1 = i3 - 1;
        
                    // We have our indexes i1 & i3, so we can calculate already:
                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1
                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];
                };
        
                var binarySearch = (function() {
                    var maxIndex, minIndex, guess;
                    return function(array, val) {
                        minIndex = -1;
                        maxIndex = array.length;
                        while (maxIndex - minIndex > 1)
                            if (array[guess = maxIndex + minIndex >> 1] <= val) {
                                minIndex = guess;
                            } else {
                                maxIndex = guess;
                            }
                        return maxIndex;
                    };
                })();
            },
            //xxx: for now i will just save one spline function to to
            getInterpolateFunction: function(c){
                if(!s.controller.spline) s.controller.spline = s.params.loop ?
                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :
                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);
            },
            setTranslate: function (translate, byController) {
               var controlled = s.params.control;
               var multiplier, controlledTranslate;
               function setControlledTranslate(c) {
                    // this will create an Interpolate function based on the snapGrids
                    // x is the Grid of the scrolled scroller and y will be the controlled scroller
                    // it makes sense to create this only once and recall it for the interpolation
                    // the function does a lot of value caching for performance
                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;
                    if (s.params.controlBy === 'slide') {
                        s.controller.getInterpolateFunction(c);
                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
                        // but it did not work out
                        controlledTranslate = -s.controller.spline.interpolate(-translate);
                    }
        
                    if(!controlledTranslate || s.params.controlBy === 'container'){
                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());
                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();
                    }
        
                    if (s.params.controlInverse) {
                        controlledTranslate = c.maxTranslate() - controlledTranslate;
                    }
                    c.updateProgress(controlledTranslate);
                    c.setWrapperTranslate(controlledTranslate, false, s);
                    c.updateActiveIndex();
               }
               if (s.isArray(controlled)) {
                   for (var i = 0; i < controlled.length; i++) {
                       if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
                           setControlledTranslate(controlled[i]);
                       }
                   }
               }
               else if (controlled instanceof Swiper && byController !== controlled) {
        
                   setControlledTranslate(controlled);
               }
            },
            setTransition: function (duration, byController) {
                var controlled = s.params.control;
                var i;
                function setControlledTransition(c) {
                    c.setWrapperTransition(duration, s);
                    if (duration !== 0) {
                        c.onTransitionStart();
                        c.wrapper.transitionEnd(function(){
                            if (!controlled) return;
                            if (c.params.loop && s.params.controlBy === 'slide') {
                                c.fixLoop();
                            }
                            c.onTransitionEnd();
        
                        });
                    }
                }
                if (s.isArray(controlled)) {
                    for (i = 0; i < controlled.length; i++) {
                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
                            setControlledTransition(controlled[i]);
                        }
                    }
                }
                else if (controlled instanceof Swiper && byController !== controlled) {
                    setControlledTransition(controlled);
                }
            }
        };

        /*=========================
          Hash Navigation
          ===========================*/
        s.hashnav = {
            init: function () {
                if (!s.params.hashnav) return;
                s.hashnav.initialized = true;
                var hash = document.location.hash.replace('#', '');
                if (!hash) return;
                var speed = 0;
                for (var i = 0, length = s.slides.length; i < length; i++) {
                    var slide = s.slides.eq(i);
                    var slideHash = slide.attr('data-hash');
                    if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {
                        var index = slide.index();
                        s.slideTo(index, speed, s.params.runCallbacksOnInit, true);
                    }
                }
            },
            setHash: function () {
                if (!s.hashnav.initialized || !s.params.hashnav) return;
                document.location.hash = s.slides.eq(s.activeIndex).attr('data-hash') || '';
            }
        };

        /*=========================
          Keyboard Control
          ===========================*/
        function handleKeyboard(e) {
            if (e.originalEvent) e = e.originalEvent; //jquery fix
            var kc = e.keyCode || e.charCode;
            // Directions locks
            if (!s.params.allowSwipeToNext && (s.isHorizontal() && kc === 39 || !s.isHorizontal() && kc === 40)) {
                return false;
            }
            if (!s.params.allowSwipeToPrev && (s.isHorizontal() && kc === 37 || !s.isHorizontal() && kc === 38)) {
                return false;
            }
            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
                return;
            }
            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {
                return;
            }
            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {
                var inView = false;
                //Check that swiper should be inside of visible area of window
                if (s.container.parents('.swiper-slide').length > 0 && s.container.parents('.swiper-slide-active').length === 0) {
                    return;
                }
                var windowScroll = {
                    left: window.pageXOffset,
                    top: window.pageYOffset
                };
                var windowWidth = window.innerWidth;
                var windowHeight = window.innerHeight;
                var swiperOffset = s.container.offset();
                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;
                var swiperCoord = [
                    [swiperOffset.left, swiperOffset.top],
                    [swiperOffset.left + s.width, swiperOffset.top],
                    [swiperOffset.left, swiperOffset.top + s.height],
                    [swiperOffset.left + s.width, swiperOffset.top + s.height]
                ];
                for (var i = 0; i < swiperCoord.length; i++) {
                    var point = swiperCoord[i];
                    if (
                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&
                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight
                    ) {
                        inView = true;
                    }
        
                }
                if (!inView) return;
            }
            if (s.isHorizontal()) {
                if (kc === 37 || kc === 39) {
                    if (e.preventDefault) e.preventDefault();
                    else e.returnValue = false;
                }
                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();
                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();
            }
            else {
                if (kc === 38 || kc === 40) {
                    if (e.preventDefault) e.preventDefault();
                    else e.returnValue = false;
                }
                if (kc === 40) s.slideNext();
                if (kc === 38) s.slidePrev();
            }
        }
        s.disableKeyboardControl = function () {
            s.params.keyboardControl = false;
            $(document).off('keydown', handleKeyboard);
        };
        s.enableKeyboardControl = function () {
            s.params.keyboardControl = true;
            $(document).on('keydown', handleKeyboard);
        };
        

        /*=========================
          Mousewheel Control
          ===========================*/
        s.mousewheel = {
            event: false,
            lastScrollTime: (new window.Date()).getTime()
        };
        if (s.params.mousewheelControl) {
            try {
                new window.WheelEvent('wheel');
                s.mousewheel.event = 'wheel';
            } catch (e) {
                if (window.WheelEvent || (s.container[0] && 'wheel' in s.container[0])) {
                    s.mousewheel.event = 'wheel';
                }
            }
            if (!s.mousewheel.event && window.WheelEvent) {
        
            }
            if (!s.mousewheel.event && document.onmousewheel !== undefined) {
                s.mousewheel.event = 'mousewheel';
            }
            if (!s.mousewheel.event) {
                s.mousewheel.event = 'DOMMouseScroll';
            }
        }
        function handleMousewheel(e) {
            if (e.originalEvent) e = e.originalEvent; //jquery fix
            var we = s.mousewheel.event;
            var delta = 0;
            var rtlFactor = s.rtl ? -1 : 1;
        
            //WebKits
            if (we === 'mousewheel') {
                if (s.params.mousewheelForceToAxis) {
                    if (s.isHorizontal()) {
                        if (Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY)) delta = e.wheelDeltaX * rtlFactor;
                        else return;
                    }
                    else {
                        if (Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX)) delta = e.wheelDeltaY;
                        else return;
                    }
                }
                else {
                    delta = Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY) ? - e.wheelDeltaX * rtlFactor : - e.wheelDeltaY;
                }
            }
            //Old FireFox
            else if (we === 'DOMMouseScroll') delta = -e.detail;
            //New FireFox
            else if (we === 'wheel') {
                if (s.params.mousewheelForceToAxis) {
                    if (s.isHorizontal()) {
                        if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) delta = -e.deltaX * rtlFactor;
                        else return;
                    }
                    else {
                        if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) delta = -e.deltaY;
                        else return;
                    }
                }
                else {
                    delta = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? - e.deltaX * rtlFactor : - e.deltaY;
                }
            }
            if (delta === 0) return;
        
            if (s.params.mousewheelInvert) delta = -delta;
        
            if (!s.params.freeMode) {
                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {
                    if (delta < 0) {
                        if ((!s.isEnd || s.params.loop) && !s.animating) s.slideNext();
                        else if (s.params.mousewheelReleaseOnEdges) return true;
                    }
                    else {
                        if ((!s.isBeginning || s.params.loop) && !s.animating) s.slidePrev();
                        else if (s.params.mousewheelReleaseOnEdges) return true;
                    }
                }
                s.mousewheel.lastScrollTime = (new window.Date()).getTime();
        
            }
            else {
                //Freemode or scrollContainer:
                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;
                var wasBeginning = s.isBeginning,
                    wasEnd = s.isEnd;
        
                if (position >= s.minTranslate()) position = s.minTranslate();
                if (position <= s.maxTranslate()) position = s.maxTranslate();
        
                s.setWrapperTransition(0);
                s.setWrapperTranslate(position);
                s.updateProgress();
                s.updateActiveIndex();
        
                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {
                    s.updateClasses();
                }
        
                if (s.params.freeModeSticky) {
                    clearTimeout(s.mousewheel.timeout);
                    s.mousewheel.timeout = setTimeout(function () {
                        s.slideReset();
                    }, 300);
                }
                else {
                    if (s.params.lazyLoading && s.lazy) {
                        s.lazy.load();
                    }
                }
        
                // Return page scroll on edge positions
                if (position === 0 || position === s.maxTranslate()) return;
            }
            if (s.params.autoplay) s.stopAutoplay();
        
            if (e.preventDefault) e.preventDefault();
            else e.returnValue = false;
            return false;
        }
        s.disableMousewheelControl = function () {
            if (!s.mousewheel.event) return false;
            s.container.off(s.mousewheel.event, handleMousewheel);
            return true;
        };
        
        s.enableMousewheelControl = function () {
            if (!s.mousewheel.event) return false;
            s.container.on(s.mousewheel.event, handleMousewheel);
            return true;
        };
        

        /*=========================
          Parallax
          ===========================*/
        function setParallaxTransform(el, progress) {
            el = $(el);
            var p, pX, pY;
            var rtlFactor = s.rtl ? -1 : 1;
        
            p = el.attr('data-swiper-parallax') || '0';
            pX = el.attr('data-swiper-parallax-x');
            pY = el.attr('data-swiper-parallax-y');
            if (pX || pY) {
                pX = pX || '0';
                pY = pY || '0';
            }
            else {
                if (s.isHorizontal()) {
                    pX = p;
                    pY = '0';
                }
                else {
                    pY = p;
                    pX = '0';
                }
            }
        
            if ((pX).indexOf('%') >= 0) {
                pX = parseInt(pX, 10) * progress * rtlFactor + '%';
            }
            else {
                pX = pX * progress * rtlFactor + 'px' ;
            }
            if ((pY).indexOf('%') >= 0) {
                pY = parseInt(pY, 10) * progress + '%';
            }
            else {
                pY = pY * progress + 'px' ;
            }
        
            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');
        }
        s.parallax = {
            setTranslate: function () {
                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){
                    setParallaxTransform(this, s.progress);
        
                });
                s.slides.each(function () {
                    var slide = $(this);
                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {
                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);
                        setParallaxTransform(this, progress);
                    });
                });
            },
            setTransition: function (duration) {
                if (typeof duration === 'undefined') duration = s.params.speed;
                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){
                    var el = $(this);
                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;
                    if (duration === 0) parallaxDuration = 0;
                    el.transition(parallaxDuration);
                });
            }
        };
        

        /*=========================
          Plugins API. Collect all and init all plugins
          ===========================*/
        s._plugins = [];
        for (var plugin in s.plugins) {
            var p = s.plugins[plugin](s, s.params[plugin]);
            if (p) s._plugins.push(p);
        }
        // Method to call all plugins event/method
        s.callPlugins = function (eventName) {
            for (var i = 0; i < s._plugins.length; i++) {
                if (eventName in s._plugins[i]) {
                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
                }
            }
        };

        /*=========================
          Events/Callbacks/Plugins Emitter
          ===========================*/
        function normalizeEventName (eventName) {
            if (eventName.indexOf('on') !== 0) {
                if (eventName[0] !== eventName[0].toUpperCase()) {
                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);
                }
                else {
                    eventName = 'on' + eventName;
                }
            }
            return eventName;
        }
        s.emitterEventListeners = {
        
        };
        s.emit = function (eventName) {
            // Trigger callbacks
            if (s.params[eventName]) {
                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
            }
            var i;
            // Trigger events
            if (s.emitterEventListeners[eventName]) {
                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
                }
            }
            // Trigger plugins
            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        };
        s.on = function (eventName, handler) {
            eventName = normalizeEventName(eventName);
            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];
            s.emitterEventListeners[eventName].push(handler);
            return s;
        };
        s.off = function (eventName, handler) {
            var i;
            eventName = normalizeEventName(eventName);
            if (typeof handler === 'undefined') {
                // Remove all handlers for such event
                s.emitterEventListeners[eventName] = [];
                return s;
            }
            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;
            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);
            }
            return s;
        };
        s.once = function (eventName, handler) {
            eventName = normalizeEventName(eventName);
            var _handler = function () {
                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
                s.off(eventName, _handler);
            };
            s.on(eventName, _handler);
            return s;
        };

        // Accessibility tools
        s.a11y = {
            makeFocusable: function ($el) {
                $el.attr('tabIndex', '0');
                return $el;
            },
            addRole: function ($el, role) {
                $el.attr('role', role);
                return $el;
            },
        
            addLabel: function ($el, label) {
                $el.attr('aria-label', label);
                return $el;
            },
        
            disable: function ($el) {
                $el.attr('aria-disabled', true);
                return $el;
            },
        
            enable: function ($el) {
                $el.attr('aria-disabled', false);
                return $el;
            },
        
            onEnterKey: function (event) {
                if (event.keyCode !== 13) return;
                if ($(event.target).is(s.params.nextButton)) {
                    s.onClickNext(event);
                    if (s.isEnd) {
                        s.a11y.notify(s.params.lastSlideMessage);
                    }
                    else {
                        s.a11y.notify(s.params.nextSlideMessage);
                    }
                }
                else if ($(event.target).is(s.params.prevButton)) {
                    s.onClickPrev(event);
                    if (s.isBeginning) {
                        s.a11y.notify(s.params.firstSlideMessage);
                    }
                    else {
                        s.a11y.notify(s.params.prevSlideMessage);
                    }
                }
                if ($(event.target).is('.' + s.params.bulletClass)) {
                    $(event.target)[0].click();
                }
            },
        
            liveRegion: $('<span class="swiper-notification" aria-live="assertive" aria-atomic="true"></span>'),
        
            notify: function (message) {
                var notification = s.a11y.liveRegion;
                if (notification.length === 0) return;
                notification.html('');
                notification.html(message);
            },
            init: function () {
                // Setup accessibility
                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                    s.a11y.makeFocusable(s.nextButton);
                    s.a11y.addRole(s.nextButton, 'button');
                    s.a11y.addLabel(s.nextButton, s.params.nextSlideMessage);
                }
                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                    s.a11y.makeFocusable(s.prevButton);
                    s.a11y.addRole(s.prevButton, 'button');
                    s.a11y.addLabel(s.prevButton, s.params.prevSlideMessage);
                }
        
                $(s.container).append(s.a11y.liveRegion);
            },
            initPagination: function () {
                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {
                    s.bullets.each(function () {
                        var bullet = $(this);
                        s.a11y.makeFocusable(bullet);
                        s.a11y.addRole(bullet, 'button');
                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));
                    });
                }
            },
            destroy: function () {
                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();
            }
        };
        

        /*=========================
          Init/Destroy
          ===========================*/
        s.init = function () {
            if (s.params.loop) s.createLoop();
            s.updateContainerSize();
            s.updateSlidesSize();
            s.updatePagination();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
                if (s.params.scrollbarDraggable) {
                    s.scrollbar.enableDraggable();
                }
            }
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                if (!s.params.loop) s.updateProgress();
                s.effects[s.params.effect].setTranslate();
            }
            if (s.params.loop) {
                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);
            }
            else {
                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);
                if (s.params.initialSlide === 0) {
                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();
                    if (s.lazy && s.params.lazyLoading) {
                        s.lazy.load();
                        s.lazy.initialImageLoaded = true;
                    }
                }
            }
            s.attachEvents();
            if (s.params.observer && s.support.observer) {
                s.initObservers();
            }
            if (s.params.preloadImages && !s.params.lazyLoading) {
                s.preloadImages();
            }
            if (s.params.autoplay) {
                s.startAutoplay();
            }
            if (s.params.keyboardControl) {
                if (s.enableKeyboardControl) s.enableKeyboardControl();
            }
            if (s.params.mousewheelControl) {
                if (s.enableMousewheelControl) s.enableMousewheelControl();
            }
            if (s.params.hashnav) {
                if (s.hashnav) s.hashnav.init();
            }
            if (s.params.a11y && s.a11y) s.a11y.init();
            s.emit('onInit', s);
        };
        
        // Cleanup dynamic styles
        s.cleanupStyles = function () {
            // Container
            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');
        
            // Wrapper
            s.wrapper.removeAttr('style');
        
            // Slides
            if (s.slides && s.slides.length) {
                s.slides
                    .removeClass([
                      s.params.slideVisibleClass,
                      s.params.slideActiveClass,
                      s.params.slideNextClass,
                      s.params.slidePrevClass
                    ].join(' '))
                    .removeAttr('style')
                    .removeAttr('data-swiper-column')
                    .removeAttr('data-swiper-row');
            }
        
            // Pagination/Bullets
            if (s.paginationContainer && s.paginationContainer.length) {
                s.paginationContainer.removeClass(s.params.paginationHiddenClass);
            }
            if (s.bullets && s.bullets.length) {
                s.bullets.removeClass(s.params.bulletActiveClass);
            }
        
            // Buttons
            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);
            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);
        
            // Scrollbar
            if (s.params.scrollbar && s.scrollbar) {
                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');
                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');
            }
        };
        
        // Destroy
        s.destroy = function (deleteInstance, cleanupStyles) {
            // Detach evebts
            s.detachEvents();
            // Stop autoplay
            s.stopAutoplay();
            // Disable draggable
            if (s.params.scrollbar && s.scrollbar) {
                if (s.params.scrollbarDraggable) {
                    s.scrollbar.disableDraggable();
                }
            }
            // Destroy loop
            if (s.params.loop) {
                s.destroyLoop();
            }
            // Cleanup styles
            if (cleanupStyles) {
                s.cleanupStyles();
            }
            // Disconnect observer
            s.disconnectObservers();
            // Disable keyboard/mousewheel
            if (s.params.keyboardControl) {
                if (s.disableKeyboardControl) s.disableKeyboardControl();
            }
            if (s.params.mousewheelControl) {
                if (s.disableMousewheelControl) s.disableMousewheelControl();
            }
            // Disable a11y
            if (s.params.a11y && s.a11y) s.a11y.destroy();
            // Destroy callback
            s.emit('onDestroy');
            // Delete instance
            if (deleteInstance !== false) s = null;
        };
        
        s.init();
        

    
        // Return swiper instance
        return s;
    };
    

    /*==================================================
        Prototype
    ====================================================*/
    Swiper.prototype = {
        isSafari: (function () {
            var ua = navigator.userAgent.toLowerCase();
            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);
        })(),
        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),
        isArray: function (arr) {
            return Object.prototype.toString.apply(arr) === '[object Array]';
        },
        /*==================================================
        Browser
        ====================================================*/
        browser: {
            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,
            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1)
        },
        /*==================================================
        Devices
        ====================================================*/
        device: (function () {
            var ua = navigator.userAgent;
            var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
            var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
            var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
            var iphone = !ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);
            return {
                ios: ipad || iphone || ipod,
                android: android
            };
        })(),
        /*==================================================
        Feature Detection
        ====================================================*/
        support: {
            touch : (window.Modernizr && Modernizr.touch === true) || (function () {
                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);
            })(),
    
            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {
                var div = document.createElement('div').style;
                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);
            })(),
    
            flexbox: (function () {
                var div = document.createElement('div').style;
                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');
                for (var i = 0; i < styles.length; i++) {
                    if (styles[i] in div) return true;
                }
            })(),
    
            observer: (function () {
                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);
            })()
        },
        /*==================================================
        Plugins
        ====================================================*/
        plugins: {}
    };
    

    /*===========================
     Get Dom libraries
     ===========================*/
    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];
    for (var i = 0; i < swiperDomPlugins.length; i++) {
    	if (window[swiperDomPlugins[i]]) {
    		addLibraryPlugin(window[swiperDomPlugins[i]]);
    	}
    }
    // Required DOM Plugins
    var domLib;
    if (typeof Dom7 === 'undefined') {
    	domLib = window.Dom7 || window.Zepto || window.jQuery;
    }
    else {
    	domLib = Dom7;
    }

    /*===========================
    Add .swiper plugin from Dom libraries
    ===========================*/
    function addLibraryPlugin(lib) {
        lib.fn.swiper = function (params) {
            var firstInstance;
            lib(this).each(function () {
                var s = new Swiper(this, params);
                if (!firstInstance) firstInstance = s;
            });
            return firstInstance;
        };
    }
    
    if (domLib) {
        if (!('transitionEnd' in domLib.fn)) {
            domLib.fn.transitionEnd = function (callback) {
                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],
                    i, j, dom = this;
                function fireCallBack(e) {
                    /*jshint validthis:true */
                    if (e.target !== this) return;
                    callback.call(this, e);
                    for (i = 0; i < events.length; i++) {
                        dom.off(events[i], fireCallBack);
                    }
                }
                if (callback) {
                    for (i = 0; i < events.length; i++) {
                        dom.on(events[i], fireCallBack);
                    }
                }
                return this;
            };
        }
        if (!('transform' in domLib.fn)) {
            domLib.fn.transform = function (transform) {
                for (var i = 0; i < this.length; i++) {
                    var elStyle = this[i].style;
                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;
                }
                return this;
            };
        }
        if (!('transition' in domLib.fn)) {
            domLib.fn.transition = function (duration) {
                if (typeof duration !== 'string') {
                    duration = duration + 'ms';
                }
                for (var i = 0; i < this.length; i++) {
                    var elStyle = this[i].style;
                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;
                }
                return this;
            };
        }
    }

    window.Swiper = Swiper;
})();
/*===========================
Swiper AMD Export
===========================*/
if (typeof(module) !== 'undefined')
{
    module.exports = window.Swiper;
}
else if (typeof define === 'function' && define.amd) {
    define('swiper',[], function () {
        'use strict';
        return window.Swiper;
    });
}
//# sourceMappingURL=maps/swiper.jquery.js.map

/* ===============================================================================
************ Swiper ************
=============================================================================== */
/* global $:true */

+function ($) {
  "use strict";

  var defaults;

  $.fn.swiper = function(params) {
    return this.each(function() {
      if(!this) return;
      var $this = $(this);
      var swiper = $this.data("swiper");
      if(!swiper) $this.data("swiper", new Swiper(this, $.extend({}, defaults, params))); 
      return swiper;
    });
  }

  defaults = $.fn.swiper.prototype.defaults = {
    pagination: ".swiper-pagination"
  };

}($);

/* global $:true */
+ function($) {

  var defaults;

  var Photos = function(config) {
    this.initConfig(config);
    this.index = 0;
  }

  Photos.prototype = {
    initConfig: function (config) {
      this.config = $.extend({}, defaults, config);
      this.activeIndex = this.lastActiveIndex = this.config.initIndex;

      this.config.items = this.config.items.map(function(d, i) {
        if(typeof d === typeof 'a') {
          return {
            image: d,
            caption: ''
          }
        }
        return d;
      });

      this.tpl = $.t7.compile(this.config.tpl);
      if(this.config.autoOpen) this.open();
    },

    open: function (index) {
      if (this._open) return false;
      if (!this.modal) {
        this.modal = $(this.tpl(this.config)).appendTo(document.body);
        this.container = this.modal.find('.swiper-container');
        this.wrapper = this.modal.find('.swiper-wrapper');

        var hammer = new Hammer(this.container[0]);
        hammer.get('pinch').set({ enable: true });
        hammer.on('pinchstart', $.proxy(this.onGestureStart, this));
        hammer.on('pinchmove', $.proxy(this.onGestureChange, this));
        hammer.on('pinchend', $.proxy(this.onGestureEnd, this));
        this.modal.on($.touchEvents.start, $.proxy(this.onTouchStart, this));
        this.modal.on($.touchEvents.move, $.proxy(this.onTouchMove, this));
        this.modal.on($.touchEvents.end, $.proxy(this.onTouchEnd, this));

        //init index
        this.wrapper.transition(0);
        this.wrapper.transform('translate3d(-' + $(window).width()*this.config.initIndex + 'px,0,0)');
        this.container.find('.caption-item').eq(this.config.initIndex).addClass('active');
        this.container.find('.swiper-pagination-bullet').eq(this.config.initIndex).addClass('swiper-pagination-bullet-active');
      }

      var self = this;
      this.modal.show().height();
      this.modal.addClass('weui-photo-browser-modal-visible');
      this.container.addClass('swiper-container-visible').transitionEnd(function() {
        self.initParams();
        if(self.config.onOpen) {
          self.config.onOpen.call(self);
        }
      });

      this._open = true;
      if(index !== undefined) {
        this.slideTo(index, 0);
      }
    },

    close: function() {
      this.container.transitionEnd($.proxy(function() {
        this.modal.hide();
        this._open = false;
        if(this.config.onClose) this.config.onClose.call(this);
      }, this));
      this.container.removeClass('swiper-container-visible');
      this.modal.removeClass('weui-photo-browser-modal-visible');
    },

    initParams: function () {
      if(this.containerHeight) return false;

      this.windowWidth = $(window).width();
      this.containerHeight = this.container.height();
      this.containerWidth = this.container.width();

      this.touchStart = {};

      this.wrapperTransform = 0;
      this.wrapperLastTransform = - $(window).width()*this.config.initIndex;
      this.wrapperDiff = 0;

      this.lastScale = 1;
      this.currentScale = 1;

      this.imageLastTransform = { x: 0, y: 0 };
      this.imageTransform = { x: 0, y: 0 };
      this.imageDiff = { x: 0, y: 0 };
      this.imageLastDiff = { x: 0, y: 0 };
    },

    onTouchStart: function (e) {
      if(this.scaling) return false;
      this.touching = true;
      this.touchStart = $.getTouchPosition(e);
      this.touchMove = null;
      this.touchStartTime = + new Date;
      this.wrapperDiff = 0;
      this.breakpointPosition = null;
    },

    onTouchMove: function (e) {
      if(!this.touching || this.scaling) return false;

      e.preventDefault();

      if(this.gestureImage) {
        var rect = this.gestureImage[0].getBoundingClientRect();
        if (rect.left >= 0 || rect.right <= this.windowWidth) {
          this.overflow = true;
        } else {
          this.overflow = false;
        }
      } else {
        this.oveflow = false;
      }
      var p = this.touchMove = $.getTouchPosition(e);
      if(this.currentScale === 1 || this.overflow) {
        if(this.breakpointPosition) {
          this.wrapperDiff = p.x - this.breakpointPosition.x;
        } else {
          this.wrapperDiff = p.x - this.touchStart.x;
        }
        if(this.activeIndex === 0 && this.wrapperDiff > 0) this.wrapperDiff = Math.pow(this.wrapperDiff, .8);
        if(this.activeIndex === this.config.items.length - 1 && this.wrapperDiff < 0) this.wrapperDiff = - Math.pow(-this.wrapperDiff, .8);
        this.wrapperTransform = this.wrapperLastTransform + this.wrapperDiff;
        this.doWrapperTransform();
      } else {
        var img = this.gestureImage;
        this.imageDiff = {
          x: p.x - this.touchStart.x,
          y: p.y - this.touchStart.y
        }

        this.imageTransform = {
          x: this.imageDiff.x + this.imageLastTransform.x,
          y: this.imageDiff.y + this.imageLastTransform.y
        };
        this.doImageTransform();

        this.breakpointPosition = p;

        this.imageLastDiff = this.imageDiff;
      }
    },

    onTouchEnd: function (e) {
      if(!this.touching) return false;
      this.touching = false;
      if(this.scaling) return false;
      var duration = (+ new Date) - this.touchStartTime;

      if(duration < 200 && (!this.touchMove || Math.abs(this.touchStart.x - this.touchMove.x) <= 2 && Math.abs(this.touchStart.y - this.touchMove.y) <= 2)) {
        this.onClick();
        return;
      }
      if(this.wrapperDiff > 0) {
        if(this.wrapperDiff > this.containerWidth/2 || (this.wrapperDiff > 20 && duration < 300)) {
          this.slidePrev();
        } else {
          this.slideTo(this.activeIndex, 200);
        }
      } else {
        if(- this.wrapperDiff > this.containerWidth/2 || (-this.wrapperDiff > 20 && duration < 300)) {
          this.slideNext();
        } else {
          this.slideTo(this.activeIndex, 200);
        }
      }

      this.imageLastTransform = this.imageTransform;

      this.adjust();
    },

    onClick: function () {
      var self = this;
      if (this._lastClickTime && ( + new Date - this._lastClickTime < 300)) {
        this.onDoubleClick();
        clearTimeout(this._clickTimeout);
      } else {
        this._clickTimeout = setTimeout(function () {
          self.close();
        }, 300);
      }
      this._lastClickTime = + new Date;
    },

    onDoubleClick: function () {
      this.gestureImage = this.container.find('.swiper-slide').eq(this.activeIndex).find('img');
      this.currentScale = this.currentScale > 1 ? 1 : 2;
      this.doImageTransform(200); 
      this.adjust();
    },

    onGestureStart: function (e) {
      this.scaling = true;
      this.gestureImage = this.container.find('.swiper-slide').eq(this.activeIndex).find('img');
    },

    onGestureChange: function (e) {
      var s = this.lastScale * e.scale;
      if (s > this.config.maxScale) {
        s = this.config.maxScale + Math.pow((s - this.config.maxScale), 0.5);
      } else if (s < 1) {
        s = Math.pow(s, .5);
      }
      this.currentScale = s;
      this.doImageTransform();
    },

    onGestureEnd: function (e) {
      if (this.currentScale > this.config.maxScale) {
        this.currentScale = this.config.maxScale;
        this.doImageTransform(200);
      } else if (this.currentScale < 1) {
        this.currentScale = 1;
        this.doImageTransform(200);
      }
      this.lastScale = this.currentScale;
      this.scaling = false;
      this.adjust();
    },

    doWrapperTransform: function(duration, callback) {
      if (duration === 0) {
        var origin = this.wrapper.css('transition-property')
        this.wrapper.css('transition-property', 'none').transform('translate3d(' + this.wrapperTransform + 'px, 0, 0)');
        this.wrapper.css('transition-property', origin);
        callback()
      } else {
        this.wrapper.transitionEnd(function() {
          callback && callback();
        });
        this.wrapper.transition(duration || 0).transform('translate3d(' + this.wrapperTransform + 'px, 0, 0)');
      }
    },

    doImageTransform: function(duration, callback) {
      if(!this.gestureImage) return;
      this.gestureImage.transition(duration || 0).transform('translate3d(' + this.imageTransform.x + 'px,' + this.imageTransform.y + 'px, 0) scale(' + this.currentScale + ')');
      this._needAdjust = true;
    },

    adjust: function() {
      if(!this._needAdjust) return false;
      var img = this.gestureImage;
      if(!img) return false;
      if(this.currentScale === 1) {
        this.imageTransform = this.imageLastDiff =  {x:0,y:0};
        this.doImageTransform(200);
        return;
      }

      var rect = img[0].getBoundingClientRect();

      //调整上下
      if(rect.height < this.containerHeight) {  // 如果高度没容器高，则自动居中
        this.imageTransform.y = this.imageLastTransform.y = 0;
      } else {  //如果比容器高，那么要保证上下不能有空隙
        if(rect.top > 0) this.imageTransform.y = this.imageTransform.y - rect.top;
        else if(rect.bottom < this.containerHeight) this.imageTransform.y = this.imageTransform.y + this.containerHeight - rect.bottom;
      }

      this.doImageTransform(200);
      this._needAdjust = false; // must at last line, because doImageTransform will set this._needAdjust true
    },

    slideTo: function(index, duration) {
      if(index < 0) index = 0;
      if(index > this.config.items.length-1) index = this.config.items.length - 1;
      this.lastActiveIndex = this.activeIndex;
      this.activeIndex = index;
      this.wrapperTransform = - (index * this.containerWidth);
      this.wrapperLastTransform = this.wrapperTransform;
      this.doWrapperTransform(duration, $.proxy(function() {
        if(this.lastActiveIndex === this.activeIndex) return false; // active index not change
        this.container.find('.caption-item.active').removeClass('active');
        this.container.find('.swiper-slide-active').removeClass('swiper-slide-active');
        this.container.find('.swiper-pagination-bullet-active').removeClass('swiper-pagination-bullet-active');
        this.container.find('.caption-item').eq(this.activeIndex).addClass('active');
        this.container.find('.swiper-slide').eq(this.activeIndex).addClass('swiper-slide-active');
        this.container.find('.swiper-pagination-bullet').eq(this.activeIndex).addClass('swiper-pagination-bullet-active');

        //reset image transform
        this.container.find('.swiper-slide img[style]').transition(0).transform('translate3d(0,0,0) scale(1)');

        this.lastScale = 1;
        this.currentScale = 1;

        this.imageLastTransform = { x: 0, y: 0 };
        this.imageTransform = { x: 0, y: 0 };
        this.imageDiff = { x: 0, y: 0 };
        this.imageLastDiff = { x: 0, y: 0 };

        if(this.config.onSlideChange) {
          this.config.onSlideChange.call(this, this.activeIndex);
        }

      }, this));
    },
    slideNext: function() {
      return this.slideTo(this.activeIndex+1, 200);
    },
    slidePrev: function() {
      return this.slideTo(this.activeIndex-1, 200);
    }
  }

  defaults = Photos.prototype.defaults = {
    items: [],
    autoOpen: false, //初始化完成之后立刻打开
    onOpen: undefined,
    onClose: undefined,
    initIndex: 0, //打开时默认显示第几张
    maxScale: 3,
    onSlideChange: undefined,
    tpl: '<div class="weui-photo-browser-modal">\
            <div class="swiper-container">\
              <div class="swiper-wrapper">\
                {{#items}}\
                <div class="swiper-slide">\
                  <div class="photo-container">\
                    <img src="{{image}}" />\
                  </div>\
                </div>\
                {{/items}}\
              </div>\
              <div class="caption">\
                {{#items}}\
                <div class="caption-item caption-item-{{@index}}">{{caption}}</div>\
                {{/items}}\
              </div>\
              <div class="swiper-pagination swiper-pagination-bullets">\
                {{#items}}\
                <span class="swiper-pagination-bullet"></span>\
                {{/items}}\
              </div>\
            </div>\
          </div>'
  }

  $.photoBrowser = function(params) {
    return new Photos(params);
  }
}($);


define('text!view/mobile_repository/tpl/question.html',[],function () { return '<div class="common-content bg-gray" id="mobileRepositoryQuestion">\r\n    <div class="content">\r\n        <div class="weui_cells weui_cells_form app_detail_content">\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <textarea class="weui_textarea input_question" placeholder="请在这里描述你的问题~"></textarea>\r\n                    <div class="weui_textarea_counter"><span>0</span>/400</div>\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell clearfix input_image_wrapper">\r\n                <div class="input_image_btn">\r\n                    <div class="btn_camera">\r\n                        <i class="iconfont icon-paizhaoshangchuan"></i>\r\n                    </div>\r\n                </div>\r\n                <div class="input_image_content">\r\n                    <!--<div class="warning">请上传相关图片</div>-->\r\n                    <div class="clearfix imaging" style="">\r\n                        <!--<div class="input_image_box">\r\n                            <div class="img">\r\n                                <div class="img_img" style="background: url(app_img/none.jpg) no-repeat center center/cover"></div>\r\n                                <img src="app_img/noavatar.png">\r\n                            \r\n                                <div class="delete">\r\n                                    <i class="iconfont icon-cuowu"></i>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            \r\n                        </div>-->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!--<div class="input-camera">\r\n            <div class="btn-input-camera disabled">\r\n                <i class="iconfont icon-paizhaoshangchuan"></i>\r\n            </div>\r\n            <div class="input-image clearfix">\r\n                <div class="input-image-box">\r\n                    <img src="app_img/noavatar.png">\r\n                    <div class="delete">\r\n                        <i class="iconfont icon-cuowu"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>-->\r\n\r\n        <div class="weui_cells weui_cells_form select_wrapper">\r\n            <div class="weui_cell weui_cell_select">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <select class="weui_select input_select_type" name="select1">\r\n                        <option selected="" value="">类别</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="ctrl btn-submit">\r\n        提交\r\n    </div>\r\n</div>\r\n\r\n<div class="upload-loading-mask">\r\n    <div class="upload-loading-inner">\r\n        <p>正在上传 <span class="upload-index">0</span>/<span class="upload-total">0</span> 张图片</p>\r\n        <div class="weui_progress">\r\n            <div class="weui_progress_bar">\r\n                <div class="weui_progress_inner_bar js_progress upload-progress" style="width: 0%;"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="typeTpl" type="text/template">\r\n    <option selected="" value="">请选择题目类型</option>\r\n    <% _.each(list, function(v){ %>\r\n        <option value="<%=v.uuid%>"><%=v.title%></option>\r\n    <% }); %>\r\n</script>\r\n\r\n<script id="imageTpl" type="text/template">\r\n    <div class="input_image_box">\r\n        <div class="img">\r\n            <img src="<%=src%>" class="prepare-upload hide">\r\n            <div class="img_img" style="background: url(<%=src%>) no-repeat center center/cover"></div>\r\n        \r\n            <div class="delete">\r\n                <i class="iconfont icon-cuowu"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</script>';});


define('text!view/tpl/_get-image.html',[],function () { return '<div class="slide-bottom-mask full">\r\n    <div class="btn-back hide"></div>\r\n    <div class="slide-bottom-content">\r\n        <div class="slide-bottom-ctrl">\r\n            <div class="ctrl-button btn-camera">拍摄</div>\r\n            <div class="ctrl-button hasline btn-gallery">我的相册</div>\r\n        </div>\r\n        <div class="slide-bottom-ctrl">\r\n            <div class="ctrl-button btn-cancel-get-image">取消</div>\r\n        </div>\r\n    </div>\r\n</div>';});

define('view/get-image',['require','exports','module','jquery','underscore','backbone','phonegaputil','text!view/tpl/_get-image.html','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	var phonegaputil = require('phonegaputil');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/tpl/_get-image.html');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
		events: {
            'tap .btn-cancel-get-image': 'backbutton',
            // 'tap .full': 'backbutton',
            'tap .btn-camera': 'getImageByCamera',
            'tap .btn-gallery': 'getImageByGallery'
		},
		getImageByCamera: function () {
			phonegaputil.getImageViaCamera(_.bind(function (src) {
				this.trigger('get', src);
				this.back();
			}, this), _.bind(function (error) {
				// this.back();
				console.log('调用相机报错', 'cancel');
			}, this), this.options);

			return false;
		},
		getImageByGallery: function () {
			phonegaputil.getImageViaGallery(_.bind(function (src) {
				if (src) {
					this.trigger('get', src);
					this.back();
				}
			}, this), _.bind(function (error) {
				// this.back();
				console.log('调用相册报错', 'cancel');
			}, this), this.options);

			return false;
		},
		initialize: function (options) {
			this.options = {
				crop: false,
				title: '选择照片'
			};

			if (options) {
				this.options = _.extend(this.options,options);
			}

			var tpl = _.template(template)({title: this.options.title});
			this.$el.empty().append(tpl);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
*   知识库提问
**/

define('view/mobile_repository/question',['require','exports','module','jquery','underscore','backbone','touch','swiper','jquery-weui','utils','phonegaputil','business-delegate','text!view/mobile_repository/tpl/question.html','view/app-header','view/get-image'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('swiper');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/mobile_repository/tpl/question.html');
    var AppHeader = require('view/app-header');
    var GetImage = require('view/get-image');

    var View = Backbone.View.extend({
        el: 'body',
        events: {
            'keyup .input_question': 'countText',
            'tap .delete': 'deleteImage',
            'tap .input_image_box': 'showImage',
            'tap .input_image_btn': 'selectWay',
            'tap .btn-submit': 'validSubmit'
        },
        countText: function (e) {
            var $e = $(e.currentTarget);
            var text = $.trim($e.val());

            var count = utils.getStrBytesLength(text);
            if (count > this.countLimit) {
                this.$('.btn-submit').prop('disabled', true);
                this.$count.html('<span style="color: red">' + count + '</span>');
            } else {
                this.$('.btn-submit').prop('disabled', false);
                this.$count.html(count);
            }
        },
        showImage: function (e) {
            var $e = $(e.currentTarget)
            var index = $e.find('img').index('.input_image_box img');

            var arr = _.pluck(this.$('.input_image_box img'), 'src');

            this.pb = $.photoBrowser({
                items: arr,
                onOpen: _.bind(function () {
                    this.isPb = 1;
                }, this),
                onClose: _.bind(function () {
                    this.isPb = 0;
                }, this),
                initIndex: index
            });

            this.pb.open();
        },
        renderImage: function (src) {
            var imageTpl = _.template(this.imageTemplate)({ src: src });
            this.$picContent.append(imageTpl);

            this.$picContent.show();
            this.$picWarning.hide();
        },
        selectWay: function (e) {
            var $e = $(e.currentTarget);
            if ($e.hasClass('disabled')) {
                return;
            }

            if (this.$('.input_image_box').length == 9) {
                $.jtoast('最多只能添加9张图片');
                return;
            }

            var view = new GetImage();
            view.on('get', _.bind(this.renderImage, this));
            view.show();
        },
        deleteImage: function (e) {
            var $e = $(e.currentTarget);
            $e.parent().remove();

            if (!this.$('.input_image_box').length) {
                this.$picContent.hide();
                this.$picWarning.show();
            }
            return false;
        },
        validSubmit: function () {
            if (this.$count.html() > this.countLimit) {
                return;
            }

            var type = $.trim(this.$typeInput.val());
            var text = $.trim(this.$input.val());

            if (!type) {
                $.jtoast('请选择题目类型');
                return;
            }

            if (!text) {
                $.jtoast('请填写问题内容');
                return;
            }

            this.valid = {};
            this.valid.queTypeUuid = type;
            this.valid.queDesc = text;
            this.valid.queImgJson = [];

            this.startUpload = 0;
            this.retryUploadCount = 0;

            this.canBack = 0;

            this.imageUpload();
        },
        imageUpload: function () {
            this.$uploadingImage = this.$picContent.find('img.prepare-upload:eq(0)');

            //是否存在图片需要上传
            if (this.$uploadingImage.length > 0) {
                this.$uploadLoading.show();

                if (!this.startUpload) {
                    this.startUpload = 1;
                    var sum = this.$('img.prepare-upload').length;
                    this.$uploadTotal.html(sum);
                }

                var num = this.$uploadingImage.index('img') + 1;
                this.$uploadIndex.html(num);

                var imageURI = this.$uploadingImage.attr('src');
                var uploadAction = businessDelegate.getUploadUrl();
                var dataParam = phonegaputil.getHeadAndBody({ bucketName: this.bucketName, width: 640 });
                var param = { b: JSON.stringify(dataParam) };

                //开始上传图片
                phonegaputil.uploadPhoto(imageURI, uploadAction, param, _.bind(this.uploadSuccess, this), _.bind(this.uploadFailed, this), _.bind(this.uploadProgress, this));
            } else {
                //上传数据
                this.clearUploadLoading();
                this.valid.queImgJson = this.imageinfo;
                this.submitData();
            }
        },
        //上传成功
        uploadSuccess: function (entry) {
            var data = $.parseJSON(entry.response);

            //上传成功
            if (data.code === 0) {
                // 取消未上传标识
                this.$uploadingImage.removeClass('prepare-upload');

                //获取返回参数result:{key,url}
                this.imageinfo.push(data.obj.relativeUrl);
                this.imageUpload();
            } else {
                this.canBack = 1;
                $.jtoast('上传失败，请重试');
                this.clearUploadLoading();
            }
        },
        //上传失败
        uploadFailed: function (error) {
            console.log('error: ' + error);
            // 失败自动重试
            this.retryUploadCount++;
            if (this.retryUploadCount > 10) {
                //上传图片结束
                this.canBack = 1;
                $.jtoast('上传失败, 请重试');
                this.clearUploadLoading();
            } else {
                this.imageUpload();
            }
        },
        //进度条
        uploadProgress: function (progressEvent) {
            if (progressEvent.lengthComputable) {
                var perc = Math.floor(progressEvent.loaded / progressEvent.total * 100);
                this.$uploadPer.css('width', perc + '%');
            } else {
                console.log('loading.........');
            }
        },
        submitData: function () {
            $.showLoading('正在提交...');
            businessDelegate.addKnowledgeQuestion(this.valid, _.bind(function (data) {
                this.canBack = 1;
                $.hideLoading();
                $.toast('提交成功');
                this.clearForm();
            }, this), _.bind(function (err) {
                this.canBack = 1;
                $.hideLoading();
                $.jtoast(err);
            }, this));
        },
        clearUploadLoading: function () {
            this.$uploadLoading.hide();
            this.$uploadIndex.html('0');
            this.$uploadTotal.html('0');
            this.$uploadPer.css('width', '0%');
        },
        clearForm: function () {
            this.$typeInput.val('');
            this.$input.val('');
            this.$('.input_image_box').remove();
            this.$('.weui_textarea_counter>span').html('0');
            this.imageinfo = [];

            this.clearUploadLoading();
        },
        initType: function () {
            $.showLoading();
            businessDelegate.getKnowledgeQuestionType(_.bind(function (data) {
                $.hideLoading();

                var tpl = _.template(this.typeTemplate)({ list: data.obj });
                this.$typeInput.html(tpl);

                this.$('.btn-submit').prop('disabled', false);
            }, this), _.bind(function (err) {
                $.hideLoading();
                $.jtoast(err);
            }, this))
        },
        backbutton: function () {
            if (!this.canBack) {
                return;
            }

            if (this.isPb) {
                this.pb.close();
                return;
            }

            Backbone.history.navigate('mobile-repository-index', { trigger: true });
        },
        initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '我要提问'
            });

            this.$el.empty().append(this.header.$el).append(template);

            this.canBack = 1;

            this.countLimit = 400;
            this.$count = this.$('.weui_textarea_counter > span');

            this.$picContent = this.$('.input_image_content > .imaging');
            this.$picWarning = this.$('.input_image_content > .warning');

            this.imageTemplate = this.$('#imageTpl').html();
            this.typeTemplate = this.$('#typeTpl').html();
            this.$typeInput = this.$('.input_select_type');
            this.$input = this.$('.input_question');

            this.bucketName = 'question';
            this.imageinfo = [];
            this.pb = null;
            this.isPb = 0;

            this.$uploadLoading = this.$('.upload-loading-mask');
            this.$uploadIndex = this.$('.upload-index');
            this.$uploadTotal = this.$('.upload-total');
            this.$uploadPer = this.$('.upload-progress');
        },
        render: function () {
            this.initType();
            return this;
        }
    });

    return View;
});


define('text!view/mobile_repository/tpl/my.html',[],function () { return '<div class="common-content mobile_repository_common_content bg-gray" id="mobileRepositoryMyQuestion">\r\n    <div class="content full">\r\n        <div class="header common_header_for_read_knowledge bg-white" id="mobileRepositoryBaseHeader">\r\n            <div class="list_ctrl_bar pd10 clearfix">\r\n                <div class="pull-right show_ctrl_btn">\r\n                    <i class="iconfont icon-shaixuan"></i>筛选\r\n                    <i class="iconfont icon-sjiantou02 double-arrow-right"></i>\r\n                    <i class="iconfont icon-sjiantou03 double-arrow-down hide"></i>\r\n                </div>\r\n                <div class="overhidden">\r\n                    <div class="app_search clearfix">\r\n                        <div class="pull-right">\r\n                            <div class="btn btn-primary btn-search">查询</div>\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <i class="iconfont icon-sousuo"></i>\r\n                            <input type="text" class="form-control input-search" placeholder="请输入关键字搜索">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="list_ctrl_btn weui-row base_list_ctrl_btn">\r\n                <div class="weui-col-33" data-type="time">\r\n                    按时间&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n                    <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n                </div>\r\n                <div class="weui-col-33" data-type="type">\r\n                    按类别&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n                    <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n                </div>\r\n                <div class="weui-col-33" data-type="view">\r\n                    回答数&nbsp;&nbsp;<i class="iconfont icon-yqfshangjiantou arrow-up"></i>\r\n                    <i class="iconfont icon-xiajiantou arrow-down hide"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="nav weui-row bg-white">\r\n            <div class="weui-col-50 active" data-value="1">\r\n                已解决\r\n            </div>\r\n            <div class="weui-col-50" data-value="0">\r\n                未解决\r\n            </div>\r\n        </div>\r\n        <div class="wrapper">\r\n            <div class="inner">\r\n                <div class="weui-pull-to-refresh-layer">\r\n                    <div class="pull-to-refresh-arrow"></div>\r\n                    <div class="pull-to-refresh-preloader"></div>\r\n                    <div class="down">下拉刷新</div>\r\n                    <div class="up">释放刷新</div>\r\n                    <div class="refresh">正在刷新...</div>\r\n                    <div class="done">刷新完成</div>\r\n                </div>\r\n\r\n                <div class="list-warning">\r\n                    搜索结果如下，点此查看全部\r\n                </div>\r\n\r\n                <div class="repository_wrapper">\r\n                    <!--<div class="base_box">\r\n                        <div class="base_title">\r\n                            <h3>\r\n                                用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？\r\n                            </h3>\r\n                        </div>\r\n                        <div class="base_img">\r\n                            <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                            <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                        </div>\r\n                        <div class="base_best">\r\n                            最佳答案：开始觉得法律手段街坊邻居\r\n                        </div>\r\n                        <div class="base_info">\r\n                            类别：热门（4G、宽带）\r\n                            &nbsp;<span class="font-black">|</span>&nbsp;2016-08-08 11:11\r\n                        </div>\r\n                        <div class="clearfix base_ctrl">\r\n                            <div class="pull-left author">\r\n                                <div class="pull-left img">\r\n                                    <img src="app_img/noavatar.png">\r\n                                </div>\r\n                                <div class="pull-left">\r\n                                    了看接口接口技术\r\n                                </div>\r\n                            </div>\r\n                            <div class="pull-right answer">\r\n                                1人回答\r\n                                &nbsp;<span class="font-black">|</span>&nbsp;\r\n                                <span class="font-blue">更多</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="sort_mask sort_mask_rep">\r\n    <ul class="sort_panel">\r\n        <!--<li class="active">由高到低</li>\r\n            <li>由低到高</li>-->\r\n    </ul>\r\n</div>\r\n\r\n<script id="sortTimeTpl" type="text/template">\r\n    <li class="sort_time_btn" data-type="1" data-order="2">由近到远</li>\r\n    <li class="sort_time_btn" data-type="1" data-order="1">由远到近</li>\r\n</script>\r\n\r\n<script id="typeTpl" type="text/template">\r\n    <li class="sort_type_btn" data-uuid="">全部</li>\r\n    <% _.each(list, function(v){ %>\r\n        <li  class="sort_type_btn" data-uuid="<%=v.uuid%>"><%=v.title%></li>\r\n    <% }) %>\r\n</script>\r\n\r\n<script id="sortViewTpl" type="text/template">\r\n    <li class="sort_view_btn" data-type="2" data-order="2">由高到低</li>\r\n    <li class="sort_view_btn" data-type="2" data-order="1">由低到高</li>\r\n</script>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n    %>\r\n\r\n        <div class="base_box" data-uuid="<%=v.uuid%>">\r\n            <div class="base_title">\r\n                <h3>\r\n                    <%=v.queDesc%>\r\n                </h3>\r\n            </div>\r\n\r\n            <% \r\n                var arr = JSON.parse(v.queImgJson);\r\n                if(arr.length > 0){ \r\n            %>\r\n                <div class="base_img">\r\n                    <% _.each(arr, function(src, i){ %>\r\n                        <% if(i < 3){ %>\r\n                            <div class="img" style="background: url(<%=src%>) no-repeat center center/cover"></div>\r\n                        <% } %>\r\n                    <% }); %>\r\n                </div>\r\n            <% } %>\r\n\r\n            <% if(v.good){ %>\r\n                <div class="base_best">\r\n                    最佳答案：<%=v.good%>\r\n                </div>\r\n            <% } %>\r\n\r\n            <div class="base_info">\r\n                类别：<%=v.queTypeUuid%>\r\n                &nbsp;<span class="font-black">|</span>&nbsp;\r\n                <%=v.createTimeStr.substr(0, 16)%>\r\n            </div>\r\n            <div class="clearfix base_ctrl">\r\n                <div class="pull-left author">\r\n                    <div class="pull-left img">\r\n                        <% if(v.userHeadImage){ %>\r\n                            <img src="<%=v.userHeadImage%>">\r\n                        <% }else{ %>\r\n                            <img src="app_img/noavatar.png">\r\n                        <% } %>\r\n                        \r\n                    </div>\r\n                    <div class="pull-left">\r\n                        <%=v.userName%>\r\n                    </div>\r\n                </div>\r\n                <div class="pull-right answer">\r\n                    <%=v.replayCount%>人回答\r\n                    <% if(!v.queStatus){ %>\r\n                        &nbsp;<span class="font-black">|</span>&nbsp;\r\n                        <span class="font-blue"><i class="iconfont icon-biji"></i> 回答</span>\r\n                    <% } %>\r\n                </div>\r\n            </div>\r\n        </div>\r\n   \r\n    <%\r\n        });\r\n    %>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>';});

/**
*   我的问题
**/

define('view/mobile_repository/my',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/mobile_repository/tpl/my.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/mobile_repository/tpl/my.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .show_ctrl_btn': 'toggleCtrlBtn',
			'tap .list_ctrl_btn > div': 'getSortPanel',
			'tap .nav > div': 'renderList',

            'tap .sort_type_btn': 'searchByType',
			'tap .sort_time_btn': 'sortByTime',
			'tap .sort_view_btn': 'sortByView',

            'tap .btn-search': 'searchByKeyword',
            'tap .list-warning': 'initList',
            'tap .btn-prev,.btn-next': 'viewPage',

			'tap .base_box': 'viewDetail'
		},
		viewDetail: function (e) {
			var uuid = $(e.currentTarget).data('uuid');
			Backbone.history.navigate('mobile-repository-detail/' + uuid + '/mobile-repository-my/' + this.options.type + '_' + this.queStatus, { trigger: true });
		},
		sortByTime: function (e) {
			var $e = $(e.currentTarget);
			this.sort_type = $e.data('type');
			this.sort_order = $e.data('order');

			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(0)');
			this.hideSortPanel($panel);
		},
		sortByView: function (e) {
			var $e = $(e.currentTarget);
			this.sort_type = $e.data('type');
			this.sort_order = $e.data('order');

			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(2)');
			this.hideSortPanel($panel);
		},
		searchByType: function (e) {
			var uuid = $(e.currentTarget).data('uuid');
			if (!uuid) {
				this.initList();
				return;
			}

			this.search_type = uuid;

			this.$warning.show();
			this.getList(1, $.noop);

			var $panel = this.$('.list_ctrl_btn > div:eq(1)');
			this.hideSortPanel($panel);
		},
		toggleCtrlBtn: function (e) {
			if (this.$('.list_ctrl_btn').hasClass('active')) {
				//收起
				this.$('.list_ctrl_btn').removeClass('active');
				this.$('.double-arrow-down').addClass('hide');
				this.$('.double-arrow-right').removeClass('hide');

				//收起
				this.$('.arrow-down').addClass('hide');
				this.$('.arrow-up').removeClass('hide');
				this.$('.sort_mask').removeClass('active');
				this.current_sort_btn = '';
			} else {
				//打开
				this.$('.list_ctrl_btn').addClass('active');
				this.$('.double-arrow-right').addClass('hide');
				this.$('.double-arrow-down').removeClass('hide');
			}
		},
		getSortPanel: function (e) {
			var $e = $(e.currentTarget);
			var type = $e.data('type');

			if (!this.current_sort_btn) {
				this.current_sort_btn = type;
				this.renderSortPanel($e);
			} else {
				if (type == this.current_sort_btn) {
					this.toggleSortPanel($e);
					return;
				} else {
					this.current_sort_btn = type;
					this.renderSortPanel($e);
				}
			}
		},
		showSortPanel: function ($e) {
			this.$('.arrow-down').addClass('hide');
			this.$('.arrow-up').removeClass('hide');

			this.$('.sort_mask').addClass('active');
			$e.find('.arrow-up').addClass('hide');
			$e.find('.arrow-down').removeClass('hide');
		},
		hideSortPanel: function ($e) {
			this.$('.sort_mask').removeClass('active');
			$e.find('.arrow-down').addClass('hide');
			$e.find('.arrow-up').removeClass('hide');
		},
		toggleSortPanel: function ($e) {
			if (this.$('.sort_mask').hasClass('active')) {
				//收起
				this.hideSortPanel($e);
			} else {
				//打开
				this.showSortPanel($e);
			}
		},
		renderSortPanel: function ($e) {
			var type = $e.data('type');
			switch (type) {
				case 'time':
					//按时间排序
					this.$('.sort_panel').html(this.sortTimeTemplate);
					break;
				case 'type':
					//按类别搜索
					var tpl = _.template(this.typeTemplate)({ list: this.typeArr });
					this.$('.sort_panel').html(tpl);
					break;
				case 'view':
					//按浏览量排序
					this.$('.sort_panel').html(this.sortViewTemplate);
					break;
			}

			this.showSortPanel($e);
		},
        renderList: function (e) {
			if (e == 0) {
				this.queStatus = e;

				$('.nav > div').removeClass('active');
				$('.nav > div:eq(1)').addClass('active');
			} else if (e == 1) {
				this.queStatus = e;

				$('.nav > div').removeClass('active');
				$('.nav > div:eq(0)').addClass('active');
			} else {
				var $e = $(e.currentTarget);
				if ($e.hasClass('active')) {
					return;
				}

				$('.nav > div').removeClass('active');
				$e.addClass('active');

				this.queStatus = $e.data('value');
			}

			this.getList(1, $.noop);
        },
		searchByKeyword: function () {
			if (!this.data) {
				return;
			}

			if (this.$('.sort_mask').hasClass('active') || this.$('.list_ctrl_btn').hasClass('active')) {
				this.toggleCtrlBtn();
			}

			this.search_keyword = '';
			var keyword = $.trim(this.$input.val());
			if (!keyword) {
				return;
			}

			this.search_keyword = keyword;

			this.$warning.show();
			this.getList(1, $.noop);
		},
		initList: function () {
			if (this.$('.sort_mask').hasClass('active') || this.$('.list_ctrl_btn').hasClass('active')) {
				this.toggleCtrlBtn();
			}

			this.$warning.hide();
			this.$input.val('');

			this.search_keyword = '';	//搜索关键字
			this.search_type = '';
			this.sort_order = '';
			this.sort_type = '';

			this.getList(1, $.noop);
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
		getAnswerList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getMyKnowledgeAnswer({
				page: this.current_page,
				rows: this.rows,
				queDesc: this.search_keyword,
				queTypeUuid: this.search_type,
				maxWidth: 120,
				sort: this.sort_type,
				order: this.sort_order,
				queStatus: this.queStatus
			}, _.bind(function (data) {
				this.data = data;

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				var tpl = _.template(this.listTemplate)({ data: data.obj.queList });
				this.$listContent.html(tpl);

				//获取类型
				this.typeArr = data.obj.queTypeList;

				this.$listContent.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				callback();
			}, this));
		},
		getQuestionList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getMyKnowledgeQuestion({
				page: this.current_page,
				rows: this.rows,
				queDesc: this.search_keyword,
				queTypeUuid: this.search_type,
				maxWidth: 120,
				sort: this.sort_type,
				order: this.sort_order,
				queStatus: this.queStatus
			}, _.bind(function (data) {
				this.data = data;

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				var tpl = _.template(this.listTemplate)({ data: data.obj.queList });
				this.$listContent.html(tpl);

				//获取类型
				this.typeArr = data.obj.queTypeList;

				this.$listWrapper.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				callback();
			}, this));
		},
		backbutton: function () {
			if (this.$('.sort_mask').hasClass('active')) {
				this.toggleCtrlBtn();
				return;
			}

            Backbone.history.navigate('mobile-repository-index', { trigger: true });
		},
		initialize: function (options) {
			this.options = options;

			var status = 1;	//已关闭问题
			if (this.options.status) {
				var status = this.options.status;
			}

			var title = '';
			if (this.options.type == 'question') {
				title = '我的提问';
				this.getList = this.getQuestionList;
			} else if (this.options.type == 'answer') {
				title = '我的回答';
				this.getList = this.getAnswerList;
			}

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: title
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.typeTemplate = this.$('#typeTpl').html();
			this.sortTimeTemplate = this.$('#sortTimeTpl').html();
			this.sortViewTemplate = this.$('#sortViewTpl').html();
            this.listTemplate = this.$('#listTpl').html();


            this.$listWrapper = this.$('.wrapper > .inner');
			this.$listContent = this.$('.repository_wrapper');
			this.$warning = this.$('.list-warning');
			this.$input = this.$('.input-search');

			this.data = null;	//当前内容
            this.typeArr;	//类型
			this.current_page = 1;	//当前页
			this.rows = 30; //每页显示数目
			this.search_keyword = ''; //搜索关键字
			this.search_type = '';	//搜索类型uuid
			this.sort_type = ''; 	//按排序类别
			this.sort_order = '';	//排序正负
			this.queStatus = 1;	//已关闭问题

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.renderList(status);
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/mobile_repository/tpl/detail.html',[],function () { return '<div class="common-content bg-gray online_read_detail" id="mobileRepositoryDetail">\r\n    <div class="content">\r\n        <!--<div class="base_box question_content">\r\n            <div class="base_title">\r\n                <h3>\r\n                    用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？用户需要办理家庭宽带怎么办？\r\n                </h3>\r\n            </div>\r\n            <div class="base_img">\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                <br>\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                <br>\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n                <div class="img" style="background: url(app_img/none.jpg) center center no-repeat/cover"></div>\r\n            </div>\r\n            <div class="base_info clearfix">\r\n                <div class="pull-left">\r\n                    1个回答\r\n                </div>\r\n                 <div class="pull-right">\r\n                     2016-08-08 11:11\r\n                 </div>\r\n            </div>\r\n            <div class="clearfix base_ctrl">\r\n                <div class="pull-left">\r\n                    类别：热门（4G、宽带）\r\n                </div>\r\n                <div class="pull-right">\r\n                    <div class="btn btn-default close_question_btn">关闭问题</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="comment_wrapper bg-white">\r\n            <div class="comment_floor">\r\n                <div class="best_title">\r\n                    <i class="iconfont icon-sheweichenggong"></i> 最佳答案\r\n                </div>\r\n                <div class="comment_box clearfix">\r\n                    <div class="pull-left">\r\n                        <img src="app_img/noavatar.png" alt="">\r\n                    </div>\r\n                    <div class="overhidden">\r\n                        <div class="comment_info">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="comment_ctrl pull-right">\r\n                                    <div class="like_ctrl">\r\n                                        <i class="iconfont icon-aixin empty_love"></i> 1\r\n                                    </div>\r\n                                    <div class="reply_ctrl">\r\n                                        <i class="iconfont icon-groupcopy5"></i> 2\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <p class="date">2016-02-02</p>\r\n                        </div>\r\n                        <p>回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容</p>\r\n                    </div>\r\n                </div>\r\n                <div class="comment_sub_box">\r\n                    <div class="comment_box clearfix">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="date pull-right">2016-02-02</div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class="comment_box clearfix">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="date pull-right">2016-02-02</div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="comment_floor">\r\n                <div class="other_title">\r\n                    其他回答\r\n                </div>\r\n                <div class="comment_box clearfix">\r\n                    <div class="pull-left">\r\n                        <img src="app_img/noavatar.png" alt="">\r\n                    </div>\r\n                    <div class="overhidden">\r\n                        <div class="comment_info">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="comment_ctrl pull-right">\r\n                                    <div class="like_ctrl">\r\n                                        <i class="iconfont icon-aixin empty_love"></i> 1\r\n                                    </div>\r\n                                    <div class="reply_ctrl">\r\n                                        <i class="iconfont icon-groupcopy5"></i> 2\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <p class="date">2016-02-02</p>\r\n                        </div>\r\n                        <p>回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容</p>\r\n                    </div>\r\n                </div>\r\n                <div class="comment_sub_box">\r\n                    <div class="comment_box clearfix">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="date pull-right">2016-02-02</div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class="comment_box clearfix">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="date pull-right">2016-02-02</div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>-->\r\n        <div class="base_box question_content">\r\n            <div class="base_title">\r\n                <h3>\r\n                    ----------\r\n                </h3>\r\n            </div>\r\n            <div class="base_info clearfix">\r\n                <div class="pull-left">\r\n                    0个回答\r\n                </div>\r\n                 <div class="pull-right">\r\n                     -----\r\n                 </div>\r\n            </div>\r\n            <div class="clearfix base_ctrl">\r\n                <div class="pull-left">\r\n                    类别：-----\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="comment_wrapper bg-white">\r\n            <div class="warning-panel">还没有人回答</div>\r\n        </div>\r\n    </div>\r\n    <div class="form clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-block btn-reply">发送</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <input type="text" class="form-control input-comment" placeholder="请写下您的回答吧~">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="detailTpl" type="text/template">\r\n    <%\r\n        var an = data.an;\r\n        var anList = an.rows;\r\n        var know = data.know;\r\n    %>\r\n\r\n    <div class="base_box question_content">\r\n        <div class="base_title">\r\n            <h3>\r\n                <%=know.queDesc%>\r\n            </h3>\r\n        </div>\r\n\r\n        <% if(know.queImgJson && know.queImgJson.length > 0){ %>\r\n            <div class="base_img">\r\n                <% \r\n                    _.each(know.queImgJson, function(v, i){\r\n                %>\r\n                    <div class="img" style="background: url(<%=v.imageUrl%>) no-repeat center center/cover">\r\n                        <img src="<%=v.url%>" class="hide">\r\n                    </div>\r\n                    <% if(i == 2 || i == 5 || i == 8){ %>\r\n                    <br>\r\n                    <% } %>\r\n                <% }); %>\r\n            </div>\r\n        <% } %>\r\n        \r\n        <div class="base_info clearfix">\r\n            <div class="pull-left">\r\n                <%=know.replayCount %>个回答\r\n            </div>\r\n                <div class="pull-right">\r\n                    <%=know.createTimeStr.substr(0, 16)%>\r\n                </div>\r\n        </div>\r\n        <div class="clearfix base_ctrl">\r\n            <div class="pull-left">\r\n                类别：<%=know.queTypeUuid%>\r\n            </div>\r\n            <% if(user.mobile == know.userMobile && !know.queStatus){ %>\r\n                <div class="pull-right">\r\n                    <div class="btn btn-default close_question_btn" data-uuid="<%=know.uuid%>">关闭问题</div>\r\n                </div>\r\n            <% } %>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="comment_wrapper bg-white">\r\n        <% if(anList.length == 0){ %> \r\n            <div class="warning-panel">还没有人回答</div>\r\n        <% } %>\r\n\r\n        <% _.each(anList, function(v,i){ %>\r\n            <div class="comment_floor">\r\n                <% if(i == 0 &&　v.isGood){ %>\r\n                    <div class="best_title">\r\n                        <i class="iconfont icon-sheweichenggong"></i> 最佳答案\r\n                    </div>\r\n                <% }else if((i == 0 && !v.isGood) || (i == 1 && anList[0].isGood)){ %>\r\n                    <div class="other_title">\r\n                        其他回答\r\n                    </div>\r\n                <% } %>\r\n                <div class="comment_box clearfix">\r\n                    <div class="pull-left">\r\n                        <% if(v.anUserHeadImage){ %>\r\n                            <img src="<%=v.anUserHeadImage%>">\r\n                        <% }else{ %>\r\n                            <img src="app_img/noavatar.png">\r\n                        <% } %>\r\n                    </div>\r\n                    <div class="overhidden">\r\n                        <div class="comment_info">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left"><%=v.anUserName%></div>\r\n                                <div class="comment_ctrl pull-right">\r\n\r\n                                    <% if(v.anUserMobile != user.mobile && !hasBest && know.userMobile == user.mobile && !v.isGood){ %>\r\n                                        <div class="like_ctrl" data-uuid="<%=v.uuid%>">\r\n                                            <i class="iconfont icon-aixin empty_love"></i>\r\n                                        </div>\r\n                                    <% } %>\r\n\r\n\r\n                                    <div class="reply_ctrl" data-uuid="<%=v.uuid%>" data-name="<%=v.anUserName%>">\r\n                                        <i class="iconfont icon-groupcopy5"></i> <%=v.commentCount%>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <p class="date"><%=v.createTimeStr.substr(0, 16)%></p>\r\n                        </div>\r\n                        <p><%=v.content%></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <% if(v.commentList && v.commentList.length > 0){ %>\r\n                    <div class="comment_sub_box">\r\n                        <% _.each(v.commentList, function(c){ %>\r\n                            <div class="comment_box clearfix">\r\n                                <div class="pull-left">\r\n                                    <% if(c.commentHeadImg){ %>\r\n                                        <img src="<%=c.commentHeadImg%>">\r\n                                    <% }else{ %>\r\n                                        <img src="app_img/noavatar.png">\r\n                                    <% } %>\r\n                                </div>\r\n                                <div class="overhidden">\r\n                                    <div class="clearfix">\r\n                                        <div class="name pull-left"><%=c.commentName%></div>\r\n                                        <div class="date pull-right"><%=c.createTimeStr.substr(0,16)%></div>\r\n                                    </div>\r\n                                    <p><%=c.commentContent%></p>\r\n                                </div>\r\n                            </div>\r\n                        <% }); %>\r\n                    </div>\r\n                <% } %>\r\n            </div>\r\n        <% }) %>\r\n        \r\n        <% if(an.hasNextPage || an.hasPreviousPage){ %>\r\n            <div class="list-control weui-row">\r\n                <%\r\n                    var prevAttr = \'\',nextAttr = \'\'; \r\n                    \r\n                    if(!an.hasPreviousPage){\r\n                        prevAttr = \'disabled\';\r\n                    } \r\n                    \r\n                    if(!an.hasNextPage){\r\n                        nextAttr = \'disabled\';\r\n                    } \r\n                %> \r\n                <div class="weui-col-40">\r\n                    <button class="btn btn-default btn-prev" data-page="<%=an.prePage%>" <%=prevAttr%>>上一页</button>\r\n                </div>\r\n                <div class="weui-col-20"><%=an.pageNum%>/<%=an.pages%></div>\r\n                <div class="weui-col-40">\r\n                    <button class="btn btn-default btn-next" data-page="<%=an.nextPage%>" <%=nextAttr%>>下一页</button>\r\n                </div>\r\n            </div>\r\n        <% } %>\r\n    </div>\r\n</script>   ';});


define('text!view/tpl/_get-share.html',[],function () { return '<div class="slide-bottom-mask full share">\r\n    <div class="btn-back hide"></div>\r\n    <div class="slide-bottom-content">\r\n        <p><a href="javascript:;" class="weui_btn weui_btn_plain_primary btn-sharewx bg-white" data-scene="SESSION">分享给微信好友</a></p>\r\n        <p><a href="javascript:;" class="weui_btn weui_btn_primary btn-sharewx" data-scene="TIMELINE">分享到微信朋友圈</a></p>\r\n        <p><a href="javascript:;" class="weui_btn weui_btn_warn btn-sharesms">发送短信分享</a></p>\r\n    </div>\r\n</div>';});

define('view/get-share',['require','exports','module','jquery','underscore','backbone','touch','utils','phonegaputil','business-delegate','text!view/tpl/_get-share.html','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	require('touch');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
	var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/tpl/_get-share.html');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
		events: {
			'tap .full': 'backbutton',
			'tap .btn-sharewx': 'shareWX',
			'tap .btn-sharesms': 'shareSMS'
		},
		shareWX: function (e) {
			// this.trigger('refreshShareCount', this.options.e);
			// if (!window.cordova) {
			// 	console.log('需要手机环境');
			// 	return false;
			// }

			var $e = $(e.currentTarget);
			var scene = $e.data('scene');	//分享至朋友圈或好友

			var shareInfo = this.data ? this.data.shareWx : {};
			var param;
			if ("graphic-maketing-pic" != this.type) {
				param = {
					message: {
						title: this.options.question,
						description: shareInfo.content,
						thumb: shareInfo.shareImg,
						media: {
							type: Wechat.Type.WEBPAGE,
							webpageUrl: shareInfo.shareUrl
						}
					},
					scene: Wechat.Scene[scene]   // share to Timeline
				};
			} else {
				//http://117.78.33.165:8080/stategrid/page/images/login_bg3.jpg
				//Wechat.Type.IMAGE,
				var img = "http://117.78.33.165:8080/stategrid/page/images/login_bg3.jpg";
				param = {
					message: {
						title: "",
						description: "",
						thumb: "",
						media: {
							// type: Wechat.Type.IMAGE,  
							type: Wechat.Type.IMAGE,
							image: this.shareImgUrl
						}
					},
					scene: Wechat.Scene[scene]   // share to Timeline  
				};
			}
			Wechat.isInstalled(function (installed) {
				if (!installed) {
					$.hideLoading();
					$.jtoast('未安装微信');
					return;
				}
				if ("graphic-maketing-pic" != this.type) {
					Wechat.share(param, _.bind(function () {
						// $.hideLoading();
						console.log("Success");
						//设置转发数
						if (this.options.anUuid) {	//转发答案
							businessDelegate.addKnowledgeShareCountByAnUUID({
								anUuid: this.options.anUuid
							}, _.bind(function () {
								this.trigger('refreshAnswerShareCount', this.options.e);
							}, this), $.noop);
						} else {	//转发问题
							businessDelegate.addKnowledgeShareCountByQueUUID({
								queUuid: this.options.queUuid
							}, _.bind(function () {
								this.trigger('refreshQuestionShareCount', this.options.e);
							}, this), $.noop);
						}
					}, this), function (reason) {
						// $.hideLoading();
						console.log("Failed: " + reason);
					});
				} else {
					Wechat.share(param, _.bind(function () {
						// alert("success");
					}, this), function (reason) {
						// $.hideLoading();
						console.log("Failed: " + reason);
						// alert("faill:"+reason);
					});
				}
			}, function (reason) {
				// $.hideLoading();
				console.log("Failed: " + reason);
				$.jtoast('检测微信环境失败');
			});
			return false;
		},
		shareSMS: function () {
			var content;
			if (this.data && this.data.shareSms) {
				content = this.data.shareSms.content;
			}
			// var content = this.data.shareSms.content;
			if (!content) {
				$.jtoast('无法获取短信分享信息');
				return;
			}

			$.showLoading('正在打开');
			phonegaputil.sendSMS([], content, _.bind(function () {
				$.hideLoading();
				console.log('success');
				//设置转发数
				if (this.options.anUuid) {	//转发答案
					businessDelegate.addKnowledgeShareCountByAnUUID({
						anUuid: this.options.anUuid
					}, _.bind(function () {
						this.trigger('refreshAnswerShareCount', this.options.e);
					}, this), $.noop);
				} else {	//转发问题
					businessDelegate.addKnowledgeShareCountByQueUUID({
						queUuid: this.options.queUuid
					}, _.bind(function () {
						this.trigger('refreshQuestionShareCount', this.options.e);
					}, this), $.noop);
				}
			}, this), function (err) {
				$.hideLoading();
				console.log(err);
				$.jtoast('跳转失败请重试');
			});

			return false;
		},
		getShare: function () {
			$.showLoading('获取分享信息');
			businessDelegate.getKnowledgeShareInfo({
				queUuid: this.options.queUuid,
				anUuid: this.options.anUuid
			}, _.bind(function (data) {
				$.hideLoading();
				this.data = data.obj;
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.back();
			}, this));
		},
		initialize: function (options) {
			if ("graphic-maketing-pic" == options.question.type) {//图文营销，只分享图片
				this.shareImgUrl = options.question.url;
				this.type = options.question.type;
				this.options = {
					crop: false,
					title: '转发分享'
				};
			} else {
				this.options = {
					crop: false,
					title: '转发分享'
				};
			}
			if (options) {
				this.options = _.extend(this.options, options);
			}

			var tpl = _.template(template)({ title: this.options.title });
			this.$el.empty().append(tpl);
			this.data = null;
		},
		render: function () {
			if ("graphic-maketing-pic" != window.pageType) {
				this.getShare();
				window.pageType = "";
			}
			return this;
		}
	});

	return View;
});

/**
*   问题详情
*	关闭问题：当user为提问人时展示
*	设置最佳：当user为提问人，且user不是回答人,且没有最佳答案时显示
**/

define('view/mobile_repository/detail',['require','exports','module','jquery','underscore','backbone','touch','swiper','jquery-weui','utils','phonegaputil','business-delegate','text!view/mobile_repository/tpl/detail.html','view/app-header','view/get-share'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('swiper');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/mobile_repository/tpl/detail.html');
	var AppHeader = require('view/app-header');
	var GetShare = require('view/get-share');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .base_img > .img': 'showImage',
			'tap .close_question_btn': 'closeQuestion',
			'tap .common-header .answer': 'shareQuestion',
			'tap .btn-prev,.btn-next': 'viewPage',
			'tap #mobileRepositoryDetail > .content': 'prepareReply',
			'tap .reply_ctrl': 'prepareReplyReply',
			'tap .btn-reply': 'sendReply',
			'tap .btn-reply-reply': 'sendReplyReply',

			'tap .like_ctrl': 'settingBest'
		},
		settingBest: function(e){	//设置最佳答案，设置成功后不可更改
			var $e = $(e.currentTarget);
			var uuid = $e.data('uuid');

			$.confirm('确认设置该答案为最佳答案吗', _.bind(function () {
				//设置最佳答案
				$.showLoading('正在设置');
				businessDelegate.setKnowledgeBestAnswer({
					anUuid: uuid
				}, _.bind(function () {
					$.hideLoading();
					$.toast('设置成功');

					this.viewPage = true;
					this.getDetail(1);
				}, this), _.bind(function (err) {
					$.hideLoading();
					$.jtoast(err);
				}, this));
			}, this), $.noop);
		},
		prepareReply: function () {
			if (this.$('.btn-reply-reply').length) {
				this.$('.btn-reply-reply').removeClass('btn-reply-reply').addClass('btn-reply');
			} else {
				return;
			}

			this.replyUUID = '';
			this.replyName = '';

			this.$('.input-comment').val('');
			this.$('.input-comment').attr('placeholder', '请写下您的回答吧~');
		},
		prepareReplyReply: function (e) {
			var $e = $(e.currentTarget);
			this.replyUUID = $e.data('uuid');
			this.replyName = $e.data('name');

			this.$('.input-comment').val('');
			this.$('.input-comment').attr('placeholder', '回复' + this.replyName);

			if (this.$('.btn-reply').length) {
				this.$('.btn-reply').removeClass('btn-reply').addClass('btn-reply-reply');
			}

			return false;
		},
		//一级回复，回复问题答案
		sendReply: function () {
			var text = $.trim(this.$('.input-comment').val());

			if (!text) {
				$.jtoast('请填写回答内容');
				return;
			}

			$.showLoading('正在提交');
			businessDelegate.addKnowledgeAnswer({
				queUuid: this.uuid,
				contentImgJson: [],
				content: text
			}, _.bind(function (data) {
				$.hideLoading();

				this.viewPage = true;
				this.getDetail(1);

				this.$('.input-comment').val('');
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		//二级回复
		sendReplyReply: function () {
			var text = $.trim(this.$('.input-comment').val());
			if (!text) {
				$.jtoast('请填写回复内容');
				return;
			}

			$.showLoading('正在提交');
			businessDelegate.addKnowledgeAnswerComment({
				anUuid: this.replyUUID,
				commentContent: text
			}, _.bind(function (data) {
				$.hideLoading();

				this.viewPage = true;
				this.getDetail(this.current_page);

				this.prepareReply();
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		/**
		 * 操作
		 */
		//关闭问题，禁止回复和评论，可转发
		closeQuestion: function (e) {
			var $e = $(e.currentTarget);
			var uuid = $e.data('uuid');

			$.confirm('确认关闭该问题吗', _.bind(function () {
				$.showLoading('正在关闭');
				businessDelegate.closeKnowledgeQuestion({
					queUuid: uuid
				}, _.bind(function (data) {
					$.hideLoading();
					this.getDetail(1);
				}, this), _.bind(function (err) {
					$.hideLoading();
					$.jtoast(err);
				}, this));
			}, this), $.noop);
		},
		showImage: function (e) {	//展示图片
			var $e = $(e.currentTarget);

			var index = $e.index('.base_img > .img');

			var arr = _.pluck($e.parent().find('img'), 'src');

			this.pb = $.photoBrowser({
				items: arr,
				onOpen: _.bind(function () {
					this.isPb = 1;
				}, this),
				onClose: _.bind(function () {
					this.isPb = 0;
				}, this),
                initIndex: index
			});

			this.pb.open();
		},
		shareQuestion: function () {	//分享问题
			var question = $.trim(this.$('.base_title > h3').text());
			var view = new GetShare({
				queUuid: this.uuid,
				anUuid: '',
				question: question
			});
			view.show();
		},
		scrollToCommentTop: function () {
			var h = this.$('.question_content').height();
			this.$wrapper.scrollTop(h);
		},
		/**
		 * 列表操作
		 */
		viewPage: function (e) {	//翻页
			this.viewPage = true;
			var page = $(e.currentTarget).data('page');
			this.getDetail(page);
		},
		getDetail: function (page) {
			this.current_page = page;

			$.showLoading();

			businessDelegate.getKnowledgeAnswers({
				queUuid: this.uuid,
				page: this.current_page,
				rows: this.rows,
				maxWidth: 120
			}, _.bind(function (data) {
				$.hideLoading();

				this.status = data.obj.know.queStatus;
				// this.status = 1;
				if (data.obj.know.queStatus) {
					//已关闭
					this.canAnswer = 0;
					this.$('.form').hide();
					this.$wrapper.addClass('full');
				} else {
					//未关闭
					this.canAnswer = 1;
					this.$('.form').show();
					this.$wrapper.removeClass('full');
				}

				if (page == 1 && data.obj.an.rows.length && data.obj.an.rows[0].isGood) {
					this.hasBest = 1;
				}

				var tpl = _.template(this.detailTemplate)({ data: data.obj, hasBest: this.hasBest });
				this.$wrapper.html(tpl);

				if (this.viewPage) {
					this.scrollToCommentTop();
				}
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.$wrapper.html(this.errorHTML);
			}, this));
		},
		backbutton: function () {
			//有对话框无法回退
			if (this.$('.weui_dialog').length > 0) {
				return;
			}

			//有图片展示框
			if (this.isPb) {
				this.pb.close();
				return;
			}

			var str = '';
			
			//从我的回答或我的提问进入专用通道
            if (this.history == 'mobile-repository-my' && this.type) {
				var arr = this.type.split('_');
                var str = '/' + arr[0] + '/' + this.status;
            }
			if("0" == this.type){
				this.backHref = "mobile-repository-index/0/work/index"
			}else{
				this.backHref = "mobile-repository-index/1/work/index"
			}
            // this.backHref = this.history + str;

            Backbone.history.navigate(this.backHref, { trigger: true });
		},
		initialize: function (options) {
            this.uuid = options.uuid;
            this.history = options.history;
			this.type = options.type;
			
			if (this.history == 'mobile-repository-my' && this.type) {
				var arr = this.type.split('_');
				this.status = arr[1];
            }

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '基础知识详情'
            });

            this.header.setRightBtn('<span class="answer text">分享</span>');

            this.$el.empty().append(this.header.$el).append(template);
			this.detailTemplate = this.$('#detailTpl').html();

			this.$wrapper = this.$('#mobileRepositoryDetail > .content');

			this.current_page = 1;	//当前页
			this.rows = 50; //每页显示数目
			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.isPb = 0; //是否开启图片展示
			this.canAnswer = 0;	//是否可以回答问题
			this.hasBest = 0;
			this.viewPage = false; //是否在翻阅评论

			this.getDetail(1);
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/mobile_repository/tpl/example-detail.html',[],function () { return '<div class="common-content bg-gray online_read_detail overhidden" id="exampleDetail">\r\n    <div class="content">\r\n        <div class="bg-white example_wrapper">\r\n            <div class="title">\r\n                案例名称\r\n            </div>\r\n            <div class="app_detail_content weui_cells">\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>投诉类别</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>客户品牌</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>客户分类</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>客户姓名</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>投诉来源</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>投诉发生时间</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>投诉事由</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>查证处理情况</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>客户心理分析</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>处理要点与技巧分享</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>问题发现</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>改进措施</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>服务术语</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>服务禁语</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>法律意见</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft">\r\n                        -\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class="article_ctrl pd10 bg-white clearfix">\r\n            <div class="pull-left">\r\n                <div class="article_ctrl_btn like_btn not_like">\r\n                    <div class="icon_wrapper">\r\n                        <i class="iconfont icon-aixin empty_love"></i>\r\n                        <i class="iconfont icon-xiazai1 fill_love hide"></i>\r\n                    </div>\r\n                    <p>0</p>\r\n                </div>\r\n\r\n                <div class="article_ctrl_btn reply_btn">\r\n                    <div class="icon_wrapper">\r\n                        <i class="iconfont icon-pinglun"></i>\r\n                    </div>\r\n                    \r\n                    <p>0</p>\r\n                </div>\r\n            </div>\r\n            <!--<div class="pull-right">\r\n                <div class="link_ctrl_btn">\r\n                    <i class="iconfont icon-xiazai"></i>\r\n                    <p>附件下载</p>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n\r\n        <div class="comment_sum">\r\n            评论\r\n        </div>\r\n        <div class="comment_wrapper bg-white">\r\n            <!--<div class="warning-panel">暂无评论</div>-->\r\n            <!--<div class="comment_floor">\r\n                <div class="comment_box clearfix">\r\n                    <div class="pull-left">\r\n                        <img src="app_img/noavatar.png" alt="">\r\n                    </div>\r\n                    <div class="overhidden">\r\n                        <div class="comment_info">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="comment_ctrl pull-right">\r\n                                    <div class="like_ctrl">\r\n                                        <i class="iconfont icon-aixin empty_love"></i> 1\r\n                                    </div>\r\n                                    <div class="reply_ctrl">\r\n                                        <i class="iconfont icon-groupcopy5"></i> 2\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <p class="date">2016-02-02</p>\r\n                        </div>\r\n                        <p>回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容</p>\r\n                    </div>\r\n                </div>\r\n                <div class="comment_sub_box">\r\n                    <div class="comment_box clearfix">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="date pull-right">2016-02-02</div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class="comment_box clearfix">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix">\r\n                                <div class="name pull-left">测试姓名</div>\r\n                                <div class="date pull-right">2016-02-02</div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n\r\n    <div class="form clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-block btn-reply">发送</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <input type="text" class="form-control input-comment" placeholder="发表一下你的点评吧~">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="detailTpl" type="text/template">\r\n    <div class="title">\r\n        <%=title%>\r\n    </div>\r\n    <div class="app_detail_content weui_cells">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>投诉类别</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=typeName%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>客户品牌</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=customerBrand%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>客户分类</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=customerType%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>客户姓名</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=customerName%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>投诉来源</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=sourceComplaints%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>投诉发生时间</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=complaintsTime%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>投诉事由</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=complaintsReason%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>查证处理情况</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=verifyTreatment%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>客户心理分析</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=customerAnalysis%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>处理要点与技巧分享</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=treatmentSharing%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>问题发现</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=problemFound%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>改进措施</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=improvementMeasures%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>服务术语</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=serviceTerms%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>服务禁语</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=serviceTaboo%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>法律意见</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=legalAdvice%>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n\r\n\r\n<script id="commentTpl" type="text/template">\r\n<% if(!data.rows.length){ %>\r\n    <div class="warning-panel">暂无评论</div>\r\n<% }else{ %>\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n    %>\r\n        <div class="comment_floor">\r\n            <div class="comment_box clearfix">\r\n                <div class="pull-left">\r\n                    <% if(v.headImgUrl){ %>\r\n                        <img src="<%=v.headImgUrl%>">\r\n                    <% }else{ %>\r\n                        <img src="app_img/noavatar.png">\r\n                    <% } %>\r\n                </div>\r\n                <div class="overhidden">\r\n                    <div class="comment_info">\r\n                        <div class="clearfix">\r\n                            <div class="name pull-left"><%=v.name%></div>\r\n                            <div class="comment_ctrl pull-right">\r\n                                <div class="like_ctrl" data-uuid="<%=v.uuid%>">\r\n                                    <%\r\n                                        var h1 = \'\';\r\n                                        var h2 = \'hide\';\r\n                                        if(v.isThumbs){\r\n                                            h1 = \'hide\';\r\n                                            h2 = \'\';\r\n                                        }\r\n                                    %>\r\n                                    <i class="iconfont icon-aixin empty_love <%=h1%>"></i>\r\n                                    <i class="iconfont icon-xiazai1 fill_love <%=h2%>"></i> <span><%=v.thumbsCount%></span>\r\n                                </div>\r\n                                <div class="reply_ctrl" data-uuid="<%=v.uuid%>" data-name="<%=v.name%>">\r\n                                    <i class="iconfont icon-groupcopy5"></i> <%=v.commentsCount%>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p class="date"><%=v.createTime.substr(0, 16)%></p>\r\n                    </div>\r\n                    <p><%=v.content%></p>\r\n                </div>\r\n            </div>\r\n\r\n            <% if(v.twoList && v.twoList.length > 0){ %>\r\n                <div class="comment_sub_box">\r\n                    <% _.each(v.twoList, function(s){ %>\r\n                        <div class="comment_box clearfix">\r\n                            <div class="pull-left">\r\n                                <% if(s.headImgUrl){ %>\r\n                                    <img src="<%=s.headImgUrl%>">\r\n                                <% }else{ %>\r\n                                    <img src="app_img/noavatar.png ">\r\n                                <% } %>\r\n                            </div>\r\n                            <div class="overhidden">\r\n                                <div class="clearfix">\r\n                                    <div class="name pull-left"><%=s.name%></div>\r\n                                    <div class="date pull-right"><%=s.createTime.substr(0, 16)%></div>\r\n                                </div>\r\n                                <p><%=s.content%></p>\r\n                            </div>\r\n                        </div>\r\n                    <% }); %>\r\n                </div>\r\n            <% } %>\r\n       \r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n<% } %>\r\n</script>';});

/**
*   在线阅读-详细描述
**/

define('view/mobile_repository/example-detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/mobile_repository/tpl/example-detail.html','view/app-header'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/mobile_repository/tpl/example-detail.html');
	var AppHeader = require('view/app-header');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .not_like': 'likeArticle',
			'tap .btn-prev,.btn-next': 'viewPage',
			'tap .like_ctrl': 'likeComment',
			'tap #exampleDetail > .content': 'prepareReply',
			'tap .reply_ctrl': 'prepareReplyReply',
			'tap .btn-reply': 'sendReply',
			'tap .btn-reply-reply': 'sendReplyReply'
		},
		//评论点赞
		likeComment: function (e) {
			var $e = $(e.currentTarget);
			var uuid = $e.data('uuid');

			//点赞方法
			businessDelegate.likeExample({
				uuid: uuid,
                type: 1
			}, _.bind(function (data) {
				this.renderLike($e);

				var count = new Number($e.find('span').text());
				$e.find('span').text(count + 1);
			}, this), _.bind(function (err) {
				if (err == '已点赞') {
					this.renderLike($e);
				}
			}, this));
		},
		prepareReply: function () {
			if (this.$('.btn-reply-reply').length) {
				this.$('.btn-reply-reply').removeClass('btn-reply-reply').addClass('btn-reply');
			} else {
				return;
			}

			this.replyUUID = '';
			this.replyName = '';

			this.$('.input-comment').val('');
			this.$('.input-comment').attr('placeholder', '发表一下你的点评吧~');
		},
		prepareReplyReply: function (e) {
			var $e = $(e.currentTarget);
			this.replyUUID = $e.data('uuid');
			this.replyName = $e.data('name');

			this.$('.input-comment').val('');
			this.$('.input-comment').attr('placeholder', '回复' + this.replyName);

			if (this.$('.btn-reply').length) {
				this.$('.btn-reply').removeClass('btn-reply').addClass('btn-reply-reply');
			}

			return false;
		},
		//一级回复
		sendReply: function () {
			var text = $.trim(this.$('.input-comment').val());

			if (!text) {
				$.jtoast('请填写点评内容');
				return;
			}

			$.showLoading('正在发表');
			businessDelegate.addExampleComment({
				uuid: this.uuid,
				comments: text
			}, _.bind(function (data) {
				$.hideLoading();

				this.viewPage = true;
				this.getList(1);

				this.$('.input-comment').val('');
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		//二级回复
		sendReplyReply: function () {
			var text = $.trim(this.$('.input-comment').val());
			if (!text) {
				$.jtoast('请填写点评内容');
				return;
			}

			$.showLoading('正在发表');
			businessDelegate.addExampleReply({
				uuidTwo: this.replyUUID,
				comments: text
			}, _.bind(function (data) {
				$.hideLoading();

				this.viewPage = false;
				this.getList(this.current_page);

				this.prepareReply();
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		viewPage: function (e) {
			this.viewPage = true;
			var page = $(e.currentTarget).data('page');
			this.getList(page);
		},
		getList: function (page) {
			this.current_page = page;
			$.showLoading();
			businessDelegate.getExampleCommentList({
				uuid: this.uuid,
				page: page,
				rows: this.rows
			}, _.bind(function (data) {
				$.hideLoading();

				var tpl = _.template(this.commentTemplate)({ data: data.obj });
				this.$commentWrapper.html(tpl);

				//重新获取评论数
				this.$('.reply_btn > p').html(data.obj.commentsCount);

				if (this.viewPage) {
					this.scrollToCommentTop();
				}
			}, this), _.bind(function (err) {
				$.hideLoading();
				this.$commentWrapper.html(this.errorHTML);
				$.jtoast(err);
			}, this));
		},
		/**
		 * 文章信息
		 */
		likeArticle: function () {
			var $like = this.$('.like_btn');

			businessDelegate.likeExample({
				uuid: this.uuid,
                type: 0
			}, _.bind(function (data) {
				this.renderLike($like);

				var count = parseInt(this.$('.like_btn > p').text()) + 1;
				this.$('.like_btn > p').text(count);
			}, this), _.bind(function (err) {
				if (err == '已点赞') {
					this.renderLike($like);
				}
			}, this));
		},
		getDetail: function () {
			$.showLoading();
			businessDelegate.getExampleDetail({
				uuid: this.uuid
			}, _.bind(function (data) {
				$.hideLoading();
				this.renderDetail(data.obj);
				this.getList(1);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		renderDetail: function (data) {
			//渲染文章
			var tpl = _.template(this.detailTemplate)(data);
			this.$('.example_wrapper').html(tpl);

			//渲染评论数
			this.$('.reply_btn > p').html(data.commentsCount);

			//渲染点赞数
			this.$('.like_btn > p').html(data.thumbsCount);

			//渲染点赞
			if (data.isThumbs) {
				var $like = this.$('.like_btn');
				$like.removeClass('not_like');
				this.renderLike($like);
			}
		},
		/**
		 * 工具
		 */
		scrollToCommentTop: function () {
			var h1 = this.$('.example_wrapper').height();
			var h2 = this.$('.article_ctrl').height();
			this.$wrapper.scrollTop(h1 + h2);
		},
		renderLike: function ($like) {
			if ($like.find('.fill_love').hasClass('hide')) {
				$like.find('.empty_love').addClass('hide');
				$like.find('.fill_love').removeClass('hide');
			}
		},
		backbutton: function () {
            Backbone.history.navigate('mobile-repository-index/1', { trigger: true });
		},
		initialize: function (options) {
			this.uuid = options.uuid;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '案例详情'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.detailTemplate = this.$('#detailTpl').html();
			this.commentTemplate = this.$('#commentTpl').html();

			this.$wrapper = $('#exampleDetail > .content');
			this.$commentWrapper = this.$('.comment_wrapper');

			this.current_page = 1;	//当前页
			this.rows = 50; //每页显示数目
			this.viewPage = false; //是否在翻阅评论

			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.getDetail();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/center/tpl/index.html',[],function () { return '<div class="common-content center-content with-menu bg-gray" style="top: 0px ;">\r\n    <div class="user-info-header">\r\n        <div class="avatar">\r\n            <img src="app_img/noavatar.png">\r\n        </div>\r\n        <h3>-</h3>\r\n        <p>-</p>\r\n    </div>\r\n\r\n    <div class="user-info-container">\r\n        <div class="refresh_inner">\r\n            <div class="weui-pull-to-refresh-layer">\r\n                <div class="pull-to-refresh-arrow"></div>\r\n                <div class="pull-to-refresh-preloader"></div>\r\n                <div class="down">下拉刷新</div>\r\n                <div class="up">释放刷新</div>\r\n                <div class="refresh">正在刷新...</div>\r\n                <div class="done">刷新完成</div>\r\n            </div>\r\n\r\n            <div class="user-info-wrapper">\r\n                <div class="weui_cells user-info-content">\r\n                    <div class="title">个人信息</div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>姓名</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft">\r\n                            -\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>手机号码</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft">\r\n                            -\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>所属单位</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft">\r\n                            -\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>工作岗位</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft">\r\n                            -\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>QQ</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft show-text">\r\n                            <span>-</span>\r\n                            <i class="iconfont icon-qianjin"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>微信</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft show-text">\r\n                            <span>-</span>\r\n                            <i class="iconfont icon-qianjin"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>微博</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft show-text">\r\n                            <span>-</span>\r\n                            <i class="iconfont icon-qianjin"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>邮箱</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft show-email show-text">\r\n                            <span>-</span>\r\n                            <i class="iconfont icon-qianjin"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cells user-info-content">\r\n                    <div class="title">应用信息</div>\r\n                    <div class="weui_cell weui_cell_switch">\r\n                        <div class="weui_cell_hd weui_cell_primary">新消息通知</div>\r\n                        <div class="weui_cell_ft">\r\n                            <input class="weui_switch" type="checkbox" checked>\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell weui_cell_switch">\r\n                        <div class="weui_cell_hd weui_cell_primary">声音</div>\r\n                        <div class="weui_cell_ft">\r\n                            <input class="weui_switch" type="checkbox" checked>\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell weui_cell_switch">\r\n                        <div class="weui_cell_hd weui_cell_primary">震动</div>\r\n                        <div class="weui_cell_ft">\r\n                            <input class="weui_switch" type="checkbox" checked>\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>版本号</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft check-version">\r\n                            <span>-</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="weui_cell">\r\n                        <div class="weui_cell_bd weui_cell_primary">\r\n                            <p>意见反馈</p>\r\n                        </div>\r\n                        <div class="weui_cell_ft show-advise">\r\n                            <i class="iconfont icon-qianjin"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="infoTpl" type="text/template">\r\n    <div class="weui_cells user-info-content">\r\n        <div class="title">个人信息</div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>姓名</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=user.name%>\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>手机号码</p>\r\n            </div>\r\n            <div class="weui_cell_ft colorlightblue">\r\n                <%=user.mobile%>\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>所属单位</p>\r\n            </div>\r\n            <div class="weui_cell_ft colorlightblue">\r\n                湘潭移动\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>工作岗位</p>\r\n            </div>\r\n            <div class="weui_cell_ft colorlightblue">\r\n                <%=user.company%>\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>QQ</p>\r\n            </div>\r\n            <div class="weui_cell_ft show-text show-modify show-qq" data-type="qq">\r\n                <span >\r\n                    <% if(user.qq){ %>\r\n                        <%=user.qq%>\r\n                    <% }else{ %>\r\n                        -\r\n                    <% } %>\r\n                </span>\r\n                <i class="iconfont icon-qianjin"></i>\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>微信</p>\r\n            </div>\r\n            <div class="weui_cell_ft show-text show-modify show-wx" data-type="wx">\r\n                <span>\r\n                    <% if(user.wx){ %>\r\n                        <%=user.wx%>\r\n                    <% }else{ %>\r\n                        -\r\n                    <% } %>\r\n                </span>\r\n                <i class="iconfont icon-qianjin"></i>\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>微博</p>\r\n            </div>\r\n            <div class="weui_cell_ft show-text show-modify show-weibo" data-type="weibo">\r\n                <span>\r\n                    <% if(user.weibo){ %>\r\n                        <%=user.weibo%>\r\n                    <% }else{ %>\r\n                        -\r\n                    <% } %>\r\n                </span>\r\n                <i class="iconfont icon-qianjin"></i>\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>邮箱</p>\r\n            </div>\r\n            <div class="weui_cell_ft show-text show-email colorlightblue">\r\n                <span>\r\n                    <% if(user.email){ %>\r\n                        <%=user.email%>\r\n                    <% }else{ %>\r\n                        -\r\n                    <% } %>\r\n                </span>\r\n                <i class="iconfont icon-qianjin"></i>\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cells user-info-content">\r\n        <div class="title">应用信息</div>\r\n        <div class="weui_cell weui_cell_switch">\r\n            <div class="weui_cell_hd weui_cell_primary">新消息通知</div>\r\n            <div class="weui_cell_ft">\r\n                <input class="weui_switch setting_chk" type="checkbox" checked id="setting_a">\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell weui_cell_switch">\r\n            <div class="weui_cell_hd weui_cell_primary">声音</div>\r\n            <div class="weui_cell_ft">\r\n                <input class="weui_switch setting_chk" type="checkbox" checked id="setting_b">\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell weui_cell_switch">\r\n            <div class="weui_cell_hd weui_cell_primary">震动</div>\r\n            <div class="weui_cell_ft">\r\n                <input class="weui_switch setting_chk" type="checkbox" checked id="setting_c">\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>版本号</p>\r\n            </div>\r\n            <% \r\n                var versionClass = \'\';\r\n                if(platform == \'android\'){\r\n                    versionClass = \'app-update\';\r\n                }\r\n            %>\r\n                <div class="weui_cell_ft check-version <%=versionClass%>">\r\n                    <span>V <%=version%></span>\r\n                    <% if(platform == \'android\'){ %>\r\n                        <i class="iconfont icon-jianchagengxin"></i>\r\n                        <% } %>\r\n                </div>\r\n                <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>意见反馈</p>\r\n            </div>\r\n            <div class="weui_cell_ft show-advise">\r\n                <i class="iconfont icon-qianjin"></i>\r\n            </div>\r\n            <div class="_borderBottom"></div>\r\n        </div>\r\n        <div class="login-out">\r\n            <img src="app_img/login_out.png" class="btn-logout" alt="">\r\n        </div>\r\n    </div>\r\n</script>';});


define('text!view/center/tpl/email.html',[],function () { return '<div class="common-content email-content">\r\n    <div class="weui_cells weui_cells_form">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_hd"><label class="weui_label">邮箱</label></div>\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <input class="weui_input input-email" type="text" placeholder="请输入邮箱">\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell weui_vcode">\r\n            <div class="weui_cell_hd"><label class="weui_label">验证码</label></div>\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <input class="weui_input input-validcode" type="number" placeholder="请输入验证码">\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <img class="validimg" src="<%=img%>">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="email-control">\r\n        <button class="btn btn-primary btn-block btn-lg btn-submit">修改邮箱</button>\r\n    </div>\r\n</div>';});

/**
*   修改邮箱
**/

define('view/center/email',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/center/tpl/email.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/center/tpl/email.html');
	var AppHeader = require('view/app-header');
    var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
            'tap .validimg': 'refreshValidImage',
            'tap .btn-submit': 'submit'
		},
        submit: function(){
            var email = $.trim(this.$('.input-email').val());
            var valid = $.trim(this.$('.input-validcode').val());

            if(!email){
                $.jtoast('请输入邮箱地址');
                return;
            }

            if(!valid){
                $.jtoast('请输入验证码');
                return;
            }

            if(email == this.email){
                $.jtoast('已是当前邮箱地址');
                return;
            }

            $.showLoading('正在提交');
            businessDelegate.modifyEmail({
                email: email,
                validatecode: valid
            },_.bind(function(data){
                $.hideLoading();
                $.toast('修改成功');
                this.trigger('refresh', email);
                this.back();
            },this),_.bind(function(err){
                $.hideLoading();
                $.jtoast(err);
            },this));
        },
        refreshValidImage: function() {
            this.$('.validcode').val('');
            $('.validimg').prop('src', businessDelegate.validImage());
        },
		initialize: function (options) {
            this.email = options.email;

            this.header = new AppHeader({
                host: this,
                main: false, 
                title: '修改邮箱'
            });

            this.$el.empty().append(this.header.$el);
            var tpl = _.template(template)({img:businessDelegate.validImage()});
            this.$el.append(tpl);

            if(this.email){
                this.$('.input-email').val(this.email);
            }
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/center/tpl/modify.html',[],function () { return '<div class="common-content email-content modify-content">\r\n    \r\n</div>\r\n\r\n<script id="qqTpl" type="text/template">\r\n    <div class="weui_cells weui_cells_form">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_hd"><label class="weui_label">QQ</label></div>\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <input class="weui_input input-modify" type="text" placeholder="请输入您的QQ号">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="email-control">\r\n        <button class="btn btn-primary btn-block btn-lg btn-submit">确认修改</button>\r\n    </div>\r\n</script>\r\n\r\n<script id="wxTpl" type="text/template">\r\n    <div class="weui_cells weui_cells_form">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_hd"><label class="weui_label">微信</label></div>\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <input class="weui_input input-modify" type="text" placeholder="请输入您的微信号">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="email-control">\r\n        <button class="btn btn-primary btn-block btn-lg btn-submit">确认修改</button>\r\n    </div>\r\n</script>\r\n\r\n<script id="weiboTpl" type="text/template">\r\n    <div class="weui_cells weui_cells_form">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_hd"><label class="weui_label">微博</label></div>\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <input class="weui_input input-modify" type="text" placeholder="请输入您的微博">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="email-control">\r\n        <button class="btn btn-primary btn-block btn-lg btn-submit">确认修改</button>\r\n    </div>\r\n</script>';});

/**
*   修改邮箱
**/

define('view/center/modify',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/center/tpl/modify.html','view/app-header','view/slide-page'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/center/tpl/modify.html');
    var AppHeader = require('view/app-header');
    var SlidePage = require('view/slide-page');

    var View = SlidePage.extend({
        events: {
            'tap .btn-submit': 'submit'
        },
        submit: function () {
            var str = $.trim(this.$('.input-modify').val());
            var warning = this.$('.input-modify').attr('placeholder');

            if (!str) {
                $.jtoast(warning);
                return;
            }

            var param = {
                wx: window.user.wx,
                qq: window.user.qq,
                weibo: window.user.weibo
            }

            param[this.type] = str;

            $.showLoading('正在提交');
            businessDelegate.modifyInfo(param, _.bind(function (data) {
                $.hideLoading();
                $.toast('修改成功');
                this.trigger('refresh', this.type, str);
                this.back();
            }, this), _.bind(function (err) {
                $.hideLoading();
                $.jtoast(err);
            }, this));
        },
        initialize: function (options) {
            this.type = options.type;
            this.value = options.value;

            var title = '';
            switch (this.type) {
                case 'qq':
                    title = '修改QQ';
                    break;
                case 'wx':
                    title = '修改微信';
                    break;
                case 'weibo':
                    title = '修改微博';
                    break;
            }

            this.header = new AppHeader({
                host: this,
                main: false,
                title: title
            });

            this.$el.empty().append(this.header.$el);
            var tpl = _.template(template)({ img: businessDelegate.validImage() });
            this.$el.append(tpl);


            this.qqTemplate = this.$('#qqTpl').html();
            this.wxTemplate = this.$('#wxTpl').html();
            this.weiboTemplate = this.$('#weiboTpl').html();

            switch (this.type) {
                case 'qq':
                    this.$('.modify-content').html(this.qqTemplate);
                    break;
                case 'wx':
                    this.$('.modify-content').html(this.wxTemplate);
                    break;
                case 'weibo':
                    this.$('.modify-content').html(this.weiboTemplate);
                    break;
            }

            if (this.value) {
                this.$('.input-modify').val(this.value);
            }
        },
        render: function () {
            return this;
        }
    });

    return View;
});


define('text!view/center/tpl/advise.html',[],function () { return '<div class="common-content advise-content">\r\n    <div class="weui_cells weui_cells_form">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <textarea class="weui_textarea input-text" placeholder="请填写您的建议" rows="7"></textarea>\r\n                <!--<div class="weui_textarea_counter"><span>0</span>/200</div>-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="advise-control">\r\n        <button class="btn btn-primary btn-block btn-lg btn-submit">提交</button>\r\n    </div>\r\n</div>';});

/**
*   意见反馈
**/

define('view/center/advise',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/center/tpl/advise.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/center/tpl/advise.html');
	var AppHeader = require('view/app-header');
    var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
            'tap .btn-submit': 'submit'
		},
        submit: function(){
            var text = $.trim(this.$('.input-text').val());

            if(!text){
                $.jtoast('请填写您的建议');
                return;
            }

            $.showLoading('正在提交');
            businessDelegate.addAdvise({
                msgContent: text
            },_.bind(function(data){
                $.hideLoading();
                $.toast('提交成功');
                this.$('.input-text').val('');
            },this),_.bind(function(err){
                $.hideLoading();
                $.jtoast(err);
            },this));
        },
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false, 
                title: '意见反馈'
            });

            this.$el.empty().append(this.header.$el).append(template);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
*   个人中心
**/

define('view/center/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/center/tpl/index.html','view/app-header','view/app-menu','view/center/email','view/center/modify','view/center/advise','view/get-image'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/center/tpl/index.html');
	var AppHeader = require('view/app-header');
	var AppMenu = require('view/app-menu');
	var EmailView = require('view/center/email');
	var ModifyView = require('view/center/modify');
	var Advise = require('view/center/advise');
	var GetImage = require('view/get-image');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
            'tap .avatar img': 'selectWay',
			'tap .show-email': 'viewEmail',
			'tap .show-modify': 'viewModify',
			'tap .show-advise': 'viewAdvise',
			'tap .app-update': 'checkVersion',
			'tap .btn-logout': 'logout',
			'change .setting_chk': 'changeSetting'
		},
		/**
		 * 登出
		 * 清空用户保存信息
		 */
		logout: function () {
			$.confirm("确认退出登录", function () {
				phonegaputil.saveConfig('user', '', function () {
					Backbone.history.navigate('login', { trigger: true });
				}, function () {
					$.toast('登出失败', 'cancel');
				});
			}, $.noop);
		},
		/**
		 * 检查更新
		 */
		checkVersion: function () {
			$.showLoading('检查新版本');

			phonegaputil.updateApp(function (r) {
				$.jtoast(r, '', '', 'black');
				$.hideLoading();
			});
		},
		/**
		 * 意见反馈
		 */
		viewAdvise: function () {
			var view = new Advise();
			view.show();
		},
		/**
		 * 更新其他信息
		 */
		getModify: function (type, value) {
			this.$('.show-'+type+' > span').html(value);
			window.user[type] = value;
			phonegaputil.saveConfig('user', window.user, $.noop, $.noop);
		},
		viewModify: function(e){
			var type = $(e.currentTarget).data('type');
			var view = new ModifyView({
				value: window.user[type],
				type: type
			});
			view.on('refresh', _.bind(this.getModify, this));
			view.show();
		},
		/**
		 * 更新邮箱地址
		 * 重新保存用户信息
		 */
		getEmail: function (email) {
			this.$('.show-email > span').html(email);
			window.user.email = email;
			phonegaputil.saveConfig('user', window.user, $.noop, $.noop);
		},
		viewEmail: function () {
			var view = new EmailView({
				email: window.user.email
			});
			view.on('refresh', _.bind(this.getEmail, this));
			view.show();
		},
		/**
		 * 更改头像显示
		 * 重新保存用户信息
		 */
		//修改头像
		selectWay: function () {
			var view = new GetImage({
				crop: true,
				title: '选择头像'
			});

			view.on('get', _.bind(this.changeAvatar, this));
			view.show();
		},
		changeAvatar: function (src) {
			this.$('.avatar img').prop('src', src).addClass('prepare-upload');

			//上传头像
			$.showLoading('正在上传头像');

			this.canBack = 0;
			this.retryUploadCount = 0;
			this.imageUpload();
		},
		imageUpload: function () {
			this.$uploadingImage = this.$('img.prepare-upload:eq(0)');

			//是否存在图片需要上传
			if (this.$uploadingImage.length > 0) {
				var imageURI = this.$uploadingImage.attr('src');
				var uploadAction = businessDelegate.getUploadUrl();
				var dataParam = phonegaputil.getHeadAndBody({ bucketName: this.bucketName });
				var param = { b: JSON.stringify(dataParam) };

				//开始上传图片
				phonegaputil.uploadPhoto(imageURI, uploadAction, param, _.bind(this.uploadSuccess, this), _.bind(this.uploadFailed, this), $.noop);
			} else {
				//上传数据
				this.submitAvatar();
			}
		},
		//上传成功
		uploadSuccess: function (entry) {
			this.retryUploadCount = 0;

			var data = $.parseJSON(entry.response);

			//上传成功
			if (data.code === 0) {
				// 取消未上传标识
				this.$uploadingImage.removeClass('prepare-upload');

				//获取返回参数
				this.uploadAvatar = data.obj.relativeUrl;
				this.avatar = data.obj.url;
				this.imageUpload();
			} else {
				this.canBack = 1;
				$.hideLoading();
				$.jtoast('上传失败，请重试');
				this.$('.avatar img').prop('src', this.orginSrc);
			}
		},
		//上传失败
		uploadFailed: function (error) {
			// 失败自动重试
			this.retryUploadCount++;
			if (this.retryUploadCount > 10) {
				//上传图片结束
				this.canBack = 1;
				$.hideLoading();
				$.jtoast('上传失败, 请重试');
				this.$('.avatar img').prop('src', this.orginSrc);
			} else {
				this.imageUpload();
			}
		},
		//更新头像数据
		submitAvatar: function () {
			businessDelegate.modifyAvatar({
                headImgUrl: this.uploadAvatar
            }, _.bind(function (data) {
				this.canBack = 1;
				$.hideLoading();
                $.toast('修改头像成功');

				window.user.headImgUrl = this.avatar;
				this.orginSrc = this.avatar;

				phonegaputil.saveConfig('user', window.user, $.noop, $.noop);
            }, this), _.bind(function (err) {
				this.canBack = 1;
                $.hideLoading();
                $.jtoast(err);
            }, this));
		},
		getUserInfo: function (callback) {
			if (!this.isPullRefresh) {
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getUserInfo(_.bind(function (data) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}
				
				window.user = $.extend(window.user, data.obj);
				phonegaputil.saveConfig('user', window.user, $.noop, $.noop);

				this.renderUserInfo(data.obj);
				this.$wrapper.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}
				this.renderUserInfo(window.user);
				callback();
			}, this));
		},
		changeSetting: function(){
			var setting = {};
			$('.setting_chk').each(function(i,v){
				var value = $(v).prop('checked');
				var key = $(v).prop('id').replace('setting_','');
				setting[key] = value;
			});
			console.log(setting);
			$.jStorage.set('setting', setting);
		},
		renderUserInfo: function (user) {
			if (user.headImgUrl) {
				this.$('.user-info-header > .avatar > img').attr('src', user.headImgUrl);
			}
			this.$('.user-info-header > h3').html(user.name);
			this.$('.user-info-header > p').html(user.company);

			var tpl = _.template(this.infoTemplate)({ user: user, version: window.version, platform: phonegaputil.getDevicePlatform() })
			this.$content.html(tpl);

			var setting = $.jStorage.get('setting');
			_.each(setting, _.bind(function (o, k) {
				this.$('#setting_' + k).prop('checked', o);
			}, this));
		},
		backbutton: function () {
			if (!this.canBack) {
				return;
			}

            Backbone.history.navigate('index', { trigger: true });
		},
		initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: true,
                title: '我的'
            });

			this.header.setRightBtn('<span class="text btn-logout">注销账号</span>');

			this.menu = new AppMenu({
				index: 2
			});

			// this.$el.empty().append(this.header.$el).append(template).append(this.menu.$el);
			this.$el.empty().append(template).append(this.menu.$el);

			this.$content = this.$('.user-info-wrapper');
			this.infoTemplate = this.$('#infoTpl').html();
			this.$wrapper = this.$('.user-info-container > div')

			this.canBack = 1;
			this.bucketName = 'avatar';
			this.uploadAvatar = '';
			this.avatar = '';

			this.orginSrc = this.$('.avatar img').prop('src');

			this.isPullRefresh = 0;

			this.getUserInfo($.noop);
		},
		render: function () {
			this.$wrapper.pullToRefresh();
			this.$wrapper.on("pull-to-refresh", _.bind(function () {
				this.isPullRefresh = 1;
				this.getUserInfo(_.bind(function () {
					this.$wrapper.pullToRefreshDone();
				}, this));
			}, this));

			return this;
		}
	});

	return View;
});


define('text!view/chatroom/tpl/list.html',[],function () { return '<div class="chatRoomHeader">\r\n    <div class="titleAndNumber">\r\n        <span class="">沟通</span>\r\n        <span class="">(0)</span>\r\n    </div>  \r\n    <img class="bannerbg" src="app_img/banner.png" alt="">\r\n    <img class="searchBtn" src="app_img/search.png" alt="">\r\n</div>\r\n<div class="common-content overhidden with-menu bg-gray" id="chatroomList">\r\n    <div class="refresh_inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="chatroom-group-wrapper">\r\n            <div class="warning-panel">暂无数据</div>\r\n            <!--<div class="chatroom-group-box clearfix">\r\n                <div class="pull-left">\r\n                    <img src="app_img/noavatar.png" alt="">\r\n                </div>\r\n                <div class="overhidden">\r\n                    <div class="title clearfix">\r\n                        <div class="pull-left">测试名称</div>\r\n                        <div class="pull-right">16:12</div>\r\n                    </div>\r\n                    <p class="info">\r\n                        测试测试测试\r\n                    </p>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="tpl" type="text/template">\r\n    <%\r\n        if(list.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(list,function(v,i){\r\n    %>\r\n        <div class="chatroom-group-box clearfix" data-uuid="<%=v.uuid%>" data-title="<%=v.roomTitle%>">\r\n            <div class="pull-left">\r\n                <% if(v.roomImg){ %>\r\n                    <!--<img src="<%=v.roomImg%>">-->\r\n                    <div class="img" style="background:url(<%=v.roomImg%>) no-repeat center center/cover"></div>\r\n                <% }else{ %>\r\n                    <!--<img src="app_img/icon.jpg">-->\r\n                    <div class="img" style="background:url(app_img/icon.jpg) no-repeat center center/cover"></div>\r\n                <% } %>\r\n            </div>\r\n            <div class="overhidden">\r\n                <div class="title clearfix">\r\n                    <div class="pull-left"><%=v.roomTitle%></div>\r\n                    <div class="overhidden"><%=v.createTimeStr.substr(5,5)%></div>\r\n                </div>\r\n                <p class="info">\r\n                    <%=v.roomDesc%>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n</script>';});

/**
*   沟通列表
**/

define('view/chatroom/list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/chatroom/tpl/list.html','view/app-header','view/app-menu'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/chatroom/tpl/list.html');
	var AppHeader = require('view/app-header');
	var AppMenu = require('view/app-menu');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .chatroom-group-box': 'viewChatroom' ,
			'tap .chatRoomHeader img.searchBtn' : 'toastInfo'
		},
        toastInfo: function(e){
            $.jtoast("敬请期待");
        },
		viewChatroom: function (e) {
			var uuid = $(e.currentTarget).data('uuid');
			var title = $(e.currentTarget).data('title');

			if (!uuid || !title) {
				return;
			}

			if (!('WebSocket' in window)) {
				$.alert('您的系统不支持websoket<br>无法使用聊天室');
				return;
			}
			
			Backbone.history.navigate('chatroom/' + uuid + '/' + title, { trigger: true });
		},
		backbutton: function () {
			Backbone.history.navigate('index', { trigger: true });
		},
		getList: function (callback) {
			if (!this.isPullRefresh) {
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getChatRoomList({
				maxWidth: 80
			}, _.bind(function (data) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				var tpl = _.template(this.template)({ list: data.obj.rows });
				this.$listContent.html(tpl);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				callback();
			}, this));
		},
		initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: true,
				title: '沟通'
            });

			// this.header.setRightBtn('<span class="add-chatroom"><i class="iconfont icon-jia"></i></span>');

			this.menu = new AppMenu({
				index: 0
			});

            // this.$el.empty().append(this.header.$el).append(template).append(this.menu.$el);
			this.$el.empty().append(template).append(this.menu.$el);
			this.$listContent = this.$('.chatroom-group-wrapper');
			this.template = this.$('#tpl').html();
			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';
		},
		render: function () {
			//下拉刷新
            this.$('#chatroomList > div').pullToRefresh();
            this.$('#chatroomList > div').on("pull-to-refresh", _.bind(function () {
				this.isPullRefresh = 1;
				this.getList(_.bind(function () {
					this.$('#chatroomList > div').pullToRefreshDone();
				}, this));
			}, this));

			this.getList($.noop);

			return this;
		}
	});

	return View;
});

// MIT License:
//
// Copyright (c) 2010-2012, Joe Walnes
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/**
 * This behaves like a WebSocket in every way, except if it fails to connect,
 * or it gets disconnected, it will repeatedly poll until it successfully connects
 * again.
 *
 * It is API compatible, so when you have:
 *   ws = new WebSocket('ws://....');
 * you can replace with:
 *   ws = new ReconnectingWebSocket('ws://....');
 *
 * The event stream will typically look like:
 *  onconnecting
 *  onopen
 *  onmessage
 *  onmessage
 *  onclose // lost connection
 *  onconnecting
 *  onopen  // sometime later...
 *  onmessage
 *  onmessage
 *  etc...
 *
 * It is API compatible with the standard WebSocket API, apart from the following members:
 *
 * - `bufferedAmount`
 * - `extensions`
 * - `binaryType`
 *
 * Latest version: https://github.com/joewalnes/reconnecting-websocket/
 * - Joe Walnes
 *
 * Syntax
 * ======
 * var socket = new ReconnectingWebSocket(url, protocols, options);
 *
 * Parameters
 * ==========
 * url - The url you are connecting to.
 * protocols - Optional string or array of protocols.
 * options - See below
 *
 * Options
 * =======
 * Options can either be passed upon instantiation or set after instantiation:
 *
 * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });
 *
 * or
 *
 * var socket = new ReconnectingWebSocket(url);
 * socket.debug = true;
 * socket.reconnectInterval = 4000;
 *
 * debug
 * - Whether this instance should log debug messages. Accepts true or false. Default: false.
 *
 * automaticOpen
 * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().
 *
 * reconnectInterval
 * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.
 *
 * maxReconnectInterval
 * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.
 *
 * reconnectDecay
 * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.
 *
 * timeoutInterval
 * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.
 *
 */
(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define('reconnectingWebSocket',[], factory);
    } else if (typeof module !== 'undefined' && module.exports){
        module.exports = factory();
    } else {
        global.ReconnectingWebSocket = factory();
    }
})(this, function () {

    if (!('WebSocket' in window)) {
        return;
    }

    function ReconnectingWebSocket(url, protocols, options) {

        // Default settings
        var settings = {

            /** Whether this instance should log debug messages. */
            debug: false,

            /** Whether or not the websocket should attempt to connect immediately upon instantiation. */
            automaticOpen: true,

            /** The number of milliseconds to delay before attempting to reconnect. */
            reconnectInterval: 1000,
            /** The maximum number of milliseconds to delay a reconnection attempt. */
            maxReconnectInterval: 30000,
            /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */
            reconnectDecay: 1.5,

            /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */
            timeoutInterval: 2000,

            /** The maximum number of reconnection attempts to make. Unlimited if null. */
            maxReconnectAttempts: null,

            /** The binary type, possible values 'blob' or 'arraybuffer', default 'blob'. */
            binaryType: 'blob'
        }
        if (!options) { options = {}; }

        // Overwrite and define settings with options if they exist.
        for (var key in settings) {
            if (typeof options[key] !== 'undefined') {
                this[key] = options[key];
            } else {
                this[key] = settings[key];
            }
        }

        // These should be treated as read-only properties

        /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */
        this.url = url;

        /** The number of attempted reconnects since starting, or the last successful connection. Read only. */
        this.reconnectAttempts = 0;

        /**
         * The current state of the connection.
         * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED
         * Read only.
         */
        this.readyState = WebSocket.CONNECTING;

        /**
         * A string indicating the name of the sub-protocol the server selected; this will be one of
         * the strings specified in the protocols parameter when creating the WebSocket object.
         * Read only.
         */
        this.protocol = null;

        // Private state variables

        var self = this;
        var ws;
        var forcedClose = false;
        var timedOut = false;
        var eventTarget = document.createElement('div');

        // Wire up "on*" properties as event handlers

        eventTarget.addEventListener('open',       function(event) { self.onopen(event); });
        eventTarget.addEventListener('close',      function(event) { self.onclose(event); });
        eventTarget.addEventListener('connecting', function(event) { self.onconnecting(event); });
        eventTarget.addEventListener('message',    function(event) { self.onmessage(event); });
        eventTarget.addEventListener('error',      function(event) { self.onerror(event); });

        // Expose the API required by EventTarget

        this.addEventListener = eventTarget.addEventListener.bind(eventTarget);
        this.removeEventListener = eventTarget.removeEventListener.bind(eventTarget);
        this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);

        /**
         * This function generates an event that is compatible with standard
         * compliant browsers and IE9 - IE11
         *
         * This will prevent the error:
         * Object doesn't support this action
         *
         * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563
         * @param s String The name that the event should use
         * @param args Object an optional object that the event will use
         */
        function generateEvent(s, args) {
        	var evt = document.createEvent("CustomEvent");
        	evt.initCustomEvent(s, false, false, args);
        	return evt;
        };

        this.open = function (reconnectAttempt) {
            ws = new WebSocket(self.url, protocols || []);
            ws.binaryType = this.binaryType;

            if (reconnectAttempt) {
                if (this.maxReconnectAttempts && this.reconnectAttempts > this.maxReconnectAttempts) {
                    return;
                }
            } else {
                eventTarget.dispatchEvent(generateEvent('connecting'));
                this.reconnectAttempts = 0;
            }

            if (self.debug || ReconnectingWebSocket.debugAll) {
                console.debug('ReconnectingWebSocket', 'attempt-connect', self.url);
            }

            var localWs = ws;
            var timeout = setTimeout(function() {
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'connection-timeout', self.url);
                }
                timedOut = true;
                localWs.close();
                timedOut = false;
            }, self.timeoutInterval);

            ws.onopen = function(event) {
                clearTimeout(timeout);
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'onopen', self.url);
                }
                self.protocol = ws.protocol;
                self.readyState = WebSocket.OPEN;
                self.reconnectAttempts = 0;
                var e = generateEvent('open');
                e.isReconnect = reconnectAttempt;
                reconnectAttempt = false;
                eventTarget.dispatchEvent(e);
            };

            ws.onclose = function(event) {
                clearTimeout(timeout);
                ws = null;
                if (forcedClose) {
                    self.readyState = WebSocket.CLOSED;
                    eventTarget.dispatchEvent(generateEvent('close'));
                } else {
                    self.readyState = WebSocket.CONNECTING;
                    var e = generateEvent('connecting');
                    e.code = event.code;
                    e.reason = event.reason;
                    e.wasClean = event.wasClean;
                    eventTarget.dispatchEvent(e);
                    if (!reconnectAttempt && !timedOut) {
                        if (self.debug || ReconnectingWebSocket.debugAll) {
                            console.debug('ReconnectingWebSocket', 'onclose', self.url);
                        }
                        eventTarget.dispatchEvent(generateEvent('close'));
                    }

                    var timeout = self.reconnectInterval * Math.pow(self.reconnectDecay, self.reconnectAttempts);
                    setTimeout(function() {
                        self.reconnectAttempts++;
                        self.open(true);
                    }, timeout > self.maxReconnectInterval ? self.maxReconnectInterval : timeout);
                }
            };
            ws.onmessage = function(event) {
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    // console.debug('ReconnectingWebSocket', 'onmessage', self.url, event.data);
                }
                var e = generateEvent('message');
                e.data = event.data;
                eventTarget.dispatchEvent(e);
            };
            ws.onerror = function(event) {
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'onerror', self.url, event);
                }
                eventTarget.dispatchEvent(generateEvent('error'));
            };
        }

        // Whether or not to create a websocket upon instantiation
        if (this.automaticOpen == true) {
            this.open(false);
        }

        /**
         * Transmits data to the server over the WebSocket connection.
         *
         * @param data a text string, ArrayBuffer or Blob to send to the server.
         */
        this.send = function(data) {
            if (ws) {
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'send', self.url, data);
                }
                return ws.send(data);
            } else {
                throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';
            }
        };

        /**
         * Closes the WebSocket connection or connection attempt, if any.
         * If the connection is already CLOSED, this method does nothing.
         */
        this.close = function(code, reason) {
            // Default CLOSE_NORMAL code
            if (typeof code == 'undefined') {
                code = 1000;
            }
            forcedClose = true;
            if (ws) {
                ws.close(code, reason);
            }
        };

        /**
         * Additional public API method to refresh the connection if still open (close, re-open).
         * For example, if the app suspects bad data / missed heart beats, it can try to refresh.
         */
        this.refresh = function() {
            if (ws) {
                ws.close();
            }
        };
    }

    /**
     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;
     * this indicates that the connection is ready to send and receive data.
     */
    ReconnectingWebSocket.prototype.onopen = function(event) {};
    /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */
    ReconnectingWebSocket.prototype.onclose = function(event) {};
    /** An event listener to be called when a connection begins being attempted. */
    ReconnectingWebSocket.prototype.onconnecting = function(event) {};
    /** An event listener to be called when a message is received from the server. */
    ReconnectingWebSocket.prototype.onmessage = function(event) {};
    /** An event listener to be called when an error occurs. */
    ReconnectingWebSocket.prototype.onerror = function(event) {};

    /**
     * Whether all instances of ReconnectingWebSocket should log debug messages.
     * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.
     */
    ReconnectingWebSocket.debugAll = false;

    ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;
    ReconnectingWebSocket.OPEN = WebSocket.OPEN;
    ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;
    ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;

    return ReconnectingWebSocket;
});


define('text!view/chatroom/tpl/index.html',[],function () { return '<div class="common-content">\r\n    <div class="chatroom-header clearfix">\r\n        <div class="client-status pull-left">\r\n            <!--当前用户状态-->\r\n            正在连接...\r\n        </div>\r\n        <div class="user-status pull-right">\r\n            当前<span>-</span>人\r\n        </div>\r\n    </div>\r\n\r\n    <div class="chat-room-warning">\r\n        正在发送...<a class="resend">重新发送</a>\r\n    </div>\r\n\r\n    <div class="chatroom-wrapper common-content">\r\n        <div class="chatroom-content-wrapper">\r\n            <div class="chatroom-content pd10 clearfix">\r\n            </div>\r\n        </div>\r\n\r\n        <div class="chatroom-footer keyboard-footer">\r\n            <div class="input-type">\r\n                <i class="iconfont icon-yuyin3 change-to-voice"></i>\r\n            </div>\r\n            <div class="input-send">\r\n                <!--<div class="text-input" contenteditable="true"></div>-->\r\n                <input class="weui_input text-input form-control" type="text">\r\n            </div>\r\n            <div class="input-btn">\r\n                <button class="btn btn-primary btn-sm btn-send">发送</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="chatroom-footer voice-footer hidden">\r\n            <div class="input-type">\r\n                <i class="iconfont icon-jianpan change-to-keyboard"></i>\r\n            </div>\r\n            <div class="input-voice-btn">\r\n                <div class="btn-start-voice">点击说话</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<audio id="playvoice" src="#" class="hide">\r\n    您的浏览器不支持 audio 标签。\r\n</audio>\r\n\r\n<div class="voice-mask">\r\n    <div class="voice-wrapper">\r\n        <p class="voice-title">正在录音</p>\r\n        <div class="voice-spinner-wrapper">\r\n            <div class="voice-spinner">\r\n                <div class="rect1"></div>\r\n                <div class="rect2"></div>\r\n                <div class="rect3"></div>\r\n                <div class="rect4"></div>\r\n                <div class="rect5"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="voice-progress">\r\n            <div class="voice-progress-bar"></div>\r\n            <div class="voice-progress-ball"></div>\r\n        </div>\r\n\r\n        <p class="voice-control">\r\n            <button class="btn btn-primary btn-sm btn-end-voice">结束说话</button>\r\n        </p>\r\n    </div>\r\n</div>\r\n\r\n<div id="userCard" class="weui-popup-container popup-bottom">\r\n    <div class="weui-popup-overlay"></div>\r\n    <div class="weui-popup-modal">\r\n        <div class="header clearfix">\r\n            名片\r\n            <div class="close">关闭</div>\r\n        </div>\r\n        <div class="avatar">\r\n            <img src="app_img/noavatar.png">\r\n        </div>\r\n        <div class="control">\r\n            <a href="javascript:;"><button class="btn btn-primary">\r\n                <i class="iconfont icon-dianhua"></i>\r\n            </button></a>\r\n        </div>\r\n        <div class="info">\r\n            <div class="weui_cells">\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>姓名</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft usercard-name">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>手机</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft usercard-mobile">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>所属</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft usercard-company">\r\n                        -\r\n                    </div>\r\n                </div>\r\n                <div class="weui_cell">\r\n                    <div class="weui_cell_bd weui_cell_primary">\r\n                        <p>邮箱</p>\r\n                    </div>\r\n                    <div class="weui_cell_ft usercard-email">\r\n                        -\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<script id="message-box-tpl" type="text/template">\r\n    <% \r\n        var positionClass = \'pull-left\';\r\n        if(data.user.uuid == window.user.uuid){\r\n            positionClass = \'pull-right\';\r\n        }\r\n    %>\r\n\r\n    <% if(time){ %>\r\n        <div class="chatroom-time-box">\r\n            <div class="panel"><%=time%></div>\r\n        </div>\r\n    <% } %>\r\n\r\n    <div class="chatroom-message-box <%=positionClass%>">\r\n        <% if(data.user.uuid != window.user.uuid){ %> \r\n            <div class="avatar-wrapper" data-uuid="<%=data.user.uuid%>">\r\n                <% if(data.user.avatar){ %>\r\n                    <img src="<%=data.user.avatar%>">\r\n                <% }else{ %>\r\n                    <img src="app_img/noavatar.png">\r\n                <% } %>\r\n            </div>\r\n        <% } %>\r\n\r\n        <div class="message-wrapper clearfix">\r\n            <div class="clientname"><%=data.user.name%></div>\r\n            <% if(data.type == \'text\'){ %>\r\n                <div class="message">\r\n                    <%=data.message%>\r\n                </div>\r\n            <% }else if(data.type == \'voice\'){ %>\r\n                <div class="message message-voice" data-url="<%=data.message%>">\r\n                    <span>点击播放语音</span> <i class="iconfont icon-yuyin"></i>\r\n                </div>\r\n            <% } %>\r\n        </div>\r\n\r\n        <% if(data.user.uuid == window.user.uuid){ %>\r\n            <div class="avatar-wrapper" data-uuid="<%=data.user.uuid%>">\r\n                <img src="<%=data.user.avatar%>">\r\n            </div>\r\n        <% } %>\r\n    </div>\r\n</script>';});


define('text!view/chatroom/tpl/client-list.html',[],function () { return '<div class="common-content client-list-content clearfix">\r\n    \r\n</div>\r\n\r\n<script id="clientListTpl" type="tempalte/text">\r\n<% _.each(list, function(v){ %>\r\n    <div class="client-box-wrapper">\r\n        <div class="client-box" data-uuid="<%=v.uuid%>">\r\n            <% if(v.headImgUrl){ %>\r\n                <img src="<%=v.headImgUrl%>">\r\n            <% }else{ %>\r\n                <img src="app_img/noavatar.png">\r\n            <% } %>\r\n            <div class="client-box-text"><%=v.name%></div>\r\n        </div>\r\n    </div>\r\n<% }); %>\r\n</script>';});

define('view/chatroom/client-list',['require','exports','module','jquery','underscore','backbone','utils','phonegaputil','business-delegate','text!view/chatroom/tpl/client-list.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/chatroom/tpl/client-list.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
		events: {
            'tap .client-box': 'showUserCard'
		},
        backbutton: function(){
            if(this.host.$('#userCard').css('display') == 'block'){
				$.closePopup();
				return;
			}

            this.back();
        },
        showUserCard: function(e){
            var $e = $(e.currentTarget);
			var uuid = $e.data('uuid');

            if(uuid.length == 32){
				$.jtoast('您无法查看该用户的信息');
				return;
			}

            var obj = _.find(this.list, function(o){
                return uuid == o.uuid
            });

            this.host.renderUserCard(obj);
		    this.host.$('#userCard').popup();
            return false;
        },
        getList: function(){
            $.showLoading();
            businessDelegate.getClientUserList({
                charRoomUuid:this.charRoomUuid
            },_.bind(function(data){
				$.hideLoading();
                this.list = data;
                var tpl = _.template(this.listTemplate)({list: data});
                this.$content.html(tpl);

                // alert($('.client-box').width());
                // alert($('.common-content').width());
            },this),_.bind(function(err){
				$.hideLoading();
				$.jtoast(err);
                this.$content.html('<div class="warning-panel">无法获取数据</div>')
            },this));
        },
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false,
                title: '在线用户'
            });

			this.$el.empty().append(this.header.$el).append(template);
            this.listTemplate = this.$('#clientListTpl').html();
            this.$content = this.$('.client-list-content');

            this.list = [];
            this.host = options.host;

            this.charRoomUuid = options.charRoomUuid;
		},
		render: function () {
            this.getList();
			return this;
		}
	});

	return View;
});

/**
*   聊天室
**/

define('view/chatroom/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','reconnectingWebSocket','utils','phonegaputil','business-delegate','text!view/chatroom/tpl/index.html','view/app-header','view/app-menu','view/chatroom/client-list'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');
	var ReconnectingWebSocket = require('reconnectingWebSocket');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/chatroom/tpl/index.html');
	var AppHeader = require('view/app-header');
	var AppMenu = require('view/app-menu');

	var ClientList = require('view/chatroom/client-list');
	
	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .right-button': 'openClientList',
            'tap .input-type': 'changeInput',
			'tap .btn-send': 'sendText',
			'focus .text-input': 'scrollDown',
			//用户名片
			'tap .avatar-wrapper': 'getUserCard',
			'tap #userCard .close': 'closeUserCard',
			//录音
			'tap .btn-start-voice': 'startRecordVoice',
			'tap .btn-end-voice': 'endRecordVoice',
			//播放
			'tap .message-voice': 'playVoice'
		},
		openClientList: function () {
			this.clientList = new ClientList({
				host: this,
				charRoomUuid:this.charRoomUuid
			});
			this.clientList.show();
		},
		closeUserCard: function () {
			this.$('#userCard .avatar > img').prop('src', 'app_img/noavatar.png');
			this.$('#userCard .control > a').prop('href', 'javascript:;');
			this.$('#userCard .usercard-name').html('-');
			this.$('#userCard .usercard-mobile').html('-');
			this.$('#userCard .usercard-company').html('-');
			this.$('#userCard .usercard-email').html('-');
			$.closePopup();
		},
		renderUserCard: function (data) {
			if (data.headImgUrl) {
				this.$('#userCard .avatar > img').prop('src', data.headImgUrl);
			}

			this.$('#userCard .control > a').prop('href', 'tel:' + data.mobile);
			this.$('#userCard .usercard-name').html(data.name);
			this.$('#userCard .usercard-mobile').html(data.mobile);
			this.$('#userCard .usercard-company').html(data.company);
			this.$('#userCard .usercard-email').html(data.email);
		},
		getUserCard: function (e) {
			var $e = $(e.currentTarget);
			var uuid = $e.data('uuid');

			console.log(uuid)
			if(uuid.length == 32){
				$.jtoast('您无法查看该用户信息');
				return;
			}

			$.showLoading('正在获取信息');
			businessDelegate.getClientUserInfo({
				charRoomUuid:this.charRoomUuid,
				userUuid: uuid
			}, _.bind(function (data) {
				$.hideLoading();
				this.renderUserCard(data.obj);
				this.$('#userCard').popup();
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		changeInput: function (e) {
			var $e = $(e.currentTarget);
			if ($e.find('i').hasClass('change-to-voice')) {
				this.$('.keyboard-footer').addClass('hidden');
				this.$('.voice-footer').removeClass('hidden');
				this.input_type = 'voice';
				return;
			}

			if ($e.find('i').hasClass('change-to-keyboard')) {
				this.$('.voice-footer').addClass('hidden');
				this.$('.keyboard-footer').removeClass('hidden');
				this.input_type = 'text';
				return;
			}
		},
		sendText: function (e) {
			// this.receiveMessage({});
			// return;

			console.log(this.input_type);

			var reg = new RegExp("<div><br></div>", "gmi");
			// var text = $.trim(this.$('.text-input').html()).replace(reg, '');
			var text = $.trim(this.$('.text-input').val()).replace(reg, '');

			if (!text) {
				$.jtoast('请输入发送内容');
				// this.$('.text-input').html('');
				this.$('.text-input').val('');
				return;
			}

			this.socket.send(this.formatMessage(text, this.input_type));
			// this.$('.text-input').html('');
			this.$('.text-input').val('');
		},
		/**
		 * 录音
		 */
		refreshRecordVoice: function () {
			this.$('.voice-progress-bar').css('width', 0);
			this.$('.voice-progress-ball').css('left', 0);
			this.$('.voice-mask').hide(); //隐藏遮罩层
            clearInterval(this.count_interval); //清除时间循环
			this.initRecordVoiceArg();
		},
		initRecordVoiceArg: function () {
			this.record_time = 60;   //最大录音时长
			this.record_count_time = 0; //录音计时
			this.count_interval = null; //计时器
			this.record_end = 1;    //是否录音完成
		},
		startRecordVoice: function () {
			this.isRecording = 1;	//开始录音

			this.initRecordVoiceArg();

			this.$('.voice-mask').show();

			this.count_interval = setInterval(_.bind(function () {
				this.record_count_time++;
				console.log(this.record_count_time);

				//启用进度条
				var num = parseInt(this.record_count_time / this.record_time * 100);
				var per = num + '%';

				this.$('.voice-progress-bar').css('width', per);
				this.$('.voice-progress-ball').css('left', per);

				//当时长等于指定录音时长
				if (this.record_count_time == this.record_time) {
					this.endRecordVoice();
				}
			}, this), 1000);

			if (window.cordova) {
				window.plugins.audioRecorderAPI.record(_.bind(function (msg) {
					console.log('too long');
					this.refreshRecordVoice();
				}, this), _.bind(function (msg) {
					$.toast('录音出错', 'cancel');
					this.refreshRecordVoice();
				}, this), 1000);	//设置超长时间，千秒
			} else {
				console.log('开始录音');
			}
		},
		endRecordVoice: function () {
			/**
			 * 录音时间太短不做发送处理
			 */
			if (this.record_count_time < 1) {
				$.toast('录音时间太短', 'cancel');
				this.overRecordVoice();
				return;
			}

			//成功录音
			if (window.cordova) {
				window.plugins.audioRecorderAPI.stop(_.bind(function (msg) {
					this.successRecordVoice(msg);
				}, this), _.bind(function (msg) {
					$.toast('录音出错', 'cancel');
				}, this));
			} else {
				this.successRecordVoice('测试url');
			}

			this.isRecording = 0;
			this.refreshRecordVoice();
		},
		//强制停止录音
		overRecordVoice: function () {
			if (window.cordova) {
				window.plugins.audioRecorderAPI.stop($.noop, $.noop);
			}

			this.isRecording = 0;
			this.refreshRecordVoice();
		},
		successRecordVoice: function (url) {
			// 成功录音
			// if (window.cordova) {
			// 	cordova.plugins.disusered.open('file:' + url, $.noop, $.noop);
			// } else {
			// 	console.log('ok');
			// }

			$.confirm('确认发送语音', _.bind(function () {
				console.log('send');
				this.voiceUpload(url);
			}, this), $.noop)

		},
		/**
		 * 上传声音
		 */
		voiceUpload: function (url) {
			if (!window.cordova) {
				return;
			}

			//是否存在图片需要上传
			var uploadAction = businessDelegate.getRecordUploadUrl();
			var dataParam = phonegaputil.getHeadAndBody({ mobile: window.user.mobile });
			var param = { b: JSON.stringify(dataParam) };

			//开始上传图片
			phonegaputil.uploadAudio(url, uploadAction, param, _.bind(this.uploadSuccess, this), _.bind(this.uploadFailed, this), $.noop);
		},
		uploadSuccess: function (entry) {
			var data = $.parseJSON(entry.response);

			if (data.code === 0) {
				//发送语音信息
				this.socket.send(this.formatMessage(data.obj.url, this.input_type));
			} else {
				console.log('error');
			}
		},
		uploadFailed: function () {
			console.log('error');
		},
		playVoiceNavite: function (url) {
			if (window.cordova) {
				this.navite_media = new Media(url, _.bind(function () {
					console.log("playAudio():Audio Success");
					this.playingUrl = '';
					this.$('.message-voice').removeClass('active').find('span').html('点击播放语音');
					if (this.navite_media) {
						this.navite_media.stop();
						this.navite_media.release();
						this.navite_media = null;
					}
				}, this), function (err) {
					console.log("playAudio():Audio Error: " + err);
				});
				this.navite_media.play();
			}
		},
		playVoice: function (e) {
			if (this.$(".message-voice.active").length > 0) {
				$.jtoast('正在播放语音', '', '', 'black');
				return;
			}

			var $e = $(e.currentTarget);
			//	this.$('.message-voice').removeClass('active').find('span').html('点击播放语音');

			var url = $e.data('url');

			if (this.playingUrl == url) {
				this.playingUrl = '';
				return;
			} else {
				$e.addClass('active');
				$e.find('span').html('正在播放');

				this.playingUrl = url;

				if (window.cordova) {
					this.playVoiceNavite(url);
				} else {
					this.audio.pause();
					this.$audio.prop('src', url);
					this.audio.play();
				}
			}
		},
		/**
		 * 刷新消息
		 * 刷新聊天室状态信息
		 */
		formatMessage: function (msg, type) {
			var message = {
				charRoomUuid:this.charRoomUuid ,
				user: {
					avatar: window.user.headImgUrl,
					name: window.user.name,
					mobile: window.user.mobile,
					uuid: window.user.uuid
				},
				type: type, //voice text
				message: msg
			}

			return JSON.stringify(message);
		},
		receiveMessage: function (obj) {
			// obj = {
			// 	user: {
			// 		avatar: window.user.headImgUrl,
			// 		name: window.user.name,
			// 		mobile: window.user.mobile,
			// 		uuid: window.user.uuid+1
			// 	},
			// 	type: 'voice', //voice text
			// 	message: 'aaaaaaaaaaaaaaaaaa'
			// }

			console.log(obj);

			var limit = 10 * 60 * 1000;	//时间span产生间隔，10分钟
			// var limit = 60000;

			//展示之前的消息
			if (obj.ordMsgList && obj.ordMsgList.length > 0) {
				_.each(obj.ordMsgList, _.bind(function (v) {
					var time = '';

					if (!this.lastMessageTimeStamp) {
						//展示开头时间
						time = utils.formatDateTime(v.timestamp).substr(0, 16);
					} else {
						var diff = v.timestamp - this.lastMessageTimeStamp;
						if (diff > limit) {
							//展示时间
							time = utils.formatDateTime(v.timestamp).substr(0, 16);
						}
					}
					this.lastMessageTimeStamp = v.timestamp;
					var tpl = _.template(this.messageBoxTemplate)({ data: v, time: time });
					this.$content.append(tpl);
					//装入消息盒子
					this.messageBoxs.push(v);
				}, this));
			}

			if (obj.serverInfo) {
				this.$('.user-status > span').html(obj.serverInfo.userCount);
			}

			//收到消息处理
			if (obj.type == 'text' || obj.type == 'voice') {
				//装入消息盒子
				this.messageBoxs.push(obj);

				//保持页面固定条数条记录
				if (this.messageBoxs.length > this.limitBox) {
					this.messageBoxs.shift();
					this.$content.find('.chatroom-message-box:eq(0)').remove();
				}

				var time = '';
				if (!this.lastMessageTimeStamp) {
					//展示开头时间
					time = utils.formatDateTime(obj.timestamp).substr(0, 16);
				} else {
					var diff = obj.timestamp - this.lastMessageTimeStamp;
					if (diff > limit) {
						//展示时间
						time = utils.formatDateTime(obj.timestamp).substr(0, 16);
					}
				}

				var tpl = _.template(this.messageBoxTemplate)({ data: obj, time: time });
				this.$content.append(tpl);
			} else {
				//其他处理
			}

			//保持滚动条在底部
			this.scrollDown();
		},
		resize: function () {
			this.scrollDown();
		},
		scrollDown: function () {
			var h = this.$wrapper[0].scrollHeight;
			this.$wrapper.scrollTop(h);
		},
		/**
		 * 初始化
		 */
		initWebSockt: function (url) {
			if (this.socket) {
				return;
			}

			this.socket = new ReconnectingWebSocket(url, null, {
				debug: true,
				reconnectInterval: 3000,
				maxReconnectAttempts: 50
			});

			//重连
			this.socket.onconnecting = _.bind(function (event) {
				console.log('=========================connecting===============');
				//停止录音
				if(this.isRecording){
					this.overRecordVoice();
				}

				//关闭弹出层
				$.closePopup();
				if (this.clientList) {
					this.clientList.back();
				}

				console.log(this.relink);
				if (!this.relink) {
					$.showLoading('正在重新连接', function () {
						$('.weui_mask_transparent').css('top', '45px');
					});
				}

				this.relink++;
				this.$chatroomStatus.html('正在连接');
			}, this);

			//收到信息
			this.socket.onmessage = _.bind(function (event) {
				console.log('=========================message===============');
				// console.log('Received: ' + event.data);
				var data = JSON.parse(event.data);
				this.receiveMessage(data);
			}, this);

			//当连接上
			this.socket.onopen = _.bind(function (event) {
				console.log('==========================open===============');

				$.hideLoading();

				//停止录音
				if(this.isRecording){
					this.overRecordVoice();
				}

				//关闭弹出层
				$.closePopup();
				if (this.clientList) {
					this.clientList.back();
				}

				this.lastMessageTimeStamp = '';
				this.relink = 0;
				this.messageBoxs = [];
				this.$content.empty();

				this.$chatroomStatus.html('您已进入沟通面板');
			}, this);


			//连接被关闭
			this.socket.onclose(function (event) {
				console.log('==========================close===============');
				this.$chatroomStatus.html('连接已关闭');
			});

			//错误
			this.socket.onerror(_.bind(function (event) {
				console.log('==========================error===============');
				this.$chatroomStatus.html('您已断开连接');
			}, this));
		},
		login: function () {
			$.showLoading('正在连接');

			businessDelegate.loginWebSocket({
				charRoomUuid:this.charRoomUuid   //聊天室uuid
			}, _.bind(function (res) {
				// console.log(res);
				this.initWebSockt(res.obj.url);
			}, this), _.bind(function (err) {
				//获取连接失败
				$.hideLoading();

				//开启重连面板
				$.confirm('是否重新连接', '获取聊天室连接失败', _.bind(function () {
					this.login();
				}, this), function () {
					Backbone.history.navigate('contact-list', { trigger: true });
				});
			}, this));
		},
		backbutton: function () {
			if (this.$('#userCard').css('display') == 'block') {
				$.closePopup();
				return;
			}

			if (this.isRecording) {
				this.endRecordVoice();
				return;
			}

			if (this.socket) {
				this.socket.close();
			}

			if (window.cordova) {
				if (this.navite_media) {
					this.navite_media.stop();
					this.navite_media.release();
					this.navite_media = null;
				}
			}

            Backbone.history.navigate('chatroom-list', { trigger: true });
		},
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false,
                title: options.title
			});
			this.menu = new AppMenu({
				index: 0
			});
			this.$el.empty().append(this.header.$el).append(template).append(this.menu.$el);
			this.header.setRightBtn('<i class="iconfont icon-duoren"></i>');

            // this.$el.empty().append(this.header.$el).append(template);

			this.socket = null;
			this.relink = 0; //重连次数

			this.isRecording = 0;	//是否正在录音
			this.input_type = 'text';	//传输类型

			this.messageBoxs = [];	//消息盒子
			this.lastMessageTimeStamp = '';

			this.messageBoxTemplate = this.$('#message-box-tpl').html();
			this.$wrapper = this.$('.chatroom-content-wrapper');
			this.$content = this.$('.chatroom-content');
			this.$chatroomStatus = this.$('.client-status');

			//播放器
			this.$audio = this.$('#playvoice');
			this.audio = this.$audio[0];
			this.playingUrl = '';
			this.navite_media = null;


			//聊天室uuid
			this.charRoomUuid = options.uuid;

			//录音绑定播放结束事件
			this.$audio.on('ended', _.bind(function () {
				this.playingUrl = '';
				this.$('.message-voice').removeClass('active').find('span').html('点击播放语音');
			}, this));

			this.limitBox = 50;
		},
		render: function () {
			this.$wrapper.height(this.$wrapper.height());
			this.login();
			return this;
		},
		destroy: function () {
			this.$audio.prop('src', '');
			this.$audio.remove();
			businessDelegate.abortApi('loginWebSocket');
		}
	});

	return View;
});


define('text!view/online_marketing/tpl/index.html',[],function () { return '<div class="common-content bg-gray" id="onlineContent">\r\n    <div class="header">\r\n        <table class="header_table table">\r\n            <tr>\r\n                <td colspan="2">\r\n                    <img src="app_img/noavatar.png">\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan="2">\r\n                    ----\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan="2">\r\n                    -----------\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td width="50%">\r\n                    <div class="info">\r\n                        <div class="bold">所属营业厅\r\n                            <div class="angle"></div>\r\n                        </div>\r\n                        <div class="list unactive">\r\n                            -----\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td width="50%">\r\n                    <div class="info">\r\n                        <div class="bold">所属部门</div>\r\n                        <p>-----</p>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    <div class="content">\r\n\r\n        <div class="content-header">\r\n            \r\n        </div>\r\n\r\n        <div class="content-nav weui-row">\r\n            <div class="weui-col-33 active" data-type="1">\r\n                <div>任务查询</div>\r\n            </div>\r\n            <div class="weui-col-33" data-type="2">\r\n                <div>常客查询</div>\r\n            </div>\r\n            <div class="weui-col-33" data-type="3">\r\n                <div>酬金查询</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="content-content">\r\n            <!--<div id="mission_content">\r\n                <div class="weui-pull-to-refresh-layer">\r\n                    <div class="pull-to-refresh-arrow"></div>\r\n                    <div class="pull-to-refresh-preloader"></div>\r\n                    <div class="down">下拉刷新</div>\r\n                    <div class="up">释放刷新</div>\r\n                    <div class="refresh">正在刷新...</div>\r\n                    <div class="done">刷新完成</div>\r\n                </div>\r\n\r\n                <div class="list-warning">\r\n                    搜索结果如下，点此查看全部\r\n                </div>\r\n\r\n                <div class="mission_wrapper">\r\n                    <div class="mission_box">\r\n                        <h3>2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务</h3>\r\n                        <p>派发时间：2016-11-29 14:24</p>\r\n                        <p>完成时限：2016-12-16 14:24</p>\r\n                        <p>客户数：3</p>\r\n                        \r\n                        <div class="text">已接受</div>\r\n                    </div>\r\n\r\n                    <div class="list-control weui-row">\r\n                        <div class="weui-col-40">\r\n                            <button class="btn btn-default btn-prev">上一页</button>\r\n                        </div>\r\n                        <div class="weui-col-20">1/20</div>\r\n                        <div class="weui-col-40">\r\n                            <button class="btn btn-default btn-next">下一页</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n            <!--<div class="mission_box">\r\n                <h3>2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务</h3>\r\n                <p>派发时间：2016-11-29 14:24</p>\r\n                <p>完成时限：2016-12-16 14:24</p>\r\n                <p>客户数：3</p>\r\n                \r\n                <div class="text">已接受</div>\r\n            </div>\r\n\r\n            <div class="mission_box">\r\n                <h3>2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务2月份湘潭市移动用户普查任务</h3>\r\n                <p>派发时间：2016-11-29 14:24</p>\r\n                <p>完成时限：2016-12-16 14:24</p>\r\n                <p>客户数：3</p>\r\n                \r\n                <div class="btn btn-accept">接受任务</div>\r\n            </div>-->\r\n\r\n            <!--<ul class="fixture_box">\r\n                <li>\r\n                    电话号码：17812341234\r\n                    <i class="iconfont icon-qianjin pull-right"></i>\r\n                </li>\r\n                <li>\r\n                    电话号码：17812341234\r\n                    <i class="iconfont icon-qianjin pull-right"></i>\r\n                </li>\r\n            </ul>-->\r\n\r\n            <!--<ul class="fixture_box pay_box">\r\n                <li>\r\n                    2016-07\r\n                    <i class="iconfont icon-qianjin pull-right"></i>\r\n                </li>\r\n                <li>\r\n                    2016-07\r\n                    <i class="iconfont icon-qianjin pull-right"></i>\r\n                </li>\r\n            </ul>-->\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<script id="userInfoTpl" type="text/template">\r\n    <table class="header_table table">\r\n        <tr>\r\n            <td colspan="2">\r\n                <% if(headImgUrl){ %>\r\n                    <img src="<%=headImgUrl%>">\r\n                <% }else{ %>\r\n                    <img src="app_img/noavatar.png">\r\n                <% } %>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan="2">\r\n                <%=name%>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan="2">\r\n                <%=mobile%>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="50%">\r\n                <div class="info">\r\n                    <div class="bold">所属营业厅\r\n                        <div class="angle"></div>\r\n                    </div>\r\n                    \r\n                    <div class="list unactive">\r\n                        <% if(title){ %>\r\n                            <%\r\n                                var arr = title.split(\',\');\r\n                            %>\r\n\r\n                            <% _.each(arr, function(v){ %>\r\n                                <p><%=v%></p>\r\n                            <% }) %>\r\n                        <% }else{ %>\r\n                            -\r\n                        <% } %>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td width="50%">\r\n                <div class="info">\r\n                    <div class="bold">所属部门</div>\r\n                    <p><%=company%></p>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</script>\r\n\r\n<script id="missionSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-mission-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-mission-search" placeholder="请输入关键字搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n\r\n<script id="fixtureSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-fixture-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-fixture-search" placeholder="请输入电话号码搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n<script id="paySelectInitTpl" type="text/template">\r\n    <select class="form-select form-control">\r\n        <option value="">无</option>\r\n    </select>\r\n</script>\r\n\r\n<script id="paySelectTpl" type="text/template">\r\n    <select class="form-select form-control">\r\n        <% _.each(list, function(v,i){ %>\r\n            <% if(i == 0){ %>\r\n                <option value="<%=v.uuid%>" selected><%=v.title%></option>\r\n            <% }else{ %>\r\n                <option value="<%=v.uuid%>"><%=v.title%></option>\r\n            <% } %>\r\n        <% }) %>\r\n    </select>\r\n</script>';});


define('text!view/online_marketing/tpl/_mission-list.html',[],function () { return '<div id="missionListContent" class="nav-wrapper">\r\n    <div class="refresh_inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="list-warning">\r\n            搜索结果如下，点此查看全部\r\n        </div>\r\n\r\n        <div class="mission_wrapper"></div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n<%\r\n    if(data.rows.length == 0){\r\n%>\r\n    <div class="warning-panel">暂无数据</div>\r\n<%   \r\n    }\r\n%>\r\n\r\n<%\r\n    _.each(data.rows,function(v,i){\r\n        var link = \'detail\';\r\n        if(v.signStatus){\r\n            link = \'list\';\r\n        }\r\n%>\r\n<div class="mission_box" data-link="<%=link%>" data-uuid="<%=v.uuid%>">\r\n    <h3><%=v.title%></h3>\r\n    <p>派发时间：<%=v.beginTime.substr(0, 16)%></p>\r\n    <p>完成时限：<%=v.endTime.substr(0, 16)%></p>\r\n    <p>客户数：<%=v.targetCont%></p>\r\n\r\n    <% if(v.signStatus){ %>\r\n        <div class="text">已签收</div>\r\n    <% }else{ %>\r\n        <div class="btn btn-accept" data-uuid="<%=v.uuid%>">签收任务</div>\r\n    <% } %>\r\n</div>\r\n<%\r\n    });\r\n%>\r\n\r\n<% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n    <div class="list-control weui-row">\r\n        <%\r\n            var prevAttr = \'\',nextAttr = \'\'; \r\n            \r\n            if(!data.hasPreviousPage){\r\n                prevAttr = \'disabled\';\r\n            } \r\n            \r\n            if(!data.hasNextPage){\r\n                nextAttr = \'disabled\';\r\n            } \r\n        %> \r\n        <div class="weui-col-40">\r\n            <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n        </div>\r\n        <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n        <div class="weui-col-40">\r\n            <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n        </div>\r\n    </div>\r\n<% } %>\r\n\r\n</script>';});


define('text!view/online_marketing/tpl/mission-detail.html',[],function () { return '<div class="common-content bg-gray">\r\n    <div class="common-content growth bg-gray" id="missionDetailContent">\r\n        <div class="weui_cells mission_detail_content app_detail_content">\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>工单名称</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>客户数</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>派发时间</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>完成时限</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>派单人</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>联系电话</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>营销服务政策</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>营销服务口径</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="mission_detail_ctrl btn-send">\r\n        导出营销服务单\r\n    </div>\r\n</div>\r\n\r\n<script type="text/template" id="missionDetailTpl">\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>工单名称</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=title%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>客户数</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=targetCont%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>派发时间</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=beginTime.substr(0, 16)%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>完成时限</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=endTime.substr(0, 16)%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>派单人</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=distributeName%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>联系电话</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=distributeMobile%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>营销服务政策</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=serviceDetail%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>营销服务口径</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=serviceCaliber%>\r\n        </div>\r\n    </div>\r\n</script>';});

/**
 * 任务详情
 */

define('view/online_marketing/mission-detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/mission-detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/online_marketing/tpl/mission-detail.html');
    var AppHeader = require('view/app-header');
    var SlidePage = require('view/slide-page');

    var View = SlidePage.extend({
        events: {
            'tap .btn-send': 'send'
        },
        send: function () {
            $.showLoading('正在获取导出文件', function () {
                $('.weui_toast').css({
                    'width': '10em',
                    'margin-left': '-5em'
                });
            });

            businessDelegate.sendMissionTargetList({
                uuid: this.options.uuid
            }, _.bind(function (data) {
                $.hideLoading();
                $.alert('文件已发送至您的邮箱');
            }, this), _.bind(function (err) {
                $.hideLoading();
                $.jtoast(err);
            }, this));
        },
        getDetail: function () {
            $.showLoading();
            businessDelegate.getMissionDetail({
                uuid: this.options.uuid
            }, _.bind(function (data) {
                $.hideLoading();
                this.data = data.obj;

                var tpl = _.template(this.template)(data.obj);
                this.$content.html(tpl);
            }, this), _.bind(function (err) {
                this.$wrapper.html(this.errorHTML);
                $.jtoast(err);
                $.hideLoading();
            }, this));
        },
        initialize: function (options) {
            this.options = options;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '任务详情'
            });

            this.$el.empty().append(this.header.$el).append(template);

            this.$wrapper = this.$('#missionDetailContent');
            this.$content = this.$('.mission_detail_content');
            this.template = this.$('#missionDetailTpl').html();
            this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

            if (this.options.sign) {
                this.$('.mission_detail_ctrl').show();
                this.$('#missionDetailContent').addClass('with-ctrl')
            }

            this.getDetail();
        },
        render: function () {
            return this;
        }
    });

    return View;
});


define('text!view/online_marketing/tpl/mission-service.html',[],function () { return '<div class="common-content bg-gray overhidden" id="missionServiceContent">\r\n    <div class="header">\r\n        <div class="app_search clearfix">\r\n            <div class="pull-right">\r\n                <div class="btn btn-primary btn-search">查询</div>\r\n            </div>\r\n            <div class="overhidden">\r\n                <i class="iconfont icon-sousuo"></i>\r\n                <input type="text" class="form-control input-search" placeholder="请输入电话号码搜索">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="wrapper">\r\n        <div class="content">\r\n            <div class="weui-pull-to-refresh-layer">\r\n                <div class="pull-to-refresh-arrow"></div>\r\n                <div class="pull-to-refresh-preloader"></div>\r\n                <div class="down">下拉刷新</div>\r\n                <div class="up">释放刷新</div>\r\n                <div class="refresh">正在刷新...</div>\r\n                <div class="done">刷新完成</div>\r\n            </div>\r\n            <div class="list-warning">\r\n                搜索结果如下，点此查看全部\r\n            </div>\r\n            <div class="inner">\r\n                <!--<div class="misson_service_box">\r\n                    <h3>当前序号1</h3>\r\n                    <p>客户手机号：13811112222</p>\r\n                    <p>状态：已反馈</p>\r\n                    <i class="iconfont icon-qianjin"></i>\r\n                </div>-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n            var id = (data.pageNum - 1) * data.pageSize + i + 1;\r\n    %>\r\n        <div class="misson_service_box" data-uuid="<%=v.uuid%>">\r\n            <h3>当前序号 <%=id%></h3>\r\n            <p>客户手机号：<%=v.mobile%></p>\r\n            <% if(v.userResult > 0){ %>\r\n                <p>状态：已反馈</p>\r\n            <% }else{ %>\r\n                <p>状态：未反馈</p>\r\n            <% } %>\r\n            <i class="iconfont icon-qianjin"></i>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>';});


define('text!view/online_marketing/tpl/mission-reply.html',[],function () { return '<div class="common-content bg-gray" id="missionReplyContent">\r\n    \r\n</div>\r\n\r\n<script id="detailTpl" type="text/template">\r\n    <div class="app_detail_title">\r\n        个人信息\r\n    </div>\r\n    <div class="app_detail_content weui_cells mission_reply_content">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>任务状态</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <% if(userResult){ %>\r\n                    已反馈\r\n                <% }else{ %>\r\n                    未反馈\r\n                <% } %>\r\n            </div>\r\n        </div>\r\n        <% if(jobMobile){ %>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>任务回填人</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=jobUserName%> <%=jobMobile%>\r\n            </div>\r\n        </div>\r\n        <% } %>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>客户号码</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=mobile%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>客户属性</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=userAttr%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>在网时长</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=onLineTime%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>归属网点</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=areas%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>当前状态</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=userStatus%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>主套餐</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=mainPlan%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>流量套餐</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=flowPlan%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>月均ARPU值</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=currentArpu%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>月均MOU</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=currentMou%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>月均流量</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=flowAvg%>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <% \r\n        if((backfillTask && !userResult) || (backfillTask && userResult && jobMobile == user.mobile)){\r\n            var check1 = \'checked\';\r\n            var check2 = \'\';\r\n            var text = \'\';\r\n\r\n            if(jobMobile){\r\n                if(userResult == 2){\r\n                    check1 = \'\';\r\n                    check2 = \'checked\';\r\n                }\r\n\r\n                if(userFeedback){\r\n                    text = userFeedback;\r\n                }\r\n            }\r\n    %>\r\n    <div class="app_detail_title mission_reply_form_title">\r\n        任务回填\r\n    </div>\r\n    <div class="app_detail_content weui_cells weui_cells_form mission_reply_form">\r\n        <div class="weui_cell clearfix">\r\n            <label class="pull-left">\r\n                <div class="pull-left input-simple">\r\n                    <input type="radio" class="blue-chk small" name="input-simple" value="1" <%=check1%>> \r\n                </div>\r\n                <div class="pull-left input-text">同意</div>\r\n            </label>\r\n            <label class="pull-left"> \r\n                <div class="pull-left input-simple">\r\n                    <input type="radio" class="blue-chk small" name="input-simple" value="2" <%=check2%>> \r\n                </div>\r\n                <div class="pull-left input-text">不同意</div>\r\n            </label>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <textarea class="weui_textarea input-desc" placeholder="请输入相关说明" rows="5"><%=text%></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="app_detail_ctrl">\r\n        <div class="btn btn-primary btn-block btn-lg btn-submit">提交</div>\r\n    </div>\r\n    <% } %>\r\n</script>';});

/**
 * 任务反馈
 */

define('view/online_marketing/mission-reply',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/mission-reply.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/mission-reply.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
			'tap .btn-submit': 'submit'
		},
		submit: function(){
			var s = this.$('input[name=input-simple]:checked').val();
			var t = $.trim(this.$('.input-desc').val());
			
			$.showLoading();
			businessDelegate.replyMissionTarget({
				uuid: this.options.uuid,
				userResult: s,
				userFeedback: t
			}, _.bind(function (data) {
				$.hideLoading();
				$.toast('提交成功');

				setTimeout(_.bind(function(){
					this.trigger('render');
					this.back();
				},this), 1000);
			}, this), _.bind(function (err) {
				$.hideLoading();
			}, this));
		},
		getDetail: function(){
			$.showLoading();
			businessDelegate.getMissionTargetDetail({
				uuid: this.options.uuid
			}, _.bind(function (data) {
				var tpl = _.template(this.detailTemplate)(data.obj);
				this.$content.html(tpl);
				this.$content.height(this.$content.height());
				$.hideLoading();
			}, this), _.bind(function (err) {
				this.$content.html(this.errorHTML);
				$.jtoast(err);
				$.hideLoading();
			}, this));
		},
		initialize: function (options) {
            this.options = options;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '任务反馈'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.detailTemplate = this.$('#detailTpl').html();
			this.$content = this.$('#missionReplyContent');
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.getDetail();
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销服务目标列表
 */

define('view/online_marketing/mission-service',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/mission-service.html','view/app-header','view/online_marketing/mission-detail','view/online_marketing/mission-reply','view/slide-page'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/online_marketing/tpl/mission-service.html');
    var AppHeader = require('view/app-header');
    var MissionDetail = require('view/online_marketing/mission-detail');
    var MissionReply = require('view/online_marketing/mission-reply');
    var SlidePage = require('view/slide-page');

    var View = SlidePage.extend({
        events: {
            'tap #missionServiceContent .btn-search': 'searchByKeyword',
            'tap #missionServiceContent .list-warning': 'initList',
            'tap #missionServiceContent .btn-prev,.btn-next': 'viewPage',

            'tap .right-button .text': 'showDetail',
            'tap .misson_service_box': 'showReply'
        },
        //显示任务详情页
        showDetail: function () {
            var view = new MissionDetail({
                sign: true,
                uuid: this.options.uuid
            });
            view.show();
        },
        //显示目标详情页
        showReply: function (e) {
            var uuid = $(e.currentTarget).data('uuid');

            var view = new MissionReply({
                uuid: uuid
            });
            view.show();

            view.on('render', _.bind(function () {
                this.getList(this.current_page, $.noop);
            }, this));
        },
        searchByKeyword: function () {
            if (!this.data) {
                return;
            }

            this.search_keyword = '';
            var keyword = $.trim(this.$input.val());
            if (!keyword) {
                return;
            }

            this.search_keyword = keyword;

            this.$warning.show();
            this.getList(1, $.noop);
        },
        viewPage: function (e) {
            var page = $(e.currentTarget).data('page');
            this.getList(page, $.noop);
        },
        getList: function (page, callback) {
            this.current_page = page;

            if (!this.isPullRefresh) {
                this.$listContent.empty();
                $.showLoading();
            } else {
                this.isPullRefresh = 0;
            }

            businessDelegate.getMissionTargetList({
                page: this.current_page,
                rows: this.rows,
                mobile: this.search_keyword,
                jobUuid: this.options.uuid
            }, _.bind(function (data) {
                this.data = data.obj;

                var tpl = _.template(this.listTemplate)({ data: data.obj });
                this.$listContent.html(tpl);

                this.$listWrapper.scrollTop(0);
                if (!this.isPullRefresh) {
                    $.hideLoading();
                }

                callback();
            }, this), _.bind(function (err) {
                this.$listContent.html(this.errorHTML);
                $.jtoast(err);

                if (!this.isPullRefresh) {
                    $.hideLoading();
                }

                callback();
            }, this));
        },
        initList: function () {
            this.$warning.hide();
            this.$input.val('');
            this.search_keyword = '';	//搜索关键字

            this.getList(1, $.noop);
        },
        initialize: function (options) {
            this.options = options;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '营销服务目标'
            });

            this.header.setRightBtn('<div class="text">任务详情</div>');
            this.$el.empty().append(this.header.$el).append(template);

            this.listTemplate = this.$('#listTpl').html();
            this.$listWrapper = this.$('#missionServiceContent .content');
            this.$listContent = this.$('#missionServiceContent .content > .inner');
            this.$input = this.$('.input-search');
            this.$warning = this.$('.list-warning');

            this.current_page = 1;	//当前页
            this.rows = 10; //每页显示数目

            this.data = null;	//当前内容
            this.search_keyword = ''; //搜索关键字

            this.isPullRefresh = 1;
            this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

            //下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
        },
        render: function () {
            return this;
        }
    });

    return View;
});

/**
 *  营销首页-任务列表
 */

define('view/online_marketing/mission-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_mission-list.html','view/online_marketing/mission-detail','view/online_marketing/mission-service'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/online_marketing/tpl/_mission-list.html');

    var MissionDetail = require('view/online_marketing/mission-detail');
    var MissionService = require('view/online_marketing/mission-service');

    var View = Backbone.View.extend({
        el: '.content-content',
        events: {
            'tap #missionListContent .list-warning': 'initList',
            'tap #missionListContent .btn-prev,.btn-next': 'viewPage',
            'tap #missionListContent .btn-accept': 'signMission',
            'tap #missionListContent .mission_box': 'viewDetail'
        },
        viewDetail: function (e) {
            var $e = $(e.currentTarget);
            var link = $e.data('link');
            var uuid = $e.data('uuid');

            if(link == 'detail'){
                var view = new MissionDetail({
                    sign: false,
                    uuid: uuid
                });
                view.show();
            }else if(link == 'list'){
                var view = new MissionService({
                    uuid: uuid
                });
                view.show();
            }
        },
		/**
         * 签收
         */
        signMission: function (e) {
            var $e = $(e.currentTarget);
            var uuid = $e.data('uuid');

            $.showLoading();
            businessDelegate.signMission({
                uuid: uuid
            }, _.bind(function (data) {
                $.hideLoading();
                $.toast('签收成功');

                this.getList(this.current_page, $.noop);
            }, this), _.bind(function (err) {
                $.jtoast(err);
                $.hideLoading();
            }, this));

            return false;
        },
        /**
         * 列表操作
         */
        searchByKeyword: function ($input) {
            this.$input = $input;

            if (!this.data) {
                return;
            }

            this.search_keyword = '';
            var keyword = $.trim(this.$input.val());
            if (!keyword) {
                return;
            }

            this.search_keyword = keyword;

            this.$warning.show();
            this.getList(1, $.noop);
        },
        initList: function () {
            this.$warning.hide();
            this.$input.val('');
            this.search_keyword = '';	//搜索关键字

            this.getList(1, $.noop);
        },
        viewPage: function (e) {
            var page = $(e.currentTarget).data('page');
            this.getList(page, $.noop);
        },
        getList: function (page, callback) {
            this.current_page = page;

            if (!this.isPullRefresh) {
                this.$listContent.empty();
                $.showLoading();
            } else {
                this.isPullRefresh = 0;
            }

            businessDelegate.getMissionList({
                page: this.current_page,
                rows: this.rows,
                title: this.search_keyword
            }, _.bind(function (data) {
                this.data = data.obj;

                var tpl = _.template(this.listTemplate)({ data: data.obj });
                this.$listContent.html(tpl);

                this.$listWrapper.scrollTop(0);
                if (!this.isPullRefresh) {
                    $.hideLoading();
                }

                callback();
            }, this), _.bind(function (err) {
                this.$listContent.html(this.errorHTML);
                $.jtoast(err);
                if (!this.isPullRefresh) {
                    $.hideLoading();
                }

                callback();
            }, this));
        },
        initialize: function () {
            if (!window.user.taskSing) {
                this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
            }

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#missionListContent > div');
            this.$listContent = this.$('.mission_wrapper');
            this.listTemplate = this.$('#listTpl').html();
            this.$warning = this.$('.list-warning');
            this.$input;

            this.current_page = 1;	//当前页
            this.rows = 10; //每页显示数目

            this.data = null;	//当前内容
            this.search_keyword = ''; //搜索关键字

            this.isPullRefresh = 0;
            this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

            //下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
        },
        render: function () {
            return this;
        }
    });

    return View;
});


define('text!view/online_marketing/tpl/_fixture-list.html',[],function () { return '<div id="fixtureListContent" class="nav-wrapper">\r\n    <div class="refresh_inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="list-warning">\r\n            搜索结果如下，点此查看全部\r\n        </div>\r\n\r\n        <div class="fixture_wrapper"></div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n     \r\n    <%  }else{  %>\r\n        <ul class="fixture_box simple_box">\r\n        <%\r\n            _.each(data.rows,function(v,i){\r\n        %>\r\n        \r\n            <li data-uuid="<%=v.uuid%>">\r\n                电话号码：<%=v.mobile%>\r\n                <i class="iconfont icon-qianjin pull-right"></i>\r\n            </li>\r\n        <%\r\n            });\r\n        %>\r\n        </ul>\r\n\r\n        <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n            <div class="list-control weui-row">\r\n                <%\r\n                    var prevAttr = \'\',nextAttr = \'\'; \r\n                    \r\n                    if(!data.hasPreviousPage){\r\n                        prevAttr = \'disabled\';\r\n                    } \r\n                    \r\n                    if(!data.hasNextPage){\r\n                        nextAttr = \'disabled\';\r\n                    } \r\n                %> \r\n                <div class="weui-col-40">\r\n                    <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n                </div>\r\n                <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n                <div class="weui-col-40">\r\n                    <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n                </div>\r\n            </div>\r\n        <% } %>\r\n    <%  }  %>\r\n</script>';});


define('text!view/online_marketing/tpl/fixture-detail.html',[],function () { return '<div class="common-content bg-gray">\r\n    \r\n</div>\r\n\r\n<script id="detailTpl" type="text/template">\r\n    <div class="app_detail_content weui_cells">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>客户号码</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=mobile%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>客户属性</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=userAttr%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>在网时长</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=onLineTime%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>归属网点</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=areas%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>当前状态</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=userStatus%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>主套餐</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=mainPlan%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>流量套餐</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=flowPlan%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>月均ARPU值</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=currentArpu%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>月均MOU</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=currentMou%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>月均流量</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=flowAvg%>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</script>';});

/**
 * 常客详情
 */

define('view/online_marketing/fixture-detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/fixture-detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/fixture-detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
            
		},
		getDetail: function(){
			$.showLoading();
			businessDelegate.getMarketingFixtureDetail({
				uuid: this.options.uuid
			}, _.bind(function (data) {
				var tpl = _.template(this.detailTemplate)(data.obj);
				this.$content.html(tpl);
				$.hideLoading();
			}, this), _.bind(function (err) {
				this.$content.html(this.errorHTML);
				$.jtoast(err);
				$.hideLoading();
			}, this));
		},
		initialize: function (options) {
            this.options = options;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '常客详情'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.detailTemplate = this.$('#detailTpl').html();
			this.$content = this.$('.common-content');
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.getDetail();
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 常客查询
 */

define('view/online_marketing/fixture-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_fixture-list.html','view/online_marketing/fixture-detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/_fixture-list.html');
    var Detail = require('view/online_marketing/fixture-detail');

	var View = Backbone.View.extend({
		el: '.content-content',
        events: {
            'tap #fixtureListContent .list-warning': 'initList',
            'tap #fixtureListContent .btn-prev,.btn-next': 'viewPage',
            'tap .fixture_box > li': 'viewDetail'
		},
        viewDetail: function(e){
            var uuid = $(e.currentTarget).data('uuid');
            var view = new Detail({
                uuid: uuid
            });
            view.show();
        },
		searchByKeyword: function ($input) {
            this.$input = $input;

			if(!this.data){
				return;
			}

			this.search_keyword = '';
			var keyword = $.trim(this.$input.val());
			if (!keyword) {
				return;
			}

			this.search_keyword = keyword;

			this.$warning.show();
			this.getList(1, $.noop);
		},
		initList: function () {
			this.$warning.hide();
			this.$input.val('');
			this.search_keyword = '';	//搜索关键字

			this.getList(1, $.noop);
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
		getList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getMarketingFixtureList({
				page: this.current_page,
				rows: this.rows,
				mobile: this.search_keyword
			}, _.bind(function (data) {
				this.data = data.obj;

				var tpl = _.template(this.listTemplate)({ data: data.obj });
				this.$listContent.html(tpl);

				this.$listWrapper.scrollTop(0);
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this), _.bind(function (err) {
				this.$listContent.html(this.errorHTML);
				$.jtoast(err);
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this));
		},
		initialize: function () {
			if(!window.user.regularVisitors){
				this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
			}

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#fixtureListContent > div');
			this.$listContent = this.$('.fixture_wrapper');
			this.listTemplate = this.$('#listTpl').html();
			this.$warning = this.$('.list-warning');
			this.$input;

			this.current_page = 1;	//当前页
			this.rows = 10; //每页显示数目

			this.data = null;	//当前内容
			this.search_keyword = ''; //搜索关键字

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/online_marketing/tpl/_pay-list.html',[],function () { return '<div id="payListContent" class="nav-wrapper">\r\n    <div class="refresh_inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="list-warning">\r\n            搜索结果如下，点此查看全部\r\n        </div>\r\n\r\n        <div class="pay_wrapper"></div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n    <%\r\n        if(list.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%\r\n        }else{\r\n    %>\r\n        <ul class="pay_box simple_box">\r\n            <% _.each(list, function(v){ %>\r\n                <li data-uuid="<%=v.uuid%>">\r\n                    <%=v.dataMonth%>\r\n                    <i class="iconfont icon-qianjin pull-right"></i>\r\n                </li>\r\n            <% }) %>\r\n        </ul>\r\n    <% } %>\r\n</script>';});


define('text!view/online_marketing/tpl/pay-detail.html',[],function () { return '<div class="common-content bg-gray" id="payDetailContent">\r\n</div>\r\n\r\n<script id="detailTpl" type="text/template">\r\n    <div class="weui_cells app_detail_content">\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>渠道</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=channel.title%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>月份</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=remuneration.dataMonth%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>酬金总额</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=remuneration.emunerationSum%>\r\n            </div>\r\n        </div>\r\n        <div class="weui_cell">\r\n            <div class="weui_cell_bd weui_cell_primary">\r\n                <p>完成任务数</p>\r\n            </div>\r\n            <div class="weui_cell_ft">\r\n                <%=remuneration.josbs%>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <table class="table pay_detail_table">\r\n        <tr>\r\n            <td rowspan="4">新入网酬金</td>\r\n            <td>新签约卡套餐</td>\r\n            <td><%=remuneration.newCardDisc%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>非存量<br>客户回归</td>\r\n            <td><%=remuneration.nonStockReturn%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>老带新</td>\r\n            <td><%=remuneration.oldWithNew%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>加存服务</td>\r\n            <td><%=remuneration.depositService%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>4G客户转化<br>服务酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.g4CustServiceFee%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>4G终端销售<br>酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.g4TermSaleRemuneration%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>主推机型酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.mainPushModels%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>VOLTE酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.volteRemuneration%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>4G套餐酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.new4GDisc%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>4G换卡酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.g4RepCardFee%></td>\r\n        </tr>\r\n        <tr>\r\n            <td rowspan="6">宽带酬金</td>\r\n            <td>有线宽带拓展</td>\r\n            <td><%=remuneration.wiredBroadband%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>有线宽带续费</td>\r\n            <td><%=remuneration.cableBroadband%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>融合产品推广</td>\r\n            <td><%=remuneration.fusionProduct%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>融合宽带</td>\r\n            <td><%=remuneration.fusionBroadband%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>政企宽带服务</td>\r\n            <td><%=remuneration.governmentEntBroadband%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>保底消费<br>宽带服务</td>\r\n            <td><%=remuneration.endOfConsumerBroadband%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>家庭网酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.homeNetFee%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>家园网酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.homeNetReturn%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>亲情包酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.familyPackageFee%></td>\r\n        </tr>\r\n        <tr>\r\n            <td rowspan="4">代收话费酬金</td>\r\n            <td>代收话费</td>\r\n            <td><%=remuneration.collectCalls%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>有价卡</td>\r\n            <td><%=remuneration.priceCard%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>空中充值</td>\r\n            <td><%=remuneration.airRecharge%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>新一站通</td>\r\n            <td><%=remuneration.newStationPass%></td>\r\n        </tr>\r\n        <tr>\r\n            <td rowspan="2">应用推广酬金</td>\r\n            <td>手机营业厅</td>\r\n            <td><%=remuneration.mobileBuss%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>扫码</td>\r\n            <td><%=remuneration.scanCode%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>实名补登酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.realNameCompensation%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>存量维稳酬金</td>\r\n            <td>-</td>\r\n            <td><%=remuneration.stockFee%></td>\r\n        </tr>\r\n        <tr>\r\n            <td rowspan="5">数据业务酬金</td>\r\n            <td>数据业务服务</td>\r\n            <td><%=remuneration.dataService%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>数据业务平台</td>\r\n            <td><%=remuneration.dataPlatform%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>数据业务优惠</td>\r\n            <td><%=remuneration.dataServiceDisc%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>多终端共享</td>\r\n            <td><%=remuneration.multiTermShare%></td>\r\n        </tr>\r\n        <tr>\r\n            <td>流量</td>\r\n            <td><%=remuneration.flowFee%></td>\r\n        </tr>\r\n    </table>\r\n</script>';});

/**
 * 酬金详情
 */

define('view/online_marketing/pay-detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/pay-detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/pay-detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
            
		},
		getDetail: function(){
			$.showLoading();
			businessDelegate.getMarketingPayDetail({
				uuid: this.options.uuid
			}, _.bind(function (data) {
				var tpl = _.template(this.detailTemplate)(data.obj);
				this.$content.html(tpl);
				$.hideLoading();
			}, this), _.bind(function (err) {
				this.$content.html(this.errorHTML);
				$.jtoast(err);
				$.hideLoading();
			}, this));
		},
		initialize: function (options) {
            this.options = options;

            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '酬金详情'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.detailTemplate = this.$('#detailTpl').html();
			this.$content = this.$('.common-content');
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.getDetail();
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 常客查询
 */

define('view/online_marketing/pay-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_pay-list.html','view/online_marketing/pay-detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/_pay-list.html');
    var Detail = require('view/online_marketing/pay-detail');

	var View = Backbone.View.extend({
		el: '.content-content',
        events: {
            'tap .pay_box > li': 'viewDetail'
		},
        viewDetail: function(e){
            var uuid = $(e.currentTarget).data('uuid');
            var view = new Detail({
                uuid: uuid
            });
            view.show();
        },
		getMonth: function (callback) {
			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getMarketingPayMonthByChannel({
				uuid: this.options.uuid
			}, _.bind(function (data) {
				var tpl = _.template(this.listTemplate)({ list: data.obj });
				this.$listContent.html(tpl);
				this.$listWrapper.scrollTop(0);

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this), _.bind(function (err) {
				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this));
		},
		initialize: function (options) {
            this.options = options;

			if(!window.user.queryFee){
				this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
			}

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#payListContent > div');
			this.$listContent = this.$('.pay_wrapper');
			this.listTemplate = this.$('#listTpl').html();

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getMonth(_.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getMonth($.noop);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销首页
 */

define('view/online_marketing/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/index.html','text!view/online_marketing/tpl/_mission-list.html','view/app-header','view/online_marketing/mission-list','view/online_marketing/fixture-list','view/online_marketing/pay-list'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/index.html');
	var missionListTemplate = require('text!view/online_marketing/tpl/_mission-list.html');

	var AppHeader = require('view/app-header');
	var MissionList = require('view/online_marketing/mission-list');
	var FixtureList = require('view/online_marketing/fixture-list');
	var PayList = require('view/online_marketing/pay-list');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .header_table .info': 'showAllInfoList',
			'tap .content-nav > div': 'selectNav',
			'tap .btn-mission-search': 'missionSearch',
			'tap .btn-fixture-search': 'fixtureSearch',
			'change .form-select': 'renderPayList'
		},
        fixtureSearch: function () {
			var $input = this.$('.input-fixture-search');
			this.fixtureList.searchByKeyword($input);
        },
        missionSearch: function () {
			var $input = this.$('.input-mission-search');
			this.missionList.searchByKeyword($input);
        },
		selectNav: function (e) {
			var $e = $(e.currentTarget);

			if ($e.hasClass('active')) {
				return;
			}

			this.$('.content-nav > div').removeClass('active');
			$e.addClass('active');

			var type = $e.data('type');
			this.renderNav(type);
		},
		renderNav: function (type) {
			this.$('.content-content').empty();

			switch (type) {
				case 1:
					//任务查询
					this.$('.content-header').html(this.missionSearchTemplate);
					//渲染任务查询
					if (!this.missionList) {
						this.missionList = new MissionList();
					} else {
						this.missionList.initialize();
					}
					break
				case 2:
					//常客查询
					this.$('.content-header').html(this.fixtureSearchTemplate);
					//渲染常客查询
					if (!this.fixtureList) {
						this.fixtureList = new FixtureList();
					} else {
						this.fixtureList.initialize();
					}
					break
				case 3:
					//酬金查询
					this.$('.content-header').html(this.paySelectInitTemplate);

					//获取营业厅
					this.getPaySelect();
					break
			}
		},
		getPaySelect: function () {
			$.showLoading();
			businessDelegate.getMarketingChannel(_.bind(function (data) {
				$.hideLoading();

				if (data.obj.length == 0) {
					return;
				}

				var tpl = _.template(this.paySelectTemplate)({ list: data.obj });
				this.$('.content-header').html(tpl);

				this.renderPayList();
			}, this), _.bind(function (err) {
				$.jtoast(err);
				$.hideLoading();

				this.renderPayList();
			}, this));
		},
		renderPayList: function () {
			var uuid = $('.form-select').val();

			if (!this.PayList) {
				this.PayList = new PayList({
					uuid: uuid
				});
			} else {
				this.PayList.initialize({
					uuid: uuid
				});
			}

		},
		renderUserInfoView: function () {
			$.showLoading();
			businessDelegate.getMarketingPermission(_.bind(function (data) {
				$.hideLoading();
				var tpl = _.template(this.userInfoTemplate)(data.obj);
				this.$('.header').html(tpl);

				window.user.regularVisitors = data.obj.regularVisitors;	//获取常客查询权限
				window.user.taskSing = data.obj.taskSing;	//获取任务查询权限
				window.user.backfillTask = data.obj.backfillTask;	//获取任务回填权限
				window.user.queryFee = data.obj.queryFee;	//获取酬金查询权限

				this.renderNav(1);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);

				this.renderNav(1);
			}, this));
		},
		showAllInfoList: function (e) {
			var $e = $(e.currentTarget);
			if ($e.find('.list').hasClass('unactive')) {
				$e.find('.list').removeClass('unactive').addClass('active');
			} else {
				$e.find('.list').removeClass('active').addClass('unactive');
			}
		},
		backbutton: function () {
            Backbone.history.navigate(this.history, { trigger: true });
		},
		initialize: function (options) {
			this.history = options.history;
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '在线营销'
            });

            this.$el.empty().append(this.header.$el).append(template);
			this.userInfoTemplate = this.$('#userInfoTpl').html();
			this.missionSearchTemplate = this.$('#missionSearchTpl').html();
			this.fixtureSearchTemplate = this.$('#fixtureSearchTpl').html();
			this.paySelectInitTemplate = this.$('#paySelectInitTpl').html();
			this.paySelectTemplate = this.$('#paySelectTpl').html();

			//渲染用户信息
			this.renderUserInfoView();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/news/tpl/index.html',[],function () { return '<div class="common-content overhidden bg-gray" id="newsList">\r\n    <div class="refresh_inner pd10">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="news-day-box-wrapper">\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="news-tpl" type="text/template">\r\n    <%\r\n        if(data.rows.length == 0){\r\n    %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <%   \r\n        }\r\n    %>\r\n\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n            var date = v[0].queryDate.substr(5,5);\r\n    %>\r\n        <div class="news-day-box">\r\n            <div class="date">\r\n                <span><%=date%></span>\r\n            </div>\r\n            <div class="news-content">\r\n                <%\r\n                    var first = v[0];\r\n                %>\r\n                <div class="news-box clearfix top" data-uuid="<%=first.uuid%>">\r\n                    <div class="top-image">\r\n                        <% if(first.newsImg){ %>\r\n                            <img src="<%=first.newsImg%>">\r\n                        <% }else{ %>\r\n                            <img src="app_img/none.jpg">\r\n                        <% } %>\r\n                    </div>\r\n                    <div class="overhidden">\r\n                        <%=first.newsTitle%>\r\n                    </div>\r\n                </div>\r\n                <%\r\n                    for(j = 1; j < v.length; j++){\r\n                        var obj = v[j];\r\n\r\n                        var img = \'app_img/none.jpg\';\r\n                        if(obj.newsImg){\r\n                            img = obj.newsImg;\r\n                        }\r\n\r\n                        var date = obj.queryDate.substr(5,5);\r\n                %>\r\n                    <div class="news-box clearfix"  data-uuid="<%=obj.uuid%>">\r\n                        <div class="pull-left" style="background: url(<%=img%>) no-repeat center center/cover"></div>\r\n                        <div class="overhidden">\r\n                            <div class="clearfix info">\r\n                                <div class="pull-right"><%=date%></div> \r\n                                <div class="overhidden"><%=obj.newsTitle%></div>  \r\n                            </div>\r\n                            <p><%=obj.newsDesc%></p>\r\n                        </div>\r\n                    </div>\r\n                <%\r\n                    };\r\n                %>\r\n            </div>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>\r\n\r\n<script id="notice-tpl" type="text/template">\r\n    <div class="news-day-box">\r\n        <div class="date">\r\n            <span>2月9日</span>\r\n        </div>\r\n\r\n        <div class="notice-content">\r\n            <div class="notice-box">\r\n                <table class="table">\r\n                    <tr>\r\n                        <th colspan="2">17年新春公告</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width="70">通知内容：</td>\r\n                        <td><div>圣诞节发送到洛克菲勒可视对讲付款水电费说领导开发机生了肯定减肥了上岛咖啡</div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>发&nbsp;&nbsp;布&nbsp;&nbsp;人：</td>\r\n                        <td><div>湘潭市移动办公处</div></td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n            \r\n            <div class="notice-box">\r\n                <table class="table">\r\n                    <tr>\r\n                        <th colspan="2">17年新春公告</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width="70">通知内容：</td>\r\n                        <td><div>圣诞节发送到洛克菲勒可视对讲付款水电费说领导开发机生了肯定减肥了上岛咖啡</div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>发&nbsp;&nbsp;布&nbsp;&nbsp;人：</td>\r\n                        <td><div>湘潭市移动办公处</div></td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</script>';});


define('text!view/news/tpl/detail.html',[],function () { return '<div class="common-content bg-gray" id="newsDetail">\r\n    <div class="inner bottom-pd20">\r\n        <div class="pd10 bg-white news-detail-content-wrapper">\r\n            <div class="news-detail-header">\r\n                <h3>-----</h3>\r\n                <p>作者：-- &nbsp;&nbsp;更新时间：0000-00-00</p>\r\n            </div>\r\n\r\n            <div class="news-detail-artical">\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class="news-detail-comment-sum">\r\n            评论数（<span>0</span>）\r\n        </div>\r\n\r\n        <div class="news-detail-reply bg-white">\r\n            <div class="warning-panel">暂无评论</div>\r\n            <!--<div class="detail-reply-box">\r\n                <div class="detail-reply-topic">\r\n                    <div class="reply-box">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="ctrl clearfix">\r\n                                <div class="pull-left">\r\n                                    <span class="name">测试姓名</span>&nbsp;\r\n                                    <span class="date">2016-02-02</span>\r\n                                </div>\r\n                                <div class="pull-right reply-reply">回复</div>\r\n                            </div>\r\n                            <p>回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="detail-reply-sub">\r\n                    <div class="reply-box">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="ctrl clearfix">\r\n                                <div class="pull-left">\r\n                                    <span class="name">测试姓名</span>&nbsp;\r\n                                    <span class="date">2016-02-02</span>\r\n                                </div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class="reply-box">\r\n                        <div class="pull-left">\r\n                            <img src="app_img/noavatar.png" alt="">\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="ctrl clearfix">\r\n                                <div class="pull-left">\r\n                                    <span class="name">测试姓名</span>&nbsp;\r\n                                    <span class="date">2016-02-02</span>\r\n                                </div>\r\n                            </div>\r\n                            <p>回复内容回复内容</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n\r\n    <div class="detail-control clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-block btn-reply">发送</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <input type="text" class="form-control input-comment" placeholder="发表一下你的点评吧~">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<script id="news-detail-content-tpl" type="text/template">\r\n    <div class="news-detail-header">\r\n        <h3><%=data.newsTitle%></h3>\r\n        <p>作者：<%=data.newsAuthor%> &nbsp;&nbsp;更新时间：<%=data.queryDate%></p>\r\n    </div>\r\n\r\n    <div class="news-detail-artical">\r\n        <%=$.formatText(data.newsContent)%>\r\n    </div>\r\n</script>\r\n\r\n<script id="news-detail-comment-tpl" type="text/template">\r\n    <% if(!data.rows.length){ %>\r\n        <div class="warning-panel">暂无评论</div>\r\n    <% }else{ %>\r\n        <%\r\n            _.each(data.rows,function(v,i){\r\n        %>\r\n            <div class="detail-reply-box">\r\n                <div class="detail-reply-topic">\r\n                    <div class="reply-box">\r\n                        <div class="pull-left">\r\n                            <% if(v.headImgUrl){ %>\r\n                                <img src="<%=v.headImgUrl%>">\r\n                            <% }else{ %>\r\n                                <img src="app_img/noavatar.png">\r\n                            <% } %>\r\n                        </div>\r\n                        <div class="overhidden">\r\n                            <div class="ctrl clearfix">\r\n                                <div class="pull-left">\r\n                                    <span class="name"><%=v.name%></span>&nbsp;\r\n                                    <span class="date"><%=v.createTime%></span>\r\n                                </div>\r\n                                <div class="pull-right reply-reply" data-uuid="<%=v.uuid%>" data-name="<%=v.name%>">回复</div>\r\n                            </div>\r\n                            <p><%=v.content%></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <% if(v.twoList && v.twoList.length > 0){ %>\r\n                    <div class="detail-reply-sub">\r\n                        <% _.each(v.twoList, function(o){ %>\r\n                            <div class="reply-box">\r\n                                <div class="pull-left">\r\n                                    <% if(o.headImgUrl){ %>\r\n                                        <img src="<%=o.headImgUrl%>">\r\n                                    <% }else{ %>\r\n                                        <img src="app_img/noavatar.png">\r\n                                    <% } %>\r\n                                </div>\r\n                                <div class="overhidden">\r\n                                    <div class="ctrl clearfix">\r\n                                        <div class="pull-left">\r\n                                            <span class="name"><%=o.name%></span>&nbsp;\r\n                                            <span class="date"><%=o.createTime%></span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p><%=o.content%></p>\r\n                                </div>\r\n                            </div>\r\n                       <% }); %>\r\n\r\n                    </div>\r\n                <% } %>\r\n            </div>\r\n        <%\r\n            });\r\n        %>\r\n        <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n            <div class="list-control weui-row">\r\n                <%\r\n                    var prevAttr = \'\',nextAttr = \'\'; \r\n                    \r\n                    if(!data.hasPreviousPage){\r\n                        prevAttr = \'disabled\';\r\n                    } \r\n                    \r\n                    if(!data.hasNextPage){\r\n                        nextAttr = \'disabled\';\r\n                    } \r\n                %> \r\n                <div class="weui-col-40">\r\n                    <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n                </div>\r\n                <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n                <div class="weui-col-40">\r\n                    <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n                </div>\r\n            </div>\r\n        <% } %>\r\n    <% } %>\r\n</script>';});

/**
*   新闻详情
**/

define('view/news/detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/news/tpl/detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/news/tpl/detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
		// el: 'body',
        events: {
			'tap .btn-reply': 'sendReply',
			'tap .btn-reply-reply': 'sendReplyReply',
			'tap .reply-reply': 'prepareReplyReply',
			'tap #newsDetail > .inner': 'prepareReply',
			'tap .btn-prev,.btn-next': 'viewPage',
		},
		prepareReply: function(){
			if(this.$('.btn-reply-reply').length){
				this.$('.btn-reply-reply').removeClass('btn-reply-reply').addClass('btn-reply');
			}else{
				return;
			}

			this.replyUUID = '';
			this.replyName = '';
			
			this.$('.input-comment').val('');
			this.$('.input-comment').attr('placeholder', '发表一下你的点评吧~');

		},
		prepareReplyReply: function(e){
			var $e = $(e.currentTarget);
			this.replyUUID = $e.data('uuid');
			this.replyName = $e.data('name');

			this.$('.input-comment').val('');
			this.$('.input-comment').attr('placeholder', '回复'+this.replyName);

			if(this.$('.btn-reply').length){
				this.$('.btn-reply').removeClass('btn-reply').addClass('btn-reply-reply');
			}

			return false;
		},
		sendReply: function(){
			var text = $.trim(this.$('.input-comment').val());
			if(!text){
				$.jtoast('请填写点评内容');
				return;
			}

			$.showLoading('正在发表');
			businessDelegate.addNewsComment({
				uuid: this.uuid,
				content: text
			}, _.bind(function (data) {
				$.hideLoading();

				this.viewPage = true;
				this.getList(1);

				this.$('.input-comment').val('');
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		sendReplyReply: function(){
			var text = $.trim(this.$('.input-comment').val());
			if(!text){
				$.jtoast('请填写点评内容');
				return;
			}

			$.showLoading('正在发表');
			businessDelegate.addSubNewsComment({
				uuid: this.replyUUID,
				content: text
			}, _.bind(function (data) {
				$.hideLoading();

				this.viewPage = false;
				this.getList(this.current_page);

				this.prepareReply();
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
			}, this));
		},
		getDetail: function () {
			$.showLoading();
			businessDelegate.getNewsDetail({
				uuid: this.uuid
			}, _.bind(function (data) {
				$.hideLoading();

				//文章内容
				var tpl = _.template(this.contentTemplate)({ data: data.obj });
				this.$content.html(tpl);

				//评论数
				this.$('.news-detail-comment-sum > span').html(data.obj.commentsSum);

				//获取评论
				this.getList(1);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.$content.html(this.errorHTML);
			}, this));
		},
		viewPage: function(e){
			this.viewPage = true;
			var page = $(e.currentTarget).data('page');
			this.getList(page);
		},
		getList: function (page) {
			this.current_page = page;
			$.showLoading();
			businessDelegate.getNewsComments({
				uuid: this.uuid,
				page: page,
				rows: this.rows
			}, _.bind(function (data) {
				$.hideLoading();

				var tpl = _.template(this.commentTemplate)({ data: data.obj });
				this.$comment.html(tpl);
				
				if(this.viewPage){
					this.scrollToCommentTop();
				}
				
			}, this), _.bind(function (err) {
				$.hideLoading();
				this.$comment.html(this.errorHTML);
				$.jtoast(err);
			}, this));
		},
		scrollToCommentTop: function(){
			var h = this.$content.height();
			this.$wrapper.scrollTop(h);
		},
		// backbutton: function () {
		// 	Backbone.history.navigate('news-index/' + this.type, { trigger: true });
		// },
		initialize: function (options) {
			this.type = options.type;
			this.uuid = options.uuid;

			var title = '';

			switch (this.type) {
				case '1':
					title = '新闻详情';
					break;
				case '2':
					title = '公告详情';
					break;
				case '3':
					title = '任务详情';
					break;
			}

            this.header = new AppHeader({
                host: this,
                main: false,
				title: title
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.current_page = 1;	//当前页
			this.rows = 50; //每页显示数目
			this.viewPage = false; //是否在翻阅评论

			this.contentTemplate = this.$('#news-detail-content-tpl').html();
			this.commentTemplate = this.$('#news-detail-comment-tpl').html();

			this.$content = this.$('.news-detail-content-wrapper');
			this.$comment = this.$('.news-detail-reply');
			this.$wrapper = this.$('.common-content');

			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.getDetail();
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
*   新闻列表
**/

define('view/news/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/news/tpl/index.html','view/app-header','view/news/detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/news/tpl/index.html');
	var AppHeader = require('view/app-header');
	var NewsDetail = require('view/news/detail');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
            'tap .news-box': 'viewDetail'
		},
        viewDetail: function (e) {
            var uuid = $(e.currentTarget).data('uuid');
			if (!uuid) {
				return;
			}

			// Backbone.history.navigate('news-detail/'+this.type+'/'+uuid, { trigger: true });
			var newsDetail = new NewsDetail({
				type: this.type,
				uuid: uuid
			});
			newsDetail.show();
        },
		getList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getNewsList({
				page: this.current_page,
				rows: this.rows,
				newType: this.type,
				maxWidth: this._w
			}, _.bind(function (data) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				var tpl = _.template(this.newsTemplate)({ data: data.obj });
				this.$listContent.html(tpl);

				this.$wrapper.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				callback();
			}, this));
		},
		backbutton: function () {
			Backbone.history.navigate('index', { trigger: true });
		},
		initialize: function (options) {
			this.type = options.type;

			var title = '';

			switch (this.type) {
				case '1':
					title = '实时新闻';
					break;
				case '2':
					title = '公告通知';
					break;
				case '3':
					title = '任务下达';
					break;
			}

            this.header = new AppHeader({
                host: this,
                main: false,
				title: title
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.newsTemplate = this.$('#news-tpl').html();
			this.noticeTemplate = this.$('#notice-tpl').html();

			this.$listContent = this.$('.news-day-box-wrapper');
			this.$wrapper = this.$('#newsList > div');

			this.current_page = 1;	//当前页
			this.rows = 1; //每页显示数目
			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this._w = $(window).width() - 20;
		},
		render: function () {
            //下拉刷新
            this.$wrapper.pullToRefresh();
            this.$wrapper.on("pull-to-refresh", _.bind(function () {
				this.isPullRefresh = 1;
				this.getList(1, _.bind(function () {
					this.$wrapper.pullToRefreshDone();
				}, this));
			}, this));

			this.getList(1, $.noop);

			return this;
		}
	});

	return View;
});


define('text!view/contact/tpl/index.html',[],function () { return '<div class="common-content with-menu bottom-pd20 bg-gray">\r\n    <div class="contact-header">\r\n        <div class="search clearfix">\r\n            <div class="pull-right">\r\n                <div class="btn btn-primary btn-contact-search">查询</div>\r\n            </div>\r\n            <div class="overhidden">\r\n                <i class="iconfont icon-sousuo"></i>\r\n                <input type="text" class="form-control input-contact-search" placeholder="请输入姓名或电话号码">\r\n            </div>\r\n        </div>\r\n        <div class="nav">\r\n            联系人 >\r\n        </div>\r\n    </div>\r\n    <div class="contact-list-wrapper">\r\n        <div class="contact-list">\r\n            <div class="contact-box clearfix contact-type" data-type="1" data-typestr="移动公司">\r\n                <div class="pull-left">\r\n                    <i class="angle"></i>\r\n                    移动公司\r\n                </div>\r\n                <div class="overhidden"></div>\r\n            </div>\r\n            <div class="contact-box clearfix contact-type" data-type="2" data-typestr="渠道">\r\n                <div class="pull-left">\r\n                    <i class="angle"></i>\r\n                    渠道\r\n                </div>\r\n                <div class="overhidden"></div>\r\n            </div>\r\n            <!--<div class="contact-box clearfix">\r\n                <div class="pull-left">\r\n                    <i class="angle"></i>\r\n                    湘潭移动\r\n                </div>\r\n                <div class="pull-right">120人</div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="typeList" type="text/template">\r\n    <div class="contact-list">\r\n        <div class="contact-box clearfix contact-type" data-type="1" data-typestr="移动公司">\r\n            <div class="pull-left">\r\n                <i class="angle"></i>\r\n                移动公司\r\n            </div>\r\n            <div class="overhidden"></div>\r\n        </div>\r\n        <div class="contact-box clearfix contact-type" data-type="2" data-typestr="渠道">\r\n            <div class="pull-left">\r\n                <i class="angle"></i>\r\n                渠道\r\n            </div>\r\n            <div class="overhidden"></div>\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n<script id="companyList" type="text/template">\r\n    <% if(!list.length){ %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <% } %>\r\n\r\n    <div class="contact-list">\r\n    <%\r\n        _.each(list, function(v,i){\r\n    %>\r\n        <div class="contact-box clearfix contact-company" data-companystr="<%=v.company%>">\r\n            <div class="pull-left">\r\n                <i class="angle"></i>\r\n                <%=v.company%>\r\n            </div>\r\n            <div class="overhidden"><%=v.coun%>人</div>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n    </div>\r\n</script>\r\n\r\n<script id="sectionList" type="text/template">\r\n    <% if(!data.rows.length){ %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <% } %>\r\n\r\n    <div class="contact-list">\r\n    <%\r\n        _.each(data.rows,function(v,i){\r\n    %>\r\n        <div class="contact-box clearfix contact-section" data-sectionstr="<%=v.section%>">\r\n            <div class="pull-left">\r\n                <i class="angle"></i>\r\n                <%=v.section%>\r\n            </div>\r\n            <div class="overhidden"><%=v.coun%>人</div>\r\n        </div>\r\n    <%\r\n        });\r\n    %>\r\n    </div>\r\n\r\n    <% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n        <div class="list-control weui-row" id="sectionListControl">\r\n            <%\r\n                var prevAttr = \'\',nextAttr = \'\'; \r\n                \r\n                if(!data.hasPreviousPage){\r\n                    prevAttr = \'disabled\';\r\n                } \r\n                \r\n                if(!data.hasNextPage){\r\n                    nextAttr = \'disabled\';\r\n                } \r\n            %> \r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div>\r\n    <% } %>\r\n</script>\r\n\r\n<script id="contactList" type="text/template">\r\n    <% if($.isEmptyObject(obj)){ %>\r\n        <div class="warning-panel">暂无数据</div>\r\n    <% } %>\r\n    \r\n    <%\r\n        var arr = [];\r\n    %>\r\n    <% \r\n        _.each(obj, function(o,k){ \r\n            arr.push(k);\r\n    %>\r\n        <div class="contact-list-title" id="<%=k%>"><%=k%></div>\r\n        <div class="contact-list-box-wrapper">\r\n            <% _.each(o, function(v,i){ %>\r\n                <div class="contact-list-box" data-type="<%=v.type%>" data-mobile="<%=v.mobile%>">\r\n                    <div class="clearfix">\r\n                        <div class="pull-left">\r\n                            <i class="angle"></i>\r\n                            <%=v.name%>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <% }) %>\r\n        </div>\r\n    <% }) %>\r\n\r\n    <!--ul class="slide-first-char">\r\n        <% _.each(arr, function(a){ %>\r\n            <li><%=a%></li>\r\n        <% }) %>\r\n    </ul-->\r\n</script>';});


define('text!view/contact/tpl/detail.html',[],function () { return '<div class="common-content bottom-pd20 bg-gray" id="contactDetail">\r\n    <div class="header">\r\n        <div class="avatar">\r\n            <img src="app_img/noavatar.png">\r\n        </div>\r\n    </div>\r\n\r\n    <div class="content">\r\n        <div class="title">个人信息</div>\r\n        <div class="weui_cells" id="contactInfo">\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>姓名</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>手机号码</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    <a href="javascript:;">-</a>\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>所属单位</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>工作岗位</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n            <div class="weui_cell">\r\n                <div class="weui_cell_bd weui_cell_primary">\r\n                    <p>邮箱</p>\r\n                </div>\r\n                <div class="weui_cell_ft">\r\n                    -\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script id="infoTpl" type="text/template">\r\n    <%\r\n        function formatStr(str){\r\n\t\t\tif(!str){\r\n\t\t\t\treturn \'-\';\r\n\t\t\t}\r\n\r\n\t\t\treturn str;\r\n\t\t}\r\n    %>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>姓名</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=formatStr(name)%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>手机号码</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <a href="tel:<%=mobile%>"><%=formatStr(mobile)%></a>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>所属单位</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=formatStr(company)%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>工作岗位</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=formatStr(section)%>\r\n        </div>\r\n    </div>\r\n    <div class="weui_cell">\r\n        <div class="weui_cell_bd weui_cell_primary">\r\n            <p>邮箱</p>\r\n        </div>\r\n        <div class="weui_cell_ft">\r\n            <%=formatStr(email)%>\r\n        </div>\r\n    </div>\r\n</script>';});

/**
*   首页
**/

define('view/contact/detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/contact/tpl/detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/contact/tpl/detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
			
		},
		getDetail: function(){
			$.showLoading();
			businessDelegate.getContactUserInfo(this.options,_.bind(function(data){
				$.hideLoading();

				if(data.obj.userImg){
					this.$('#contactDetail .avatar > img').attr('src', data.obj.userImg);
				}

				var tpl = _.template(this.template)(data.obj);
				this.$content.html(tpl);
			},this),_.bind(function(err){
				$.hideLoading();
				$.jtoast(err);
			},this));
		},
		initialize: function (options) {
			this.options = options;
			console.log(options);

            this.header = new AppHeader({
                host: this,
                main: false,
				title: '用户详情'
            });

            this.$el.empty().append(this.header.$el).append(template);

			this.template = this.$('#infoTpl').html();
			this.$content = this.$('#contactInfo');

			this.getDetail();
		},
		render: function () {
			return this;
		}
	});

	return View;
});

define('charFirst.pinyin',['require','exports','module'],function (require, exports, module) {
    // 汉字拼音首字母列表 本列表包含了20902个汉字,用于配合 ToChineseSpell
    //函数使用,本表收录的字符的Unicode编码范围为19968至40869, XDesigner 整理
    var strChineseFirstPY = "YDYQSXMWZSSXJBYMGCCZQPSSQBYCDSCDQLDYLYBSSJGYZZJJFKCCLZDHWDWZJLJPFYYNWJJTMYHZWZHFLZPPQHGSCYYYNJQYXXGJHHSDSJNKKTMOMLCRXYPSNQSECCQZGGLLYJLMYZZSECYKYYHQWJSSGGYXYZYJWWKDJHYCHMYXJTLXJYQBYXZLDWRDJRWYSRLDZJPCBZJJBRCFTLECZSTZFXXZHTRQHYBDLYCZSSYMMRFMYQZPWWJJYFCRWFDFZQPYDDWYXKYJAWJFFXYPSFTZYHHYZYSWCJYXSCLCXXWZZXNBGNNXBXLZSZSBSGPYSYZDHMDZBQBZCWDZZYYTZHBTSYYBZGNTNXQYWQSKBPHHLXGYBFMJEBJHHGQTJCYSXSTKZHLYCKGLYSMZXYALMELDCCXGZYRJXSDLTYZCQKCNNJWHJTZZCQLJSTSTBNXBTYXCEQXGKWJYFLZQLYHYXSPSFXLMPBYSXXXYDJCZYLLLSJXFHJXPJBTFFYABYXBHZZBJYZLWLCZGGBTSSMDTJZXPTHYQTGLJSCQFZKJZJQNLZWLSLHDZBWJNCJZYZSQQYCQYRZCJJWYBRTWPYFTWEXCSKDZCTBZHYZZYYJXZCFFZZMJYXXSDZZOTTBZLQWFCKSZSXFYRLNYJMBDTHJXSQQCCSBXYYTSYFBXDZTGBCNSLCYZZPSAZYZZSCJCSHZQYDXLBPJLLMQXTYDZXSQJTZPXLCGLQTZWJBHCTSYJSFXYEJJTLBGXSXJMYJQQPFZASYJNTYDJXKJCDJSZCBARTDCLYJQMWNQNCLLLKBYBZZSYHQQLTWLCCXTXLLZNTYLNEWYZYXCZXXGRKRMTCNDNJTSYYSSDQDGHSDBJGHRWRQLYBGLXHLGTGXBQJDZPYJSJYJCTMRNYMGRZJCZGJMZMGXMPRYXKJNYMSGMZJYMKMFXMLDTGFBHCJHKYLPFMDXLQJJSMTQGZSJLQDLDGJYCALCMZCSDJLLNXDJFFFFJCZFMZFFPFKHKGDPSXKTACJDHHZDDCRRCFQYJKQCCWJDXHWJLYLLZGCFCQDSMLZPBJJPLSBCJGGDCKKDEZSQCCKJGCGKDJTJDLZYCXKLQSCGJCLTFPCQCZGWPJDQYZJJBYJHSJDZWGFSJGZKQCCZLLPSPKJGQJHZZLJPLGJGJJTHJJYJZCZMLZLYQBGJWMLJKXZDZNJQSYZMLJLLJKYWXMKJLHSKJGBMCLYYMKXJQLBMLLKMDXXKWYXYSLMLPSJQQJQXYXFJTJDXMXXLLCXQBSYJBGWYMBGGBCYXPJYGPEPFGDJGBHBNSQJYZJKJKHXQFGQZKFHYGKHDKLLSDJQXPQYKYBNQSXQNSZSWHBSXWHXWBZZXDMNSJBSBKBBZKLYLXGWXDRWYQZMYWSJQLCJXXJXKJEQXSCYETLZHLYYYSDZPAQYZCMTLSHTZCFYZYXYLJSDCJQAGYSLCQLYYYSHMRQQKLDXZSCSSSYDYCJYSFSJBFRSSZQSBXXPXJYSDRCKGJLGDKZJZBDKTCSYQPYHSTCLDJDHMXMCGXYZHJDDTMHLTXZXYLYMOHYJCLTYFBQQXPFBDFHHTKSQHZYYWCNXXCRWHOWGYJLEGWDQCWGFJYCSNTMYTOLBYGWQWESJPWNMLRYDZSZTXYQPZGCWXHNGPYXSHMYQJXZTDPPBFYHZHTJYFDZWKGKZBLDNTSXHQEEGZZYLZMMZYJZGXZXKHKSTXNXXWYLYAPSTHXDWHZYMPXAGKYDXBHNHXKDPJNMYHYLPMGOCSLNZHKXXLPZZLBMLSFBHHGYGYYGGBHSCYAQTYWLXTZQCEZYDQDQMMHTKLLSZHLSJZWFYHQSWSCWLQAZYNYTLSXTHAZNKZZSZZLAXXZWWCTGQQTDDYZTCCHYQZFLXPSLZYGPZSZNGLNDQTBDLXGTCTAJDKYWNSYZLJHHZZCWNYYZYWMHYCHHYXHJKZWSXHZYXLYSKQYSPSLYZWMYPPKBYGLKZHTYXAXQSYSHXASMCHKDSCRSWJPWXSGZJLWWSCHSJHSQNHCSEGNDAQTBAALZZMSSTDQJCJKTSCJAXPLGGXHHGXXZCXPDMMHLDGTYBYSJMXHMRCPXXJZCKZXSHMLQXXTTHXWZFKHCCZDYTCJYXQHLXDHYPJQXYLSYYDZOZJNYXQEZYSQYAYXWYPDGXDDXSPPYZNDLTWRHXYDXZZJHTCXMCZLHPYYYYMHZLLHNXMYLLLMDCPPXHMXDKYCYRDLTXJCHHZZXZLCCLYLNZSHZJZZLNNRLWHYQSNJHXYNTTTKYJPYCHHYEGKCTTWLGQRLGGTGTYGYHPYHYLQYQGCWYQKPYYYTTTTLHYHLLTYTTSPLKYZXGZWGPYDSSZZDQXSKCQNMJJZZBXYQMJRTFFBTKHZKBXLJJKDXJTLBWFZPPTKQTZTGPDGNTPJYFALQMKGXBDCLZFHZCLLLLADPMXDJHLCCLGYHDZFGYDDGCYYFGYDXKSSEBDHYKDKDKHNAXXYBPBYYHXZQGAFFQYJXDMLJCSQZLLPCHBSXGJYNDYBYQSPZWJLZKSDDTACTBXZDYZYPJZQSJNKKTKNJDJGYYPGTLFYQKASDNTCYHBLWDZHBBYDWJRYGKZYHEYYFJMSDTYFZJJHGCXPLXHLDWXXJKYTCYKSSSMTWCTTQZLPBSZDZWZXGZAGYKTYWXLHLSPBCLLOQMMZSSLCMBJCSZZKYDCZJGQQDSMCYTZQQLWZQZXSSFPTTFQMDDZDSHDTDWFHTDYZJYQJQKYPBDJYYXTLJHDRQXXXHAYDHRJLKLYTWHLLRLLRCXYLBWSRSZZSYMKZZHHKYHXKSMDSYDYCJPBZBSQLFCXXXNXKXWYWSDZYQOGGQMMYHCDZTTFJYYBGSTTTYBYKJDHKYXBELHTYPJQNFXFDYKZHQKZBYJTZBXHFDXKDASWTAWAJLDYJSFHBLDNNTNQJTJNCHXFJSRFWHZFMDRYJYJWZPDJKZYJYMPCYZNYNXFBYTFYFWYGDBNZZZDNYTXZEMMQBSQEHXFZMBMFLZZSRXYMJGSXWZJSPRYDJSJGXHJJGLJJYNZZJXHGXKYMLPYYYCXYTWQZSWHWLYRJLPXSLSXMFSWWKLCTNXNYNPSJSZHDZEPTXMYYWXYYSYWLXJQZQXZDCLEEELMCPJPCLWBXSQHFWWTFFJTNQJHJQDXHWLBYZNFJLALKYYJLDXHHYCSTYYWNRJYXYWTRMDRQHWQCMFJDYZMHMYYXJWMYZQZXTLMRSPWWCHAQBXYGZYPXYYRRCLMPYMGKSJSZYSRMYJSNXTPLNBAPPYPYLXYYZKYNLDZYJZCZNNLMZHHARQMPGWQTZMXXMLLHGDZXYHXKYXYCJMFFYYHJFSBSSQLXXNDYCANNMTCJCYPRRNYTYQNYYMBMSXNDLYLYSLJRLXYSXQMLLYZLZJJJKYZZCSFBZXXMSTBJGNXYZHLXNMCWSCYZYFZLXBRNNNYLBNRTGZQYSATSWRYHYJZMZDHZGZDWYBSSCSKXSYHYTXXGCQGXZZSHYXJSCRHMKKBXCZJYJYMKQHZJFNBHMQHYSNJNZYBKNQMCLGQHWLZNZSWXKHLJHYYBQLBFCDSXDLDSPFZPSKJYZWZXZDDXJSMMEGJSCSSMGCLXXKYYYLNYPWWWGYDKZJGGGZGGSYCKNJWNJPCXBJJTQTJWDSSPJXZXNZXUMELPXFSXTLLXCLJXJJLJZXCTPSWXLYDHLYQRWHSYCSQYYBYAYWJJJQFWQCQQCJQGXALDBZZYJGKGXPLTZYFXJLTPADKYQHPMATLCPDCKBMTXYBHKLENXDLEEGQDYMSAWHZMLJTWYGXLYQZLJEEYYBQQFFNLYXRDSCTGJGXYYNKLLYQKCCTLHJLQMKKZGCYYGLLLJDZGYDHZWXPYSJBZKDZGYZZHYWYFQYTYZSZYEZZLYMHJJHTSMQWYZLKYYWZCSRKQYTLTDXWCTYJKLWSQZWBDCQYNCJSRSZJLKCDCDTLZZZACQQZZDDXYPLXZBQJYLZLLLQDDZQJYJYJZYXNYYYNYJXKXDAZWYRDLJYYYRJLXLLDYXJCYWYWNQCCLDDNYYYNYCKCZHXXCCLGZQJGKWPPCQQJYSBZZXYJSQPXJPZBSBDSFNSFPZXHDWZTDWPPTFLZZBZDMYYPQJRSDZSQZSQXBDGCPZSWDWCSQZGMDHZXMWWFYBPDGPHTMJTHZSMMBGZMBZJCFZWFZBBZMQCFMBDMCJXLGPNJBBXGYHYYJGPTZGZMQBQTCGYXJXLWZKYDPDYMGCFTPFXYZTZXDZXTGKMTYBBCLBJASKYTSSQYYMSZXFJEWLXLLSZBQJJJAKLYLXLYCCTSXMCWFKKKBSXLLLLJYXTYLTJYYTDPJHNHNNKBYQNFQYYZBYYESSESSGDYHFHWTCJBSDZZTFDMXHCNJZYMQWSRYJDZJQPDQBBSTJGGFBKJBXTGQHNGWJXJGDLLTHZHHYYYYYYSXWTYYYCCBDBPYPZYCCZYJPZYWCBDLFWZCWJDXXHYHLHWZZXJTCZLCDPXUJCZZZLYXJJTXPHFXWPYWXZPTDZZBDZCYHJHMLXBQXSBYLRDTGJRRCTTTHYTCZWMXFYTWWZCWJWXJYWCSKYBZSCCTZQNHXNWXXKHKFHTSWOCCJYBCMPZZYKBNNZPBZHHZDLSYDDYTYFJPXYNGFXBYQXCBHXCPSXTYZDMKYSNXSXLHKMZXLYHDHKWHXXSSKQYHHCJYXGLHZXCSNHEKDTGZXQYPKDHEXTYKCNYMYYYPKQYYYKXZLTHJQTBYQHXBMYHSQCKWWYLLHCYYLNNEQXQWMCFBDCCMLJGGXDQKTLXKGNQCDGZJWYJJLYHHQTTTNWCHMXCXWHWSZJYDJCCDBQCDGDNYXZTHCQRXCBHZTQCBXWGQWYYBXHMBYMYQTYEXMQKYAQYRGYZSLFYKKQHYSSQYSHJGJCNXKZYCXSBXYXHYYLSTYCXQTHYSMGSCPMMGCCCCCMTZTASMGQZJHKLOSQYLSWTMXSYQKDZLJQQYPLSYCZTCQQPBBQJZCLPKHQZYYXXDTDDTSJCXFFLLCHQXMJLWCJCXTSPYCXNDTJSHJWXDQQJSKXYAMYLSJHMLALYKXCYYDMNMDQMXMCZNNCYBZKKYFLMCHCMLHXRCJJHSYLNMTJZGZGYWJXSRXCWJGJQHQZDQJDCJJZKJKGDZQGJJYJYLXZXXCDQHHHEYTMHLFSBDJSYYSHFYSTCZQLPBDRFRZTZYKYWHSZYQKWDQZRKMSYNBCRXQBJYFAZPZZEDZCJYWBCJWHYJBQSZYWRYSZPTDKZPFPBNZTKLQYHBBZPNPPTYZZYBQNYDCPJMMCYCQMCYFZZDCMNLFPBPLNGQJTBTTNJZPZBBZNJKLJQYLNBZQHKSJZNGGQSZZKYXSHPZSNBCGZKDDZQANZHJKDRTLZLSWJLJZLYWTJNDJZJHXYAYNCBGTZCSSQMNJPJYTYSWXZFKWJQTKHTZPLBHSNJZSYZBWZZZZLSYLSBJHDWWQPSLMMFBJDWAQYZTCJTBNNWZXQXCDSLQGDSDPDZHJTQQPSWLYYJZLGYXYZLCTCBJTKTYCZJTQKBSJLGMGZDMCSGPYNJZYQYYKNXRPWSZXMTNCSZZYXYBYHYZAXYWQCJTLLCKJJTJHGDXDXYQYZZBYWDLWQCGLZGJGQRQZCZSSBCRPCSKYDZNXJSQGXSSJMYDNSTZTPBDLTKZWXQWQTZEXNQCZGWEZKSSBYBRTSSSLCCGBPSZQSZLCCGLLLZXHZQTHCZMQGYZQZNMCOCSZJMMZSQPJYGQLJYJPPLDXRGZYXCCSXHSHGTZNLZWZKJCXTCFCJXLBMQBCZZWPQDNHXLJCTHYZLGYLNLSZZPCXDSCQQHJQKSXZPBAJYEMSMJTZDXLCJYRYYNWJBNGZZTMJXLTBSLYRZPYLSSCNXPHLLHYLLQQZQLXYMRSYCXZLMMCZLTZSDWTJJLLNZGGQXPFSKYGYGHBFZPDKMWGHCXMSGDXJMCJZDYCABXJDLNBCDQYGSKYDQTXDJJYXMSZQAZDZFSLQXYJSJZYLBTXXWXQQZBJZUFBBLYLWDSLJHXJYZJWTDJCZFQZQZZDZSXZZQLZCDZFJHYSPYMPQZMLPPLFFXJJNZZYLSJEYQZFPFZKSYWJJJHRDJZZXTXXGLGHYDXCSKYSWMMZCWYBAZBJKSHFHJCXMHFQHYXXYZFTSJYZFXYXPZLCHMZMBXHZZSXYFYMNCWDABAZLXKTCSHHXKXJJZJSTHYGXSXYYHHHJWXKZXSSBZZWHHHCWTZZZPJXSNXQQJGZYZYWLLCWXZFXXYXYHXMKYYSWSQMNLNAYCYSPMJKHWCQHYLAJJMZXHMMCNZHBHXCLXTJPLTXYJHDYYLTTXFSZHYXXSJBJYAYRSMXYPLCKDUYHLXRLNLLSTYZYYQYGYHHSCCSMZCTZQXKYQFPYYRPFFLKQUNTSZLLZMWWTCQQYZWTLLMLMPWMBZSSTZRBPDDTLQJJBXZCSRZQQYGWCSXFWZLXCCRSZDZMCYGGDZQSGTJSWLJMYMMZYHFBJDGYXCCPSHXNZCSBSJYJGJMPPWAFFYFNXHYZXZYLREMZGZCYZSSZDLLJCSQFNXZKPTXZGXJJGFMYYYSNBTYLBNLHPFZDCYFBMGQRRSSSZXYSGTZRNYDZZCDGPJAFJFZKNZBLCZSZPSGCYCJSZLMLRSZBZZLDLSLLYSXSQZQLYXZLSKKBRXBRBZCYCXZZZEEYFGKLZLYYHGZSGZLFJHGTGWKRAAJYZKZQTSSHJJXDCYZUYJLZYRZDQQHGJZXSSZBYKJPBFRTJXLLFQWJHYLQTYMBLPZDXTZYGBDHZZRBGXHWNJTJXLKSCFSMWLSDQYSJTXKZSCFWJLBXFTZLLJZLLQBLSQMQQCGCZFPBPHZCZJLPYYGGDTGWDCFCZQYYYQYSSCLXZSKLZZZGFFCQNWGLHQYZJJCZLQZZYJPJZZBPDCCMHJGXDQDGDLZQMFGPSYTSDYFWWDJZJYSXYYCZCYHZWPBYKXRYLYBHKJKSFXTZJMMCKHLLTNYYMSYXYZPYJQYCSYCWMTJJKQYRHLLQXPSGTLYYCLJSCPXJYZFNMLRGJJTYZBXYZMSJYJHHFZQMSYXRSZCWTLRTQZSSTKXGQKGSPTGCZNJSJCQCXHMXGGZTQYDJKZDLBZSXJLHYQGGGTHQSZPYHJHHGYYGKGGCWJZZYLCZLXQSFTGZSLLLMLJSKCTBLLZZSZMMNYTPZSXQHJCJYQXYZXZQZCPSHKZZYSXCDFGMWQRLLQXRFZTLYSTCTMJCXJJXHJNXTNRZTZFQYHQGLLGCXSZSJDJLJCYDSJTLNYXHSZXCGJZYQPYLFHDJSBPCCZHJJJQZJQDYBSSLLCMYTTMQTBHJQNNYGKYRQYQMZGCJKPDCGMYZHQLLSLLCLMHOLZGDYYFZSLJCQZLYLZQJESHNYLLJXGJXLYSYYYXNBZLJSSZCQQCJYLLZLTJYLLZLLBNYLGQCHXYYXOXCXQKYJXXXYKLXSXXYQXCYKQXQCSGYXXYQXYGYTQOHXHXPYXXXULCYEYCHZZCBWQBBWJQZSCSZSSLZYLKDESJZWMYMCYTSDSXXSCJPQQSQYLYYZYCMDJDZYWCBTJSYDJKCYDDJLBDJJSODZYSYXQQYXDHHGQQYQHDYXWGMMMAJDYBBBPPBCMUUPLJZSMTXERXJMHQNUTPJDCBSSMSSSTKJTSSMMTRCPLZSZMLQDSDMJMQPNQDXCFYNBFSDQXYXHYAYKQYDDLQYYYSSZBYDSLNTFQTZQPZMCHDHCZCWFDXTMYQSPHQYYXSRGJCWTJTZZQMGWJJTJHTQJBBHWZPXXHYQFXXQYWYYHYSCDYDHHQMNMTMWCPBSZPPZZGLMZFOLLCFWHMMSJZTTDHZZYFFYTZZGZYSKYJXQYJZQBHMBZZLYGHGFMSHPZFZSNCLPBQSNJXZSLXXFPMTYJYGBXLLDLXPZJYZJYHHZCYWHJYLSJEXFSZZYWXKZJLUYDTMLYMQJPWXYHXSKTQJEZRPXXZHHMHWQPWQLYJJQJJZSZCPHJLCHHNXJLQWZJHBMZYXBDHHYPZLHLHLGFWLCHYYTLHJXCJMSCPXSTKPNHQXSRTYXXTESYJCTLSSLSTDLLLWWYHDHRJZSFGXTSYCZYNYHTDHWJSLHTZDQDJZXXQHGYLTZPHCSQFCLNJTCLZPFSTPDYNYLGMJLLYCQHYSSHCHYLHQYQTMZYPBYWRFQYKQSYSLZDQJMPXYYSSRHZJNYWTQDFZBWWTWWRXCWHGYHXMKMYYYQMSMZHNGCEPMLQQMTCWCTMMPXJPJJHFXYYZSXZHTYBMSTSYJTTQQQYYLHYNPYQZLCYZHZWSMYLKFJXLWGXYPJYTYSYXYMZCKTTWLKSMZSYLMPWLZWXWQZSSAQSYXYRHSSNTSRAPXCPWCMGDXHXZDZYFJHGZTTSBJHGYZSZYSMYCLLLXBTYXHBBZJKSSDMALXHYCFYGMQYPJYCQXJLLLJGSLZGQLYCJCCZOTYXMTMTTLLWTGPXYMZMKLPSZZZXHKQYSXCTYJZYHXSHYXZKXLZWPSQPYHJWPJPWXQQYLXSDHMRSLZZYZWTTCYXYSZZSHBSCCSTPLWSSCJCHNLCGCHSSPHYLHFHHXJSXYLLNYLSZDHZXYLSXLWZYKCLDYAXZCMDDYSPJTQJZLNWQPSSSWCTSTSZLBLNXSMNYYMJQBQHRZWTYYDCHQLXKPZWBGQYBKFCMZWPZLLYYLSZYDWHXPSBCMLJBSCGBHXLQHYRLJXYSWXWXZSLDFHLSLYNJLZYFLYJYCDRJLFSYZFSLLCQYQFGJYHYXZLYLMSTDJCYHBZLLNWLXXYGYYHSMGDHXXHHLZZJZXCZZZCYQZFNGWPYLCPKPYYPMCLQKDGXZGGWQBDXZZKZFBXXLZXJTPJPTTBYTSZZDWSLCHZHSLTYXHQLHYXXXYYZYSWTXZKHLXZXZPYHGCHKCFSYHUTJRLXFJXPTZTWHPLYXFCRHXSHXKYXXYHZQDXQWULHYHMJTBFLKHTXCWHJFWJCFPQRYQXCYYYQYGRPYWSGSUNGWCHKZDXYFLXXHJJBYZWTSXXNCYJJYMSWZJQRMHXZWFQSYLZJZGBHYNSLBGTTCSYBYXXWXYHXYYXNSQYXMQYWRGYQLXBBZLJSYLPSYTJZYHYZAWLRORJMKSCZJXXXYXCHDYXRYXXJDTSQFXLYLTSFFYXLMTYJMJUYYYXLTZCSXQZQHZXLYYXZHDNBRXXXJCTYHLBRLMBRLLAXKYLLLJLYXXLYCRYLCJTGJCMTLZLLCYZZPZPCYAWHJJFYBDYYZSMPCKZDQYQPBPCJPDCYZMDPBCYYDYCNNPLMTMLRMFMMGWYZBSJGYGSMZQQQZTXMKQWGXLLPJGZBQCDJJJFPKJKCXBLJMSWMDTQJXLDLPPBXCWRCQFBFQJCZAHZGMYKPHYYHZYKNDKZMBPJYXPXYHLFPNYYGXJDBKXNXHJMZJXSTRSTLDXSKZYSYBZXJLXYSLBZYSLHXJPFXPQNBYLLJQKYGZMCYZZYMCCSLCLHZFWFWYXZMWSXTYNXJHPYYMCYSPMHYSMYDYSHQYZCHMJJMZCAAGCFJBBHPLYZYLXXSDJGXDHKXXTXXNBHRMLYJSLTXMRHNLXQJXYZLLYSWQGDLBJHDCGJYQYCMHWFMJYBMBYJYJWYMDPWHXQLDYGPDFXXBCGJSPCKRSSYZJMSLBZZJFLJJJLGXZGYXYXLSZQYXBEXYXHGCXBPLDYHWETTWWCJMBTXCHXYQXLLXFLYXLLJLSSFWDPZSMYJCLMWYTCZPCHQEKCQBWLCQYDPLQPPQZQFJQDJHYMMCXTXDRMJWRHXCJZYLQXDYYNHYYHRSLSRSYWWZJYMTLTLLGTQCJZYABTCKZCJYCCQLJZQXALMZYHYWLWDXZXQDLLQSHGPJFJLJHJABCQZDJGTKHSSTCYJLPSWZLXZXRWGLDLZRLZXTGSLLLLZLYXXWGDZYGBDPHZPBRLWSXQBPFDWOFMWHLYPCBJCCLDMBZPBZZLCYQXLDOMZBLZWPDWYYGDSTTHCSQSCCRSSSYSLFYBFNTYJSZDFNDPDHDZZMBBLSLCMYFFGTJJQWFTMTPJWFNLBZCMMJTGBDZLQLPYFHYYMJYLSDCHDZJWJCCTLJCLDTLJJCPDDSQDSSZYBNDBJLGGJZXSXNLYCYBJXQYCBYLZCFZPPGKCXZDZFZTJJFJSJXZBNZYJQTTYJYHTYCZHYMDJXTTMPXSPLZCDWSLSHXYPZGTFMLCJTYCBPMGDKWYCYZCDSZZYHFLYCTYGWHKJYYLSJCXGYWJCBLLCSNDDBTZBSCLYZCZZSSQDLLMQYYHFSLQLLXFTYHABXGWNYWYYPLLSDLDLLBJCYXJZMLHLJDXYYQYTDLLLBUGBFDFBBQJZZMDPJHGCLGMJJPGAEHHBWCQXAXHHHZCHXYPHJAXHLPHJPGPZJQCQZGJJZZUZDMQYYBZZPHYHYBWHAZYJHYKFGDPFQSDLZMLJXKXGALXZDAGLMDGXMWZQYXXDXXPFDMMSSYMPFMDMMKXKSYZYSHDZKXSYSMMZZZMSYDNZZCZXFPLSTMZDNMXCKJMZTYYMZMZZMSXHHDCZJEMXXKLJSTLWLSQLYJZLLZJSSDPPMHNLZJCZYHMXXHGZCJMDHXTKGRMXFWMCGMWKDTKSXQMMMFZZYDKMSCLCMPCGMHSPXQPZDSSLCXKYXTWLWJYAHZJGZQMCSNXYYMMPMLKJXMHLMLQMXCTKZMJQYSZJSYSZHSYJZJCDAJZYBSDQJZGWZQQXFKDMSDJLFWEHKZQKJPEYPZYSZCDWYJFFMZZYLTTDZZEFMZLBNPPLPLPEPSZALLTYLKCKQZKGENQLWAGYXYDPXLHSXQQWQCQXQCLHYXXMLYCCWLYMQYSKGCHLCJNSZKPYZKCQZQLJPDMDZHLASXLBYDWQLWDNBQCRYDDZTJYBKBWSZDXDTNPJDTCTQDFXQQMGNXECLTTBKPWSLCTYQLPWYZZKLPYGZCQQPLLKCCYLPQMZCZQCLJSLQZDJXLDDHPZQDLJJXZQDXYZQKZLJCYQDYJPPYPQYKJYRMPCBYMCXKLLZLLFQPYLLLMBSGLCYSSLRSYSQTMXYXZQZFDZUYSYZTFFMZZSMZQHZSSCCMLYXWTPZGXZJGZGSJSGKDDHTQGGZLLBJDZLCBCHYXYZHZFYWXYZYMSDBZZYJGTSMTFXQYXQSTDGSLNXDLRYZZLRYYLXQHTXSRTZNGZXBNQQZFMYKMZJBZYMKBPNLYZPBLMCNQYZZZSJZHJCTZKHYZZJRDYZHNPXGLFZTLKGJTCTSSYLLGZRZBBQZZKLPKLCZYSSUYXBJFPNJZZXCDWXZYJXZZDJJKGGRSRJKMSMZJLSJYWQSKYHQJSXPJZZZLSNSHRNYPZTWCHKLPSRZLZXYJQXQKYSJYCZTLQZYBBYBWZPQDWWYZCYTJCJXCKCWDKKZXSGKDZXWWYYJQYYTCYTDLLXWKCZKKLCCLZCQQDZLQLCSFQCHQHSFSMQZZLNBJJZBSJHTSZDYSJQJPDLZCDCWJKJZZLPYCGMZWDJJBSJQZSYZYHHXJPBJYDSSXDZNCGLQMBTSFSBPDZDLZNFGFJGFSMPXJQLMBLGQCYYXBQKDJJQYRFKZTJDHCZKLBSDZCFJTPLLJGXHYXZCSSZZXSTJYGKGCKGYOQXJPLZPBPGTGYJZGHZQZZLBJLSQFZGKQQJZGYCZBZQTLDXRJXBSXXPZXHYZYCLWDXJJHXMFDZPFZHQHQMQGKSLYHTYCGFRZGNQXCLPDLBZCSCZQLLJBLHBZCYPZZPPDYMZZSGYHCKCPZJGSLJLNSCDSLDLXBMSTLDDFJMKDJDHZLZXLSZQPQPGJLLYBDSZGQLBZLSLKYYHZTTNTJYQTZZPSZQZTLLJTYYLLQLLQYZQLBDZLSLYYZYMDFSZSNHLXZNCZQZPBWSKRFBSYZMTHBLGJPMCZZLSTLXSHTCSYZLZBLFEQHLXFLCJLYLJQCBZLZJHHSSTBRMHXZHJZCLXFNBGXGTQJCZTMSFZKJMSSNXLJKBHSJXNTNLZDNTLMSJXGZJYJCZXYJYJWRWWQNZTNFJSZPZSHZJFYRDJSFSZJZBJFZQZZHZLXFYSBZQLZSGYFTZDCSZXZJBQMSZKJRHYJZCKMJKHCHGTXKXQGLXPXFXTRTYLXJXHDTSJXHJZJXZWZLCQSBTXWXGXTXXHXFTSDKFJHZYJFJXRZSDLLLTQSQQZQWZXSYQTWGWBZCGZLLYZBCLMQQTZHZXZXLJFRMYZFLXYSQXXJKXRMQDZDMMYYBSQBHGZMWFWXGMXLZPYYTGZYCCDXYZXYWGSYJYZNBHPZJSQSYXSXRTFYZGRHZTXSZZTHCBFCLSYXZLZQMZLMPLMXZJXSFLBYZMYQHXJSXRXSQZZZSSLYFRCZJRCRXHHZXQYDYHXSJJHZCXZBTYNSYSXJBQLPXZQPYMLXZKYXLXCJLCYSXXZZLXDLLLJJYHZXGYJWKJRWYHCPSGNRZLFZWFZZNSXGXFLZSXZZZBFCSYJDBRJKRDHHGXJLJJTGXJXXSTJTJXLYXQFCSGSWMSBCTLQZZWLZZKXJMLTMJYHSDDBXGZHDLBMYJFRZFSGCLYJBPMLYSMSXLSZJQQHJZFXGFQFQBPXZGYYQXGZTCQWYLTLGWSGWHRLFSFGZJMGMGBGTJFSYZZGZYZAFLSSPMLPFLCWBJZCLJJMZLPJJLYMQDMYYYFBGYGYZMLYZDXQYXRQQQHSYYYQXYLJTYXFSFSLLGNQCYHYCWFHCCCFXPYLYPLLZYXXXXXKQHHXSHJZCFZSCZJXCPZWHHHHHAPYLQALPQAFYHXDYLUKMZQGGGDDESRNNZLTZGCHYPPYSQJJHCLLJTOLNJPZLJLHYMHEYDYDSQYCDDHGZUNDZCLZYZLLZNTNYZGSLHSLPJJBDGWXPCDUTJCKLKCLWKLLCASSTKZZDNQNTTLYYZSSYSSZZRYLJQKCQDHHCRXRZYDGRGCWCGZQFFFPPJFZYNAKRGYWYQPQXXFKJTSZZXSWZDDFBBXTBGTZKZNPZZPZXZPJSZBMQHKCYXYLDKLJNYPKYGHGDZJXXEAHPNZKZTZCMXCXMMJXNKSZQNMNLWBWWXJKYHCPSTMCSQTZJYXTPCTPDTNNPGLLLZSJLSPBLPLQHDTNJNLYYRSZFFJFQWDPHZDWMRZCCLODAXNSSNYZRESTYJWJYJDBCFXNMWTTBYLWSTSZGYBLJPXGLBOCLHPCBJLTMXZLJYLZXCLTPNCLCKXTPZJSWCYXSFYSZDKNTLBYJCYJLLSTGQCBXRYZXBXKLYLHZLQZLNZCXWJZLJZJNCJHXMNZZGJZZXTZJXYCYYCXXJYYXJJXSSSJSTSSTTPPGQTCSXWZDCSYFPTFBFHFBBLZJCLZZDBXGCXLQPXKFZFLSYLTUWBMQJHSZBMDDBCYSCCLDXYCDDQLYJJWMQLLCSGLJJSYFPYYCCYLTJANTJJPWYCMMGQYYSXDXQMZHSZXPFTWWZQSWQRFKJLZJQQYFBRXJHHFWJJZYQAZMYFRHCYYBYQWLPEXCCZSTYRLTTDMQLYKMBBGMYYJPRKZNPBSXYXBHYZDJDNGHPMFSGMWFZMFQMMBCMZZCJJLCNUXYQLMLRYGQZCYXZLWJGCJCGGMCJNFYZZJHYCPRRCMTZQZXHFQGTJXCCJEAQCRJYHPLQLSZDJRBCQHQDYRHYLYXJSYMHZYDWLDFRYHBPYDTSSCNWBXGLPZMLZZTQSSCPJMXXYCSJYTYCGHYCJWYRXXLFEMWJNMKLLSWTXHYYYNCMMCWJDQDJZGLLJWJRKHPZGGFLCCSCZMCBLTBHBQJXQDSPDJZZGKGLFQYWBZYZJLTSTDHQHCTCBCHFLQMPWDSHYYTQWCNZZJTLBYMBPDYYYXSQKXWYYFLXXNCWCXYPMAELYKKJMZZZBRXYYQJFLJPFHHHYTZZXSGQQMHSPGDZQWBWPJHZJDYSCQWZKTXXSQLZYYMYSDZGRXCKKUJLWPYSYSCSYZLRMLQSYLJXBCXTLWDQZPCYCYKPPPNSXFYZJJRCEMHSZMSXLXGLRWGCSTLRSXBZGBZGZTCPLUJLSLYLYMTXMTZPALZXPXJTJWTCYYZLBLXBZLQMYLXPGHDSLSSDMXMBDZZSXWHAMLCZCPJMCNHJYSNSYGCHSKQMZZQDLLKABLWJXSFMOCDXJRRLYQZKJMYBYQLYHETFJZFRFKSRYXFJTWDSXXSYSQJYSLYXWJHSNLXYYXHBHAWHHJZXWMYLJCSSLKYDZTXBZSYFDXGXZJKHSXXYBSSXDPYNZWRPTQZCZENYGCXQFJYKJBZMLJCMQQXUOXSLYXXLYLLJDZBTYMHPFSTTQQWLHOKYBLZZALZXQLHZWRRQHLSTMYPYXJJXMQSJFNBXYXYJXXYQYLTHYLQYFMLKLJTMLLHSZWKZHLJMLHLJKLJSTLQXYLMBHHLNLZXQJHXCFXXLHYHJJGBYZZKBXSCQDJQDSUJZYYHZHHMGSXCSYMXFEBCQWWRBPYYJQTYZCYQYQQZYHMWFFHGZFRJFCDPXNTQYZPDYKHJLFRZXPPXZDBBGZQSTLGDGYLCQMLCHHMFYWLZYXKJLYPQHSYWMQQGQZMLZJNSQXJQSYJYCBEHSXFSZPXZWFLLBCYYJDYTDTHWZSFJMQQYJLMQXXLLDTTKHHYBFPWTYYSQQWNQWLGWDEBZWCMYGCULKJXTMXMYJSXHYBRWFYMWFRXYQMXYSZTZZTFYKMLDHQDXWYYNLCRYJBLPSXCXYWLSPRRJWXHQYPHTYDNXHHMMYWYTZCSQMTSSCCDALWZTCPQPYJLLQZYJSWXMZZMMYLMXCLMXCZMXMZSQTZPPQQBLPGXQZHFLJJHYTJSRXWZXSCCDLXTYJDCQJXSLQYCLZXLZZXMXQRJMHRHZJBHMFLJLMLCLQNLDXZLLLPYPSYJYSXCQQDCMQJZZXHNPNXZMEKMXHYKYQLXSXTXJYYHWDCWDZHQYYBGYBCYSCFGPSJNZDYZZJZXRZRQJJYMCANYRJTLDPPYZBSTJKXXZYPFDWFGZZRPYMTNGXZQBYXNBUFNQKRJQZMJEGRZGYCLKXZDSKKNSXKCLJSPJYYZLQQJYBZSSQLLLKJXTBKTYLCCDDBLSPPFYLGYDTZJYQGGKQTTFZXBDKTYYHYBBFYTYYBCLPDYTGDHRYRNJSPTCSNYJQHKLLLZSLYDXXWBCJQSPXBPJZJCJDZFFXXBRMLAZHCSNDLBJDSZBLPRZTSWSBXBCLLXXLZDJZSJPYLYXXYFTFFFBHJJXGBYXJPMMMPSSJZJMTLYZJXSWXTYLEDQPJMYGQZJGDJLQJWJQLLSJGJGYGMSCLJJXDTYGJQJQJCJZCJGDZZSXQGSJGGCXHQXSNQLZZBXHSGZXCXYLJXYXYYDFQQJHJFXDHCTXJYRXYSQTJXYEFYYSSYYJXNCYZXFXMSYSZXYYSCHSHXZZZGZZZGFJDLTYLNPZGYJYZYYQZPBXQBDZTZCZYXXYHHSQXSHDHGQHJHGYWSZTMZMLHYXGEBTYLZKQWYTJZRCLEKYSTDBCYKQQSAYXCJXWWGSBHJYZYDHCSJKQCXSWXFLTYNYZPZCCZJQTZWJQDZZZQZLJJXLSBHPYXXPSXSHHEZTXFPTLQYZZXHYTXNCFZYYHXGNXMYWXTZSJPTHHGYMXMXQZXTSBCZYJYXXTYYZYPCQLMMSZMJZZLLZXGXZAAJZYXJMZXWDXZSXZDZXLEYJJZQBHZWZZZQTZPSXZTDSXJJJZNYAZPHXYYSRNQDTHZHYYKYJHDZXZLSWCLYBZYECWCYCRYLCXNHZYDZYDYJDFRJJHTRSQTXYXJRJHOJYNXELXSFSFJZGHPZSXZSZDZCQZBYYKLSGSJHCZSHDGQGXYZGXCHXZJWYQWGYHKSSEQZZNDZFKWYSSTCLZSTSYMCDHJXXYWEYXCZAYDMPXMDSXYBSQMJMZJMTZQLPJYQZCGQHXJHHLXXHLHDLDJQCLDWBSXFZZYYSCHTYTYYBHECXHYKGJPXHHYZJFXHWHBDZFYZBCAPNPGNYDMSXHMMMMAMYNBYJTMPXYYMCTHJBZYFCGTYHWPHFTWZZEZSBZEGPFMTSKFTYCMHFLLHGPZJXZJGZJYXZSBBQSCZZLZCCSTPGXMJSFTCCZJZDJXCYBZLFCJSYZFGSZLYBCWZZBYZDZYPSWYJZXZBDSYUXLZZBZFYGCZXBZHZFTPBGZGEJBSTGKDMFHYZZJHZLLZZGJQZLSFDJSSCBZGPDLFZFZSZYZYZSYGCXSNXXCHCZXTZZLJFZGQSQYXZJQDCCZTQCDXZJYQJQCHXZTDLGSCXZSYQJQTZWLQDQZTQCHQQJZYEZZZPBWKDJFCJPZTYPQYQTTYNLMBDKTJZPQZQZZFPZSBNJLGYJDXJDZZKZGQKXDLPZJTCJDQBXDJQJSTCKNXBXZMSLYJCQMTJQWWCJQNJNLLLHJCWQTBZQYDZCZPZZDZYDDCYZZZCCJTTJFZDPRRTZTJDCQTQZDTJNPLZBCLLCTZSXKJZQZPZLBZRBTJDCXFCZDBCCJJLTQQPLDCGZDBBZJCQDCJWYNLLZYZCCDWLLXWZLXRXNTQQCZXKQLSGDFQTDDGLRLAJJTKUYMKQLLTZYTDYYCZGJWYXDXFRSKSTQTENQMRKQZHHQKDLDAZFKYPBGGPZREBZZYKZZSPEGJXGYKQZZZSLYSYYYZWFQZYLZZLZHWCHKYPQGNPGBLPLRRJYXCCSYYHSFZFYBZYYTGZXYLXCZWXXZJZBLFFLGSKHYJZEYJHLPLLLLCZGXDRZELRHGKLZZYHZLYQSZZJZQLJZFLNBHGWLCZCFJYSPYXZLZLXGCCPZBLLCYBBBBUBBCBPCRNNZCZYRBFSRLDCGQYYQXYGMQZWTZYTYJXYFWTEHZZJYWLCCNTZYJJZDEDPZDZTSYQJHDYMBJNYJZLXTSSTPHNDJXXBYXQTZQDDTJTDYYTGWSCSZQFLSHLGLBCZPHDLYZJYCKWTYTYLBNYTSDSYCCTYSZYYEBHEXHQDTWNYGYCLXTSZYSTQMYGZAZCCSZZDSLZCLZRQXYYELJSBYMXSXZTEMBBLLYYLLYTDQYSHYMRQWKFKBFXNXSBYCHXBWJYHTQBPBSBWDZYLKGZSKYHXQZJXHXJXGNLJKZLYYCDXLFYFGHLJGJYBXQLYBXQPQGZTZPLNCYPXDJYQYDYMRBESJYYHKXXSTMXRCZZYWXYQYBMCLLYZHQYZWQXDBXBZWZMSLPDMYSKFMZKLZCYQYCZLQXFZZYDQZPZYGYJYZMZXDZFYFYTTQTZHGSPCZMLCCYTZXJCYTJMKSLPZHYSNZLLYTPZCTZZCKTXDHXXTQCYFKSMQCCYYAZHTJPCYLZLYJBJXTPNYLJYYNRXSYLMMNXJSMYBCSYSYLZYLXJJQYLDZLPQBFZZBLFNDXQKCZFYWHGQMRDSXYCYTXNQQJZYYPFZXDYZFPRXEJDGYQBXRCNFYYQPGHYJDYZXGRHTKYLNWDZNTSMPKLBTHBPYSZBZTJZSZZJTYYXZPHSSZZBZCZPTQFZMYFLYPYBBJQXZMXXDJMTSYSKKBJZXHJCKLPSMKYJZCXTMLJYXRZZQSLXXQPYZXMKYXXXJCLJPRMYYGADYSKQLSNDHYZKQXZYZTCGHZTLMLWZYBWSYCTBHJHJFCWZTXWYTKZLXQSHLYJZJXTMPLPYCGLTBZZTLZJCYJGDTCLKLPLLQPJMZPAPXYZLKKTKDZCZZBNZDYDYQZJYJGMCTXLTGXSZLMLHBGLKFWNWZHDXUHLFMKYSLGXDTWWFRJEJZTZHYDXYKSHWFZCQSHKTMQQHTZHYMJDJSKHXZJZBZZXYMPAGQMSTPXLSKLZYNWRTSQLSZBPSPSGZWYHTLKSSSWHZZLYYTNXJGMJSZSUFWNLSOZTXGXLSAMMLBWLDSZYLAKQCQCTMYCFJBSLXCLZZCLXXKSBZQCLHJPSQPLSXXCKSLNHPSFQQYTXYJZLQLDXZQJZDYYDJNZPTUZDSKJFSLJHYLZSQZLBTXYDGTQFDBYAZXDZHZJNHHQBYKNXJJQCZMLLJZKSPLDYCLBBLXKLELXJLBQYCXJXGCNLCQPLZLZYJTZLJGYZDZPLTQCSXFDMNYCXGBTJDCZNBGBQYQJWGKFHTNPYQZQGBKPBBYZMTJDYTBLSQMPSXTBNPDXKLEMYYCJYNZCTLDYKZZXDDXHQSHDGMZSJYCCTAYRZLPYLTLKXSLZCGGEXCLFXLKJRTLQJAQZNCMBYDKKCXGLCZJZXJHPTDJJMZQYKQSECQZDSHHADMLZFMMZBGNTJNNLGBYJBRBTMLBYJDZXLCJLPLDLPCQDHLXZLYCBLCXZZJADJLNZMMSSSMYBHBSQKBHRSXXJMXSDZNZPXLGBRHWGGFCXGMSKLLTSJYYCQLTSKYWYYHYWXBXQYWPYWYKQLSQPTNTKHQCWDQKTWPXXHCPTHTWUMSSYHBWCRWXHJMKMZNGWTMLKFGHKJYLSYYCXWHYECLQHKQHTTQKHFZLDXQWYZYYDESBPKYRZPJFYYZJCEQDZZDLATZBBFJLLCXDLMJSSXEGYGSJQXCWBXSSZPDYZCXDNYXPPZYDLYJCZPLTXLSXYZYRXCYYYDYLWWNZSAHJSYQYHGYWWAXTJZDAXYSRLTDPSSYYFNEJDXYZHLXLLLZQZSJNYQYQQXYJGHZGZCYJCHZLYCDSHWSHJZYJXCLLNXZJJYYXNFXMWFPYLCYLLABWDDHWDXJMCXZTZPMLQZHSFHZYNZTLLDYWLSLXHYMMYLMBWWKYXYADTXYLLDJPYBPWUXJMWMLLSAFDLLYFLBHHHBQQLTZJCQJLDJTFFKMMMBYTHYGDCQRDDWRQJXNBYSNWZDBYYTBJHPYBYTTJXAAHGQDQTMYSTQXKBTZPKJLZRBEQQSSMJJBDJOTGTBXPGBKTLHQXJJJCTHXQDWJLWRFWQGWSHCKRYSWGFTGYGBXSDWDWRFHWYTJJXXXJYZYSLPYYYPAYXHYDQKXSHXYXGSKQHYWFDDDPPLCJLQQEEWXKSYYKDYPLTJTHKJLTCYYHHJTTPLTZZCDLTHQKZXQYSTEEYWYYZYXXYYSTTJKLLPZMCYHQGXYHSRMBXPLLNQYDQHXSXXWGDQBSHYLLPJJJTHYJKYPPTHYYKTYEZYENMDSHLCRPQFDGFXZPSFTLJXXJBSWYYSKSFLXLPPLBBBLBSFXFYZBSJSSYLPBBFFFFSSCJDSTZSXZRYYSYFFSYZYZBJTBCTSBSDHRTJJBYTCXYJEYLXCBNEBJDSYXYKGSJZBXBYTFZWGENYHHTHZHHXFWGCSTBGXKLSXYWMTMBYXJSTZSCDYQRCYTWXZFHMYMCXLZNSDJTTTXRYCFYJSBSDYERXJLJXBBDEYNJGHXGCKGSCYMBLXJMSZNSKGXFBNBPTHFJAAFXYXFPXMYPQDTZCXZZPXRSYWZDLYBBKTYQPQJPZYPZJZNJPZJLZZFYSBTTSLMPTZRTDXQSJEHBZYLZDHLJSQMLHTXTJECXSLZZSPKTLZKQQYFSYGYWPCPQFHQHYTQXZKRSGTTSQCZLPTXCDYYZXSQZSLXLZMYCPCQBZYXHBSXLZDLTCDXTYLZJYYZPZYZLTXJSJXHLPMYTXCQRBLZSSFJZZTNJYTXMYJHLHPPLCYXQJQQKZZSCPZKSWALQSBLCCZJSXGWWWYGYKTJBBZTDKHXHKGTGPBKQYSLPXPJCKBMLLXDZSTBKLGGQKQLSBKKTFXRMDKBFTPZFRTBBRFERQGXYJPZSSTLBZTPSZQZSJDHLJQLZBPMSMMSXLQQNHKNBLRDDNXXDHDDJCYYGYLXGZLXSYGMQQGKHBPMXYXLYTQWLWGCPBMQXCYZYDRJBHTDJYHQSHTMJSBYPLWHLZFFNYPMHXXHPLTBQPFBJWQDBYGPNZTPFZJGSDDTQSHZEAWZZYLLTYYBWJKXXGHLFKXDJTMSZSQYNZGGSWQSPHTLSSKMCLZXYSZQZXNCJDQGZDLFNYKLJCJLLZLMZZNHYDSSHTHZZLZZBBHQZWWYCRZHLYQQJBEYFXXXWHSRXWQHWPSLMSSKZTTYGYQQWRSLALHMJTQJSMXQBJJZJXZYZKXBYQXBJXSHZTSFJLXMXZXFGHKZSZGGYLCLSARJYHSLLLMZXELGLXYDJYTLFBHBPNLYZFBBHPTGJKWETZHKJJXZXXGLLJLSTGSHJJYQLQZFKCGNNDJSSZFDBCTWWSEQFHQJBSAQTGYPQLBXBMMYWXGSLZHGLZGQYFLZBYFZJFRYSFMBYZHQGFWZSYFYJJPHZBYYZFFWODGRLMFTWLBZGYCQXCDJYGZYYYYTYTYDWEGAZYHXJLZYYHLRMGRXXZCLHNELJJTJTPWJYBJJBXJJTJTEEKHWSLJPLPSFYZPQQBDLQJJTYYQLYZKDKSQJYYQZLDQTGJQYZJSUCMRYQTHTEJMFCTYHYPKMHYZWJDQFHYYXWSHCTXRLJHQXHCCYYYJLTKTTYTMXGTCJTZAYYOCZLYLBSZYWJYTSJYHBYSHFJLYGJXXTMZYYLTXXYPZLXYJZYZYYPNHMYMDYYLBLHLSYYQQLLNJJYMSOYQBZGDLYXYLCQYXTSZEGXHZGLHWBLJHEYXTWQMAKBPQCGYSHHEGQCMWYYWLJYJHYYZLLJJYLHZYHMGSLJLJXCJJYCLYCJPCPZJZJMMYLCQLNQLJQJSXYJMLSZLJQLYCMMHCFMMFPQQMFYLQMCFFQMMMMHMZNFHHJGTTHHKHSLNCHHYQDXTMMQDCYZYXYQMYQYLTDCYYYZAZZCYMZYDLZFFFMMYCQZWZZMABTBYZTDMNZZGGDFTYPCGQYTTSSFFWFDTZQSSYSTWXJHXYTSXXYLBYQHWWKXHZXWZNNZZJZJJQJCCCHYYXBZXZCYZTLLCQXYNJYCYYCYNZZQYYYEWYCZDCJYCCHYJLBTZYYCQWMPWPYMLGKDLDLGKQQBGYCHJXY";
    //此处收录了375个多音字,
    var oMultiDiff = { "19969": "DZ", "19975": "WM", "19988": "QJ", "20048": "YL", "20056": "SC", "20060": "NM", "20094": "QG", "20127": "QJ", "20167": "QC", "20193": "YG", "20250": "KH", "20256": "ZC", "20282": "SC", "20285": "QJG", "20291": "TD", "20314": "YD", "20340": "NE", "20375": "TD", "20389": "YJ", "20391": "CZ", "20415": "PB", "20446": "YS", "20447": "SQ", "20504": "TC", "20608": "KG", "20854": "QJ", "20857": "ZC", "20911": "PF", "20504": "TC", "20608": "KG", "20854": "QJ", "20857": "ZC", "20911": "PF", "20985": "AW", "21032": "PB", "21048": "XQ", "21049": "SC", "21089": "YS", "21119": "JC", "21242": "SB", "21273": "SC", "21305": "YP", "21306": "QO", "21330": "ZC", "21333": "SDC", "21345": "QK", "21378": "CA", "21397": "SC", "21414": "XS", "21442": "SC", "21477": "JG", "21480": "TD", "21484": "ZS", "21494": "YX", "21505": "YX", "21512": "HG", "21523": "XH", "21537": "PB", "21542": "PF", "21549": "KH", "21571": "E", "21574": "DA", "21588": "TD", "21589": "O", "21618": "ZC", "21621": "KHA", "21632": "ZJ", "21654": "KG", "21679": "LKG", "21683": "KH", "21710": "A", "21719": "YH", "21734": "WOE", "21769": "A", "21780": "WN", "21804": "XH", "21834": "A", "21899": "ZD", "21903": "RN", "21908": "WO", "21939": "ZC", "21956": "SA", "21964": "YA", "21970": "TD", "22003": "A", "22031": "JG", "22040": "XS", "22060": "ZC", "22066": "ZC", "22079": "MH", "22129": "XJ", "22179": "XA", "22237": "NJ", "22244": "TD", "22280": "JQ", "22300": "YH", "22313": "XW", "22331": "YQ", "22343": "YJ", "22351": "PH", "22395": "DC", "22412": "TD", "22484": "PB", "22500": "PB", "22534": "ZD", "22549": "DH", "22561": "PB", "22612": "TD", "22771": "KQ", "22831": "HB", "22841": "JG", "22855": "QJ", "22865": "XQ", "23013": "ML", "23081": "WM", "23487": "SX", "23558": "QJ", "23561": "YW", "23586": "YW", "23614": "YW", "23615": "SN", "23631": "PB", "23646": "ZS", "23663": "ZT", "23673": "YG", "23762": "TD", "23769": "ZS", "23780": "QJ", "23884": "QK", "24055": "XH", "24113": "DC", "24162": "ZC", "24191": "GA", "24273": "QJ", "24324": "NL", "24377": "TD", "24378": "QJ", "24439": "PF", "24554": "ZS", "24683": "TD", "24694": "WE", "24733": "LK", "24925": "TN", "25094": "ZG", "25100": "XQ", "25103": "XH", "25153": "PB", "25170": "PB", "25179": "KG", "25203": "PB", "25240": "ZS", "25282": "FB", "25303": "NA", "25324": "KG", "25341": "ZY", "25373": "WZ", "25375": "XJ", "25384": "A", "25457": "A", "25528": "SD", "25530": "SC", "25552": "TD", "25774": "ZC", "25874": "ZC", "26044": "YW", "26080": "WM", "26292": "PB", "26333": "PB", "26355": "ZY", "26366": "CZ", "26397": "ZC", "26399": "QJ", "26415": "ZS", "26451": "SB", "26526": "ZC", "26552": "JG", "26561": "TD", "26588": "JG", "26597": "CZ", "26629": "ZS", "26638": "YL", "26646": "XQ", "26653": "KG", "26657": "XJ", "26727": "HG", "26894": "ZC", "26937": "ZS", "26946": "ZC", "26999": "KJ", "27099": "KJ", "27449": "YQ", "27481": "XS", "27542": "ZS", "27663": "ZS", "27748": "TS", "27784": "SC", "27788": "ZD", "27795": "TD", "27812": "O", "27850": "PB", "27852": "MB", "27895": "SL", "27898": "PL", "27973": "QJ", "27981": "KH", "27986": "HX", "27994": "XJ", "28044": "YC", "28065": "WG", "28177": "SM", "28267": "QJ", "28291": "KH", "28337": "ZQ", "28463": "TL", "28548": "DC", "28601": "TD", "28689": "PB", "28805": "JG", "28820": "QG", "28846": "PB", "28952": "TD", "28975": "ZC", "29100": "A", "29325": "QJ", "29575": "SL", "29602": "FB", "30010": "TD", "30044": "CX", "30058": "PF", "30091": "YSP", "30111": "YN", "30229": "XJ", "30427": "SC", "30465": "SX", "30631": "YQ", "30655": "QJ", "30684": "QJG", "30707": "SD", "30729": "XH", "30796": "LG", "30917": "PB", "31074": "NM", "31085": "JZ", "31109": "SC", "31181": "ZC", "31192": "MLB", "31293": "JQ", "31400": "YX", "31584": "YJ", "31896": "ZN", "31909": "ZY", "31995": "XJ", "32321": "PF", "32327": "ZY", "32418": "HG", "32420": "XQ", "32421": "HG", "32438": "LG", "32473": "GJ", "32488": "TD", "32521": "QJ", "32527": "PB", "32562": "ZSQ", "32564": "JZ", "32735": "ZD", "32793": "PB", "33071": "PF", "33098": "XL", "33100": "YA", "33152": "PB", "33261": "CX", "33324": "BP", "33333": "TD", "33406": "YA", "33426": "WM", "33432": "PB", "33445": "JG", "33486": "ZN", "33493": "TS", "33507": "QJ", "33540": "QJ", "33544": "ZC", "33564": "XQ", "33617": "YT", "33632": "QJ", "33636": "XH", "33637": "YX", "33694": "WG", "33705": "PF", "33728": "YW", "33882": "SR", "34067": "WM", "34074": "YW", "34121": "QJ", "34255": "ZC", "34259": "XL", "34425": "JH", "34430": "XH", "34485": "KH", "34503": "YS", "34532": "HG", "34552": "XS", "34558": "YE", "34593": "ZL", "34660": "YQ", "34892": "XH", "34928": "SC", "34999": "QJ", "35048": "PB", "35059": "SC", "35098": "ZC", "35203": "TQ", "35265": "JX", "35299": "JX", "35782": "SZ", "35828": "YS", "35830": "E", "35843": "TD", "35895": "YG", "35977": "MH", "36158": "JG", "36228": "QJ", "36426": "XQ", "36466": "DC", "36710": "JC", "36711": "ZYG", "36767": "PB", "36866": "SK", "36951": "YW", "37034": "YX", "37063": "XH", "37218": "ZC", "37325": "ZC", "38063": "PB", "38079": "TD", "38085": "QY", "38107": "DC", "38116": "TD", "38123": "YD", "38224": "HG", "38241": "XTC", "38271": "ZC", "38415": "YE", "38426": "KH", "38461": "YD", "38463": "AE", "38466": "PB", "38477": "XJ", "38518": "YT", "38551": "WK", "38585": "ZC", "38704": "XS", "38739": "LJ", "38761": "GJ", "38808": "SQ", "39048": "JG", "39049": "XJ", "39052": "HG", "39076": "CZ", "39271": "XT", "39534": "TD", "39552": "TD", "39584": "PB", "39647": "SB", "39730": "LG", "39748": "TPB", "40109": "ZQ", "40479": "ND", "40516": "HG", "40536": "HG", "40583": "QJ", "40765": "YQ", "40784": "QJ", "40840": "YK", "40863": "QJG" };
    //参数,中文字符串  
    //返回值:拼音首字母串数组  
    function makePy(str) {
        if (typeof (str) != "string")
            throw new Error(-1, "函数makePy需要字符串类型参数!");
        var arrResult = new Array(); //保存中间结果的数组  
        for (var i = 0, len = str.length; i < len; i++) {
            //获得unicode码  
            var ch = str.charAt(i);
            //检查该unicode码是否在处理范围之内,在则返回该码对映汉字的拼音首字母,不在则调用其它函数处理  
            arrResult.push(checkCh(ch));
        }
        //处理arrResult,返回所有可能的拼音首字母串数组  
        return mkRslt(arrResult);
    }
    function checkCh(ch) {
        var uni = ch.charCodeAt(0);
        //如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数  
        if (uni > 40869 || uni < 19968)
            return ch; //dealWithOthers(ch);  
        //检查是否是多音字,是按多音字处理,不是就直接在strChineseFirstPY字符串中找对应的首字母  
        return (oMultiDiff[uni] ? oMultiDiff[uni] : (strChineseFirstPY.charAt(uni - 19968)));
    }
    function mkRslt(arr) {
        var arrRslt = [""];
        for (var i = 0, len = arr.length; i < len; i++) {
            var str = arr[i];
            var strlen = str.length;
            if (strlen == 1) {
                for (var k = 0; k < arrRslt.length; k++) {
                    arrRslt[k] += str;
                }
            } else {
                var tmpArr = arrRslt.slice(0);
                arrRslt = [];
                for (k = 0; k < strlen; k++) {
                    //复制一个相同的arrRslt  
                    var tmp = tmpArr.slice(0);
                    //把当前字符str[k]添加到每个元素末尾  
                    for (var j = 0; j < tmp.length; j++) {
                        tmp[j] += str.charAt(k);
                    }
                    //把复制并修改后的数组连接到arrRslt上  
                    arrRslt = arrRslt.concat(tmp);
                }
            }
        }
        return arrRslt;
    }

    return {
        makePy: makePy
    };
});
/**
*   首页
**/

define('view/contact/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/contact/tpl/index.html','view/app-header','view/app-menu','view/contact/detail','charFirst.pinyin'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/contact/tpl/index.html');
	var AppHeader = require('view/app-header');
	var AppMenu = require('view/app-menu');
	var ContactDetail = require('view/contact/detail');
    var CharFirstPinyin = require('charFirst.pinyin');

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap .contact-type': 'selectType',
			'tap .contact-company': 'selectCompany',
			'tap .contact-section': 'selectSection',
			'tap .contact-list-box': 'viewContactInfo',

			'tap .btn-contact-search': 'searchContactList',
			'tap #sectionListControl .btn-prev,#sectionListControl .btn-next': 'viewSectionPage'
		},
		asc_sort: function (aObj, bObj) {
			var a = aObj.name;
			var b = bObj.name;
			return CharFirstPinyin.makePy(b)[0].charAt(0).toUpperCase() < CharFirstPinyin.makePy(a)[0].charAt(0).toUpperCase() ? 1 : -1;
		},
		renderNav: function () {
			var str = '联系人>';
			// if (this.nav.length && this.nav[this.nav.length - 1].floor == -1) {
			// 	str += ' 搜索>';
			// } else {
			// 	_.each(this.nav, function (v) {
			// 		str += ' ' + v.navStr + '>';
			// 	});
			// }

			_.each(this.nav, function (v) {
				str += ' ' + v.navStr + '>';
			});

			this.$('.nav').html(str);

			if (this.nav.length >= 1) {
				this.$('.left-button').show();
			} else {
				this.$('.left-button').hide();
			}
		},
		renderFloor: function () {
			console.log(this.nav);

			if (!this.nav.length) {
				this.type = '';
				this.typeStr = '';
				this.companyStr = '';
				this.sectionStr = '';

				this.$listContent.html(this.typeListTemplate);
				this.renderNav();
			} else {
				var last = this.nav.length - 1;
				var nav = this.nav[last];

				switch (nav.floor) {
					case 1:
						//获取公司列表
						this.type = nav.type;
						this.typeStr = nav.typeStr;
						this.companyStr = '';
						this.sectionStr = '';

						this.getCompanyList();
						this.renderNav();
						break;
					case 2:
						//获取部门列表
						this.type = nav.type;
						this.typeStr = nav.typeStr;
						this.companyStr = nav.companyStr;
						this.sectionStr = '';

						this.getSectionList(1);
						this.renderNav();
						break;
					case 3:
						//获取联系人列表
						this.type = nav.type;
						this.typeStr = nav.typeStr;
						this.companyStr = nav.companyStr;
						this.sectionStr = nav.sectionStr;

						this.getContactList($.noop);
						this.renderNav();
						break;
					case -1:
						break;
				}
			}
		},
		/**
		 * 查看联系人详情
		 */
		viewContactInfo: function (e) {
			var $e = $(e.currentTarget);
			var view = new ContactDetail($e.data());
			view.show();
		},
		/**
		 * 搜索联系人
		 */
		searchContactList: function () {
			var search = $.trim(this.$('.input-contact-search').val());

			if (!search) {
				return;
			}

			if (!isNaN(search) && search % 1 === 0) {
				//正整数
				if (utils.getStrBytesLength(search) < 3) {
					$.jtoast('请至少输入3位数字搜索');
					return;
				}
			} else {
				//字符串
				// if (utils.getStrBytesLength(search) < 2) {
				// 	$.jtoast('请至少输入1个汉字搜索');
				// 	return;
				// }
			}

			if (!this.nav.length || this.nav[this.nav.length - 1].floor > -1) {
				this.nav.push({
					type: this.type,
					typeStr: this.typeStr,
					companyStr: '',
					sectionStr: '',
					navStr: '搜索',
					floor: -1
				});
			}

			this.renderNav();
			this.search = search;

			this.getContactList(_.bind(function () {
				//清空搜索项
				this.$('.input-contact-search').val('');
				this.search = '';
			}, this));
		},
		/**
		 * 获取联系人列表
		 */
		selectSection: function (e) {
			this.sectionStr = $(e.currentTarget).data('sectionstr');
			if (!this.sectionStr) {
				return;
			}

			this.nav.push({
				type: this.type,
				typeStr: this.typeStr,
				companyStr: this.companyStr,
				sectionStr: this.sectionStr,
				navStr: this.sectionStr,
				floor: 3
			});

			this.renderNav();
			this.getContactList($.noop);
		},
		getContactList: function (callback) {
			$.showLoading();
			businessDelegate.getContactUserList({
				type: this.type,
				company: this.companyStr,
				section: this.sectionStr,
				name: this.search,
			}, _.bind(function (data) {
				$.hideLoading();

				var list = data.obj;
				list.sort(this.asc_sort);

				var obj = {};

				var _h;
				_.each(list, function (v) {
					var h = CharFirstPinyin.makePy(v.name)[0].charAt(0).toUpperCase();

					if (h != _h) {
						obj[h] = [v];
						_h = h;
					} else {
						obj[_h].push(v);
					}
				});

				console.log(obj);

				var tpl = _.template(this.contactListTemplate)({ obj: obj });

				this.$listContent.html(tpl);

				this.$listContent.scrollTop(0);

				callback();
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.$listContent.html(this.errorHTML);
			}, this));
		},
		/**
		 * 获取部门列表
		 */
		selectCompany: function (e) {
			this.companyStr = $(e.currentTarget).data('companystr');
			if (!this.companyStr) {
				return;
			}

			this.nav.push({
				type: this.type,
				typeStr: this.typeStr,
				companyStr: this.companyStr,
				sectionStr: '',
				navStr: this.companyStr,
				floor: 2
			});

			this.renderNav();
			this.getSectionList(1);
		},
		viewSectionPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getSectionList(page);
		},
		getSectionList: function (page) {
			$.showLoading();
			businessDelegate.getContactSectionList({
				type: this.type,
				company: this.companyStr,
				page: page,
				rows: this.rows
			}, _.bind(function (data) {
				$.hideLoading();

				var tpl = _.template(this.sectionListTemplate)({ data: data.obj });

				this.$listContent.html(tpl);

				this.$listContent.scrollTop(0);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.$listContent.html(this.errorHTML);
			}, this));
		},
		/**
		 * 获取公司列表
		 */
		selectType: function (e) {
			this.type = $(e.currentTarget).data('type');

			if (!this.type) {
				return;
			}

			this.typeStr = $(e.currentTarget).data('typestr');

			this.nav.push({
				type: this.type,
				typeStr: this.typeStr,
				companyStr: '',
				sectionStr: '',
				floor: 1,
				navStr: this.typeStr,
			});

			this.renderNav();
			this.getCompanyList();
		},
		getCompanyList: function () {
			$.showLoading();
			businessDelegate.getContactCompanyList({
				type: this.type
			}, _.bind(function (data) {
				$.hideLoading();

				var tpl = _.template(this.companyListTemplate)({ list: data.obj });

				this.$listContent.html(tpl);

				this.$listContent.scrollTop(0);

			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				this.$listContent.html(this.errorHTML);
			}, this));
		},
		backbutton: function () {
			if (!this.nav.length) {
				Backbone.history.navigate('index', { trigger: true });
			} else {
				this.nav.pop();
				this.renderFloor();
			}
		},
		initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: false,
				title: '联系人'
            });

			this.menu = new AppMenu({
				index: 3
			});

            this.$el.empty().append(this.header.$el).append(template).append(this.menu.$el);

			this.$('.left-button').hide();

			this.typeListTemplate = this.$('#typeList').html();
			this.companyListTemplate = this.$('#companyList').html();
			this.sectionListTemplate = this.$('#sectionList').html();
			this.contactListTemplate = this.$('#contactList').html();

			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			this.$listContent = this.$('.contact-list-wrapper');

			this.type = '';
			this.typeStr = '';
			this.companyStr = '';
			this.searchStr = '';
			this.nav = [];
			this.rows = 500;

			/**
			 * 测试数据
			 */
			// this.nav = [
			// 	{
			// 		type: 2,
			// 		typeStr: '渠道',
			// 		floor: 1,
			// 		navStr: '渠道',
			// 	},
			// 	{
			// 		type: 2,
			// 		typeStr: '渠道',
			// 		companyStr: '韶山',
			// 		floor: 2,
			// 		navStr: '韶山',
			// 	},
			// 	{
			// 		type: 2,
			// 		typeStr: '渠道',
			// 		companyStr: '韶山',
			// 		floor: 3,
			// 		navStr: '竹鸡营业厅',
			// 		sectionStr: '竹鸡营业厅'
			// 	}
			// ];

			// this.renderFloor();

			// this.$('.input-contact-search').val(139);
			// this.searchContactList();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/my_customer/tpl/index.html',[],function () { return '<div class="common-content bg-gray" id="my-customer" style="top: 0px;">\r\n    <div class="header" style="height: 185px;">\r\n        <div class="headerContent" style="top: 185px;font-size: 1.2em;text-align: center;height: 45px;line-height: 45px;">\r\n            <div class="left-button btn-back">\r\n                <i class="iconfont icon-guanbi"></i>\r\n            </div>\r\n            我的客户\r\n        </div>\r\n        <div class="tableContent">\r\n            <table class="header_table table">\r\n                <tr>\r\n                    <td colspan="2">\r\n                        <img src="app_img/noavatar.png">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan="2">\r\n                        ----\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan="2">\r\n                        -----------\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td width="50%">\r\n                        <div class="info">\r\n                            <div class="bold">所属营业厅\r\n                                <div class="angle"></div>\r\n                            </div>\r\n                            <div class="list unactive">\r\n                                -----\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td width="50%">\r\n                        <div class="info">\r\n                            <div class="bold">所属部门</div>\r\n                            <p>-----</p>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="content" style="top: 185px;">\r\n        <div class="content-header">\r\n        </div>\r\n\r\n        <div class="content-nav weui-row">\r\n        </div>\r\n\r\n        <div class="content-content">\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<script id="userInfoTpl" type="text/template">\r\n    <table class="header_table table">\r\n        <tr>\r\n            <td colspan="2">\r\n                <% if(headImgUrl){ %>\r\n                    <img src="<%=headImgUrl%>">\r\n                <% }else{ %>\r\n                    <img src="app_img/noavatar.png">\r\n                <% } %>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan="2">\r\n                <%=name%>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan="2">\r\n                <%=mobile%>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="50%">\r\n                <div class="info">\r\n                    <div class="bold">所属营业厅\r\n                        <div class="angle"></div>\r\n                    </div>\r\n                    <div class="list unactive channel-list">\r\n                        <% if(title){ %>\r\n                            <%\r\n                                var arr = title.split(\',\');\r\n                            %>\r\n\r\n                            <% _.each(arr, function(v){ %>\r\n                                <p><%=v%></p>\r\n                            <% }) %>\r\n                        <% }else{ %>\r\n                            -\r\n                        <% } %>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td width="50%">\r\n                <div class="info">\r\n                    <div class="bold">所属部门</div>\r\n                    <p><%=company%></p>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</script>\r\n\r\n<script id="missionSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-mission-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-mission-search" placeholder="请输入关键字搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n\r\n<script id="fixtureSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-fixture-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-fixture-search" placeholder="请输入电话号码搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n<script id="paySelectInitTpl" type="text/template">\r\n    <select class="form-select form-control">\r\n        <option value="">无</option>\r\n    </select>\r\n</script>\r\n\r\n<script id="paySelectTpl" type="text/template">\r\n    <select class="form-select form-control">\r\n        <% _.each(list, function(v,i){ %>\r\n            <% if(i == 0){ %>\r\n                <option value="<%=v.uuid%>" selected><%=v.title%></option>\r\n            <% }else{ %>\r\n                <option value="<%=v.uuid%>"><%=v.title%></option>\r\n            <% } %>\r\n        <% }) %>\r\n    </select>\r\n</script>\r\n\r\n<script id="customUserItem" type="text/template">\r\n    <div class=\'customerItems\'>\r\n        <% _.each(list, function(v,i){ \r\n        var telNum = v.customerMobile.substring(0,3) + "****" + v.customerMobile.substring(7,12)\r\n        %>\r\n        <div class=\'customerItem\'>\r\n            <div class="infoContainer"  data-link=\'my-ustomer-detail/my-customer/work\'  data-uuid="<%=v.uuid%>">\r\n                <span  class=\'zhinfo\'>电话号码： </span>\r\n                <span class=\'telno\'><%=telNum%></span>\r\n            </div>\r\n        <div>\r\n        <% }) %>\r\n    </div>\r\n</script>\r\n\r\n<script id="customUserDetail" type="text/template">\r\n    <div class=\'customerDetail\'>\r\n       用户详情。。。\r\n    </div>\r\n</script>';});


define('text!view/my_customer/tpl/_mission-list.html',[],function () { return '<div id="missionListContent" class="nav-wrapper">\r\n    <div class="refresh_inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="list-warning">\r\n            搜索结果如下，点此查看全部\r\n        </div>\r\n\r\n        <div class="mission_wrapper"></div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n<%\r\n    if(data.rows.length == 0){\r\n%>\r\n    <div class="warning-panel">暂无数据</div>\r\n<%   \r\n    }\r\n%>\r\n\r\n<%\r\n    _.each(data.rows,function(v,i){\r\n        var link = \'detail\';\r\n        if(v.signStatus){\r\n            link = \'list\';\r\n        }\r\n%>\r\n<div class="mission_box" data-link="<%=link%>" data-uuid="<%=v.uuid%>">\r\n    <h3><%=v.title%></h3>\r\n    <p>派发时间：<%=v.beginTime.substr(0, 16)%></p>\r\n    <p>完成时限：<%=v.endTime.substr(0, 16)%></p>\r\n    <p>客户数：<%=v.targetCont%></p>\r\n\r\n    <% if(v.signStatus){ %>\r\n        <div class="text">已签收</div>\r\n    <% }else{ %>\r\n        <div class="btn btn-accept" data-uuid="<%=v.uuid%>">签收任务</div>\r\n    <% } %>\r\n</div>\r\n<%\r\n    });\r\n%>\r\n\r\n<% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n    <div class="list-control weui-row">\r\n        <%\r\n            var prevAttr = \'\',nextAttr = \'\'; \r\n            \r\n            if(!data.hasPreviousPage){\r\n                prevAttr = \'disabled\';\r\n            } \r\n            \r\n            if(!data.hasNextPage){\r\n                nextAttr = \'disabled\';\r\n            } \r\n        %> \r\n        <div class="weui-col-40">\r\n            <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n        </div>\r\n        <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n        <div class="weui-col-40">\r\n            <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n        </div>\r\n    </div>\r\n<% } %>\r\n\r\n</script>';});

/**
 *  营销首页-任务列表
 */

define('view/my_customer/mission-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_mission-list.html','view/online_marketing/mission-detail','view/online_marketing/mission-service'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/online_marketing/tpl/_mission-list.html');

    var MissionDetail = require('view/online_marketing/mission-detail');
    var MissionService = require('view/online_marketing/mission-service');

    var View = Backbone.View.extend({
        el: '.content-content',
        events: {
            'tap #missionListContent .list-warning': 'initList',
            'tap #missionListContent .btn-prev,.btn-next': 'viewPage',
            'tap #missionListContent .btn-accept': 'signMission',
            'tap #missionListContent .mission_box': 'viewDetail'
        },
        viewDetail: function (e) {
            var $e = $(e.currentTarget);
            var link = $e.data('link');
            var uuid = $e.data('uuid');

            if(link == 'detail'){
                var view = new MissionDetail({
                    sign: false,
                    uuid: uuid
                });
                view.show();
            }else if(link == 'list'){
                var view = new MissionService({
                    uuid: uuid
                });
                view.show();
            }
        },
		/**
         * 签收
         */
        signMission: function (e) {
            var $e = $(e.currentTarget);
            var uuid = $e.data('uuid');

            $.showLoading();
            businessDelegate.signMission({
                uuid: uuid
            }, _.bind(function (data) {
                $.hideLoading();
                $.toast('签收成功');

                this.getList(this.current_page, $.noop);
            }, this), _.bind(function (err) {
                $.jtoast(err);
                $.hideLoading();
            }, this));

            return false;
        },
        /**
         * 列表操作
         */
        searchByKeyword: function ($input) {
            this.$input = $input;

            if (!this.data) {
                return;
            }

            this.search_keyword = '';
            var keyword = $.trim(this.$input.val());
            if (!keyword) {
                return;
            }

            this.search_keyword = keyword;

            this.$warning.show();
            this.getList(1, $.noop);
        },
        initList: function () {
            this.$warning.hide();
            this.$input.val('');
            this.search_keyword = '';	//搜索关键字

            this.getList(1, $.noop);
        },
        viewPage: function (e) {
            var page = $(e.currentTarget).data('page');
            this.getList(page, $.noop);
        },
        getList: function (page, callback) {
            this.current_page = page;

            if (!this.isPullRefresh) {
                this.$listContent.empty();
                $.showLoading();
            } else {
                this.isPullRefresh = 0;
            }

            businessDelegate.getMissionList({
                page: this.current_page,
                rows: this.rows,
                title: this.search_keyword
            }, _.bind(function (data) {
                this.data = data.obj;

                var tpl = _.template(this.listTemplate)({ data: data.obj });
                this.$listContent.html(tpl);

                this.$listWrapper.scrollTop(0);
                if (!this.isPullRefresh) {
                    $.hideLoading();
                }

                callback();
            }, this), _.bind(function (err) {
                this.$listContent.html(this.errorHTML);
                $.jtoast(err);
                if (!this.isPullRefresh) {
                    $.hideLoading();
                }

                callback();
            }, this));
        },
        initialize: function () {
            if (!window.user.taskSing) {
                this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
            }

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#missionListContent > div');
            this.$listContent = this.$('.mission_wrapper');
            this.listTemplate = this.$('#listTpl').html();
            this.$warning = this.$('.list-warning');
            this.$input;

            this.current_page = 1;	//当前页
            this.rows = 10; //每页显示数目

            this.data = null;	//当前内容
            this.search_keyword = ''; //搜索关键字

            this.isPullRefresh = 0;
            this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

            //下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
        },
        render: function () {
            return this;
        }
    });

    return View;
});

/**
 * 常客查询
 */

define('view/my_customer/fixture-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_fixture-list.html','view/online_marketing/fixture-detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/_fixture-list.html');
    var Detail = require('view/online_marketing/fixture-detail');

	var View = Backbone.View.extend({
		el: '.content-content',
        events: {
            'tap #fixtureListContent .list-warning': 'initList',
            'tap #fixtureListContent .btn-prev,.btn-next': 'viewPage',
            'tap .fixture_box > li': 'viewDetail'
		},
        viewDetail: function(e){
            var uuid = $(e.currentTarget).data('uuid');
            var view = new Detail({
                uuid: uuid
            });
            view.show();
        },
		searchByKeyword: function ($input) {
            this.$input = $input;

			if(!this.data){
				return;
			}

			this.search_keyword = '';
			var keyword = $.trim(this.$input.val());
			if (!keyword) {
				return;
			}

			this.search_keyword = keyword;

			this.$warning.show();
			this.getList(1, $.noop);
		},
		initList: function () {
			this.$warning.hide();
			this.$input.val('');
			this.search_keyword = '';	//搜索关键字

			this.getList(1, $.noop);
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
		getList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getMarketingFixtureList({
				page: this.current_page,
				rows: this.rows,
				mobile: this.search_keyword
			}, _.bind(function (data) {
				this.data = data.obj;

				var tpl = _.template(this.listTemplate)({ data: data.obj });
				this.$listContent.html(tpl);

				this.$listWrapper.scrollTop(0);
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this), _.bind(function (err) {
				this.$listContent.html(this.errorHTML);
				$.jtoast(err);
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this));
		},
		initialize: function () {
			if(!window.user.regularVisitors){
				this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
			}

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#fixtureListContent > div');
			this.$listContent = this.$('.fixture_wrapper');
			this.listTemplate = this.$('#listTpl').html();
			this.$warning = this.$('.list-warning');
			this.$input;

			this.current_page = 1;	//当前页
			this.rows = 10; //每页显示数目

			this.data = null;	//当前内容
			this.search_keyword = ''; //搜索关键字

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 常客查询
 */

define('view/my_customer/pay-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_pay-list.html','view/online_marketing/pay-detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/_pay-list.html');
    var Detail = require('view/online_marketing/pay-detail');

	var View = Backbone.View.extend({
		el: '.content-content',
        events: {
            'tap .pay_box > li': 'viewDetail'
		},
        viewDetail: function(e){
            var uuid = $(e.currentTarget).data('uuid');
            var view = new Detail({
                uuid: uuid
            });
            view.show();
        },
		getMonth: function (callback) {
			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getMarketingPayMonthByChannel({
				uuid: this.options.uuid
			}, _.bind(function (data) {
				var tpl = _.template(this.listTemplate)({ list: data.obj });
				this.$listContent.html(tpl);
				this.$listWrapper.scrollTop(0);

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this), _.bind(function (err) {
				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this));
		},
		initialize: function (options) {
            this.options = options;

			if(!window.user.queryFee){
				this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
			}

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#payListContent > div');
			this.$listContent = this.$('.pay_wrapper');
			this.listTemplate = this.$('#listTpl').html();

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getMonth(_.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getMonth($.noop);
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/my_customer/tpl/detail.html',[],function () { return '<div class="common-content" id="customerDetail">\r\n    \r\n</div>\r\n<script id="myCustomerDetail" type="text/template">\r\n    <div class="telInfo">\r\n        <span class="_tel">号码： </span>\r\n        <span class="_telNum color-blue"><%=data.customerMobile.substring(0,3) + "****" + data.customerMobile.substring(7,12)%></span>\r\n        <span class="msgPic" data-phone="<%=data.customerMobile%>"></span>\r\n        <span class="phonePic" data-phone="<%=data.customerMobile%>"></span>\r\n        <!-- <a class="phonePic" href="tel:<%=data.customerMobile%>"/> -->\r\n    </div>\r\n    <div class="morDetail">\r\n        <div class="_info" style="background: rgb(16 , 187 ,243);color: #fff;">\r\n            <span class="zhInfo">客户星级：</span>\r\n            <span class="val" style="padding-left: 5px;"><%=data.customerLevel%>星</span>\r\n        </div>\r\n        <div class="more-info">\r\n            <div class="_info">\r\n                <span class="zhInfo">集团类别：</span>\r\n                <span class="val"><%=data.areas%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">集团名称：</span>\r\n                <span class="val"><%=data.title%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">客户属性：</span>\r\n                <span class="val"><%=data.customerAttribute%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">客户机龄：</span>\r\n                <span class="val color-blue"><%=data.customerPhoneAge%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">在网时长：</span>\r\n                <span class="val color-blue"><%=data.onlineTime%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">归属网点：</span>\r\n                <span class="val color-blue"><%=data.channelUUID %></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">当前状态：</span>\r\n                <span class="val"><%=data.customerStatus%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">主套餐：</span>\r\n                <span class="val"><%=data.mainPackage%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">流量套餐</span>\r\n                <span class="val"><%=data.flowPackage%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">月均消费：</span>\r\n                <span class="val"><%=data.costFeeMonth%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">月均通话时长：</span>\r\n                <span class="val color-blue"><%=data.phoneTimeMonth%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">月均流量：</span>\r\n                <span class="val color-blue"><%=data.flowMonth%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">是否风险：</span>\r\n                <span class="val color-blue"><%=data.isRiskCustomer%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">是否宽带：</span>\r\n                <span class="val"><%=data.isInternetCustomer%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">是否双卡终端：</span>\r\n                <span class="val"><%=data.isTwoSimTerm%></span>\r\n            </div>\r\n            <div class="_info">\r\n                <span class="zhInfo">是最高套餐档次：</span>\r\n                <span class="val"><%=data.topPackage%></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</script>';});

/**
*   基础页面定义
**/

define('view/my_customer/detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/my_customer/tpl/detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
	var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/my_customer/tpl/detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
		events: {
			"tap .phonePic": "callphone",
			"tap .msgPic": "sendMsg"
		},
		sendMsg: function (e) {
			var number = $(e.currentTarget).data("phone");
			phonegaputil.sendSMS([number], "", _.bind(function () {
			}, this), function (err) {
				console.log(err);
				$.jtoast('跳转失败请重试');
			});
		},
		callphone: function (e) {
			var number = $(e.currentTarget).data("phone");
			//addCallNumber
			var queryObj = {
				customerMobile: "" + number
			}
			businessDelegate.addCallNumber(queryObj, _.bind(function (data) {

			}, this), _.bind(function (err) {
				// callback();
			}, this));
			window.location.href = "tel:" + number;
			// if (device.platform == 'iOS') {
			// 	window.plugins.CallNumber.callNumber(function () {
			// 		console.log("success");
			// 	}, function (err) {
			// 		console.log("error");
			// 		console.log(err);
			// 	}, number);
			// } else if (device.platform == 'Android') {
			// 	window.location.href = "tel:" + number;
			// }
		},
		initPage: function (uuid) {
			businessDelegate.getMarketingFixtureDetail({
				uuid: uuid
			}, _.bind(function (data) {
				this.detailTemplate = this.$("#myCustomerDetail").html();
				var tpl = _.template(this.detailTemplate)({ data: data.obj });
				// var tpl = _.template(this.userTemplate)({ data: data.obj });
				this.$("#customerDetail").empty();
				this.$("#customerDetail").html(tpl);
				// callback();
			}, this), _.bind(function (err) {
				// callback();
			}, this));
		},
		initialize: function (options) {
			this.header = new AppHeader({
				host: this,
				main: false, //是否主页面
				title: "客户详情"
			});
			var uuid = options.uuid;
			this.detailTemplate = this.$("#myCustomerDetail").html();
			this.initPage(uuid);
			this.$el.empty().append(this.header.$el).append(template);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销首页
 */

define('view/my_customer/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/my_customer/tpl/index.html','text!view/my_customer/tpl/_mission-list.html','view/app-header','view/my_customer/mission-list','view/my_customer/fixture-list','view/my_customer/pay-list','view/my_customer/detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
	var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/my_customer/tpl/index.html');
	var missionListTemplate = require('text!view/my_customer/tpl/_mission-list.html');

	var AppHeader = require('view/app-header');
	var MissionList = require('view/my_customer/mission-list');
	var FixtureList = require('view/my_customer/fixture-list');
	var PayList = require('view/my_customer/pay-list');
	var DetailView = require("view/my_customer/detail");

	var View = Backbone.View.extend({
		el: 'body',
		events: {
			'tap .header_table .info': 'showAllInfoList',
			'tap .content-nav > div': 'selectNav',
			'tap .btn-mission-search': 'missionSearch',
			'tap .btn-fixture-search': 'fixtureSearch',
			'change .form-select': 'renderPayList',
			'tap .infoContainer': 'toCustomerDetail',
			"tap .btn.btn-primary.btn-mission-search": "getSearchKey",
			'tap .headerContent .btn-back': 'backbutton',
			'tap .channel-list>p': 'changeChannel'
		},
		changeChannel: function (e) {
			var uuid = $(e.currentTarget).data("uuid");
			this.customerChannelUuid = uuid;
			var $parent = $(e.currentTarget).parent();
			$(e.currentTarget).remove();
			$parent.prepend(e.currentTarget);
			this.renderNav();
		},
		backbutton: function () {
			this.host.backbutton();
		},
		toCustomerDetail: function (e) {
			var uuid = $(e.currentTarget).data("uuid");
			var view = new DetailView({
				uuid: uuid
			});
			view.show();
			return;
		},
		getSearchKey: function () {
			var $input = this.$('.input-fixture-search');
			debugger;
			this.search_keyword = $input.val();
			this.fixtureList.renderNav();
		},
		missionSearch: function () {
			var $input = this.$('.input-mission-search');
			this.missionList.searchByKeyword($input);
		},
		selectNav: function (e) {
			var $e = $(e.currentTarget);

			if ($e.hasClass('active')) {
				return;
			}

			this.$('.content-nav > div').removeClass('active');
			$e.addClass('active');

			var type = $e.data('type');
			this.renderNav(type);
		},
		renderNav: function () {
			this.$('.content-content').empty();
			businessDelegate.getMarketingFixtureList({
				page: this.current_page,
				rows: this.rows,
				customerMobile: window.user.mobile,
				customerChannelUuid : this.customerChannelUuid
			}, _.bind(function (data) {

				var tpl = _.template(this.myCustomerItemTemplate)({ list: data.obj.rows });
				// var tpl = _.template(this.userTemplate)({ data: data.obj });
				this.$(".index-banner .swiper-wrapper .person-info").empty();
				this.$(".index-banner .swiper-wrapper .person-info").html(tpl);
				this.$('.content-content').html(tpl);
				this.getChannelList();
			}, this), _.bind(function (err) {
			}, this));

		},
		getPaySelect: function () {
			$.showLoading();
			businessDelegate.getMarketingChannel(_.bind(function (data) {
				$.hideLoading();

				if (data.obj.length == 0) {
					return;
				}

				var tpl = _.template(this.paySelectTemplate)({ list: data.obj });
				this.$('.content-header').html(tpl);

				this.renderPayList();
			}, this), _.bind(function (err) {
				$.jtoast(err);
				$.hideLoading();

				this.renderPayList();
			}, this));
		},
		renderPayList: function () {
			var uuid = $('.form-select').val();

			if (!this.PayList) {
				this.PayList = new PayList({
					uuid: uuid
				});
			} else {
				this.PayList.initialize({
					uuid: uuid
				});
			}

		},
		renderUserInfoView: function () {
			$.showLoading();
			businessDelegate.getMarketingPermission(_.bind(function (data) {
				$.hideLoading();
				var tpl = _.template(this.userInfoTemplate)(data.obj);
				this.$('.header .tableContent').html(tpl);

				window.user.regularVisitors = data.obj.regularVisitors;	//获取常客查询权限
				window.user.taskSing = data.obj.taskSing;	//获取任务查询权限
				window.user.backfillTask = data.obj.backfillTask;	//获取任务回填权限
				window.user.queryFee = data.obj.queryFee;	//获取酬金查询权限
				this.renderNav(1);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);

				this.renderNav(1);
			}, this));
		},
		getChannelList: function () {
			if (this.hasInitClannelList) {
				return;
			}
			businessDelegate.getMarketingChannel(_.bind(function (data) {
				this.hasInitClannelList = true;
				var html = '<p data-uuid="">全部</p>';
				for (var i = 0; i < data.obj.length; i++) {
					html += '<p data-uuid="' + data.obj[i].uuid + '">' + data.obj[i].title + '</p>';
				}
				this.$(".channel-list").empty();
				this.$(".channel-list").html(html);

			}, this), _.bind(function (err) {
			}, this));
		},
		showAllInfoList: function (e) {
			var $e = $(e.currentTarget);
			if ($e.find('.list').hasClass('unactive')) {
				$e.find('.list').removeClass('unactive').addClass('active');
			} else {
				$e.find('.list').removeClass('active').addClass('unactive');
			}
		},
		showList: function () {

		},
		backbutton: function () {
			Backbone.history.navigate(this.history, { trigger: true });
		},
		initialize: function (options) {
			//this.history = options.history;
			this.history = window._pageHistory ? window._pageHistory : "work/index";
			window._pageHistory = "";
			this.header = new AppHeader({
				host: this,
				main: false, //是否主页面
				title: '我的客户'
			});
			// this.$el.empty().append(this.header.$el).append(template);
			this.$el.empty().append(template);
			this.userInfoTemplate = this.$('#userInfoTpl').html();
			this.missionSearchTemplate = this.$('#missionSearchTpl').html();
			this.$('.content-header').html(this.missionSearchTemplate);
			this.fixtureSearchTemplate = this.$('#fixtureSearchTpl').html();
			this.paySelectInitTemplate = this.$('#paySelectInitTpl').html();
			this.paySelectTemplate = this.$('#paySelectTpl').html();
			this.myCustomerItemTemplate = this.$("#customUserItem").html();

			this.search_keyword = "";
			this.current_page = 0;	//当前页
			this.rows = 100; //每页显示数目
			//渲染用户信息
			this.renderUserInfoView();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/queryRemuneration/tpl/index.html',[],function () { return '<div class="common-content bg-gray" id="query-remuneration" style="top: 0px;">\r\n    <div class="header" style="height: 185px;">\r\n        <div class="headerContent" style="top: 185px;font-size: 1.2em;text-align: center;height: 45px;line-height: 45px;">\r\n            <div class="left-button btn-back">\r\n                <i class="iconfont icon-guanbi"></i>\r\n            </div>\r\n            酬金查询\r\n            <div class="right-button">\r\n                <div class="morePage" style="margin-right: 5px;">\r\n                    <div class="ellipsePng">\r\n                        <img src="app_img/ellipse.png" alt="">\r\n                    </div>\r\n                    <div class="queryByType hide" style="background-color: rgb(44 ,154 ,244);">\r\n                        <div data-type="1">营业厅</div>\r\n                        <div data-type="2">月份</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="tableContent">\r\n            <table class="header_table table">\r\n                <tr>\r\n                    <td colspan="2">\r\n                        <img src="app_img/noavatar.png">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan="2">\r\n                        ----\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan="2">\r\n                        -----------\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td width="50%">\r\n                        <div class="info">\r\n                            <div class="bold">所属营业厅\r\n                                <div class="angle"></div>\r\n                            </div>\r\n                            <div class="list unactive">\r\n                                -----\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td width="50%">\r\n                        <div class="info">\r\n                            <div class="bold">所属部门</div>\r\n                            <p>-----</p>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="content" style="top: 185px;">\r\n        <div class="content-header">\r\n        </div>\r\n\r\n        <div class="content-nav weui-row">\r\n        </div>\r\n\r\n        <div class="content-content">\r\n            <div class=\'list\'></div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<script id="userInfoTpl" type="text/template">\r\n    <table class="header_table table">\r\n        <tr>\r\n            <td colspan="2">\r\n                <% if(headImgUrl){ %>\r\n                    <img src="<%=headImgUrl%>">\r\n                <% }else{ %>\r\n                    <img src="app_img/noavatar.png">\r\n                <% } %>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan="2">\r\n                <%=name%>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan="2">\r\n                <%=mobile%>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="50%">\r\n                <div class="info">\r\n                    <div class="bold">所属营业厅\r\n                        <div class="angle"></div>\r\n                    </div>\r\n                    <div class="list unactive channel-list">\r\n                        <% if(title){ %>\r\n                            <%\r\n                                var arr = title.split(\',\');\r\n                            %>\r\n\r\n                            <% _.each(arr, function(v){ %>\r\n                                <p><%=v%></p>\r\n                            <% }) %>\r\n                        <% }else{ %>\r\n                            -\r\n                        <% } %>\r\n                    </div>\r\n                    <!-- <div class="list unactive">\r\n                        <% if(title){ %>\r\n                            <%\r\n                                var arr = title.split(\',\');\r\n                            %>\r\n\r\n                            <% _.each(arr, function(v){ %>\r\n                                <p><%=v%></p>\r\n                            <% }) %>\r\n                        <% }else{ %>\r\n                            -\r\n                        <% } %>\r\n                    </div> -->\r\n                </div>\r\n            </td>\r\n            <td width="50%">\r\n                <div class="info">\r\n                    <div class="bold">所属部门</div>\r\n                    <p><%=company%></p>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</script>\r\n\r\n<script id="missionSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-mission-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-mission-search" placeholder="请输入关键字搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n\r\n<script id="fixtureSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-fixture-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-fixture-search" placeholder="请输入电话号码搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n<script id="paySelectInitTpl" type="text/template">\r\n    <select class="form-select form-control">\r\n        <option value="">无</option>\r\n    </select>\r\n</script>\r\n\r\n<script id="paySelectTpl" type="text/template">\r\n    <select class="form-select form-control">\r\n        <% _.each(list, function(v,i){ %>\r\n            <% if(i == 0){ %>\r\n                <option value="<%=v.uuid%>" selected><%=v.title%></option>\r\n            <% }else{ %>\r\n                <option value="<%=v.uuid%>"><%=v.title%></option>\r\n            <% } %>\r\n        <% }) %>\r\n    </select>\r\n</script>\r\n\r\n<script id="remunerationList" type="text/template">\r\n\r\n        <% _.each(list, function(v,i){ \r\n            var label ;\r\n            if("1"==type ){\r\n                label=v.dataMonth + \'月份\';\r\n            }else{\r\n                label = v.channelTitle\r\n            }\r\n        %>\r\n        <div class=\'listitem\' data-uuid="<%=v.uuid%>">\r\n            <div class="infoContainer"  data-link=\'my-ustomer-detail/my-customer/work\'>\r\n                <span  class=\'zhinfo\'><%=label%>：</span>\r\n                <span class=\'telno\'><%=v.emunerationSum%></span>\r\n            </div>\r\n        <div>\r\n        <% }) %>\r\n</script>';});


define('text!view/queryRemuneration/tpl/detail.html',[],function () { return '<div class="common-content" id="remunerationDetail">\r\n    \r\n</div>\r\n\r\n<script id="remDetailTemplate" type="text/template">\r\n    <div class="simpleInfo">\r\n        <div class="simpleInfo-title">概要</div>\r\n        <div class="simpleInfo-content">\r\n            <div class="infoItem">\r\n                <span class="_label">渠道名称 ：</span>\r\n                <span class="_val"><%=data.remuneration.channelTitle%></span>\r\n            </div>\r\n            <div class="infoItem">\r\n                <span class="_label">月份 ：</span>\r\n                <span class="_val"><%=data.remuneration.dataMonth%></span>\r\n            </div>\r\n            <div class="infoItem">\r\n                <span class="_label">总金额 ：</span>\r\n                <span class="_val"><%=data.remuneration.emunerationSum?data.remuneration.emunerationSum+\'.00\':\'\'%></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="detailInfo">\r\n        <div class="detailInfo-title">明细</div>\r\n        <div class="detailInfo-content">\r\n            <div class="detail-ruwang otherpading10">\r\n                <span class="_label forfirstBlock" style="font-weight: 700;">新入网套餐服务费 ：</span>\r\n                <span class="_val"><%=data.remuneration.newDiscFee?data.remuneration.newDiscFee+\'.00\':\'\'%></span>\r\n            </div>\r\n            <div class="detail-block">\r\n                <div class="detail-block-title">\r\n                    <span class="_title">宽带服务</span>\r\n                    <span class="showOrHide"></span>\r\n                </div>\r\n                <div class="detail-block-content">\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">有线宽带 ：</span>\r\n                        <span class="_val"><%=data.remuneration.wiredBroadband?(data.remuneration.wiredBroadband+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">宽带预存送费 ：</span>\r\n                        <span class="_val"><%=data.remuneration.cableBroadband?(data.remuneration.cableBroadband+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="otherpading10">\r\n                <span class="_label forfirstBlock" style="font-weight: 700;">非存量客户回归 ：</span>\r\n                <span class="_val"><%=data.remuneration.nonStockReturn?(data.remuneration.nonStockReturn+\'.00\'):\'\'%></span>\r\n            </div>\r\n            <div class="detail-block">\r\n                <div class="detail-block-title">\r\n                    <span class="_title">话费服务</span>\r\n                    <span class="showOrHide"></span>\r\n                </div>\r\n                <div class="detail-block-content">\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">代收话费 ：</span>\r\n                        <span class="_val"><%=data.remuneration.collectCalls?(data.remuneration.collectCalls+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">银行代收 ：</span>\r\n                        <span class="_val"><%=data.remuneration.bankCollect?(data.remuneration.bankCollect+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">空中充值 ：</span>\r\n                        <span class="_val"><%=data.remuneration.airRecharge?(data.remuneration.airRecharge+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">空中预充 ：</span>\r\n                        <span class="_val"><%=data.remuneration.airPreRecharge?(data.remuneration.airPreRecharge+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">充值卡 ：</span>\r\n                        <span class="_val"><%=data.remuneration.rechargeCard?(data.remuneration.rechargeCard+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">自助终端 ：</span>\r\n                        <span class="_val"><%=data.remuneration.selfServiceTerm?(data.remuneration.selfServiceTerm+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="detail-block">\r\n                <div class="detail-block-title">\r\n                    <span class="_title">4G客户转化服务</span>\r\n                    <span class="showOrHide"></span>\r\n                </div>\r\n                <div class="detail-block-content">\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">4G客户转化佣金 ：</span>\r\n                        <span class="_val"><%=data.remuneration.g4CustServiceFee?(data.remuneration.g4CustServiceFee+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_labe forSecondBlock">主推终端服务 ：</span>\r\n                        <span class="_val"><%=data.remuneration.g4TermService?(data.remuneration.g4TermService+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="detail-block">\r\n                <div class="detail-block-title">\r\n                    <span class="_title">存量维稳服务费</span>\r\n                    <span class="showOrHide"></span>\r\n                </div>\r\n                <div class="detail-block-content">\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">开户捆绑 ：</span>\r\n                        <span class="_val"><%=data.remuneration.openBind?(data.remuneration.openBind+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">存量捆绑服务 ：</span>\r\n                        <span class="_val"><%=data.remuneration.stockService?(data.remuneration.stockService+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">高额话费预存服务 ：</span>\r\n                        <span class="_val"><%=data.remuneration.largeFeePreService?(data.remuneration.largeFeePreService+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="detail-block">\r\n                <div class="detail-block-title">\r\n                    <span class="_title">集团单位稳定</span>\r\n                    <span class="showOrHide"></span>\r\n                </div>\r\n                <div class="detail-block-content">\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">家庭网新拉 ：</span>\r\n                        <span class="_val"><%=data.remuneration.homeNetInvite?(data.remuneration.homeNetInvite+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">小微企业服务费 ：</span>\r\n                        <span class="_val"><%=data.remuneration.smallEnterpriseServiceFee?(data.remuneration.smallEnterpriseServiceFee+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">家园校园网 ：</span>\r\n                        <span class="_val"><%=data.remuneration.homeSchoolNet?(data.remuneration.homeSchoolNet+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">家庭网 ：</span>\r\n                        <span class="_val"><%=data.remuneration.homeNet?(data.remuneration.homeNet+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                    <div class="infoItem">\r\n                        <span class="_label forSecondBlock">集团维稳服务 ：</span>\r\n                        <span class="_val"><%=data.remuneration.groupMaintenanceService?(data.remuneration.groupMaintenanceService+\'.00\'):\'\'%></span>\r\n                    </div><div class="infoItem">\r\n                        <span class="_label forSecondBlock">集团服务费 ：</span>\r\n                        <span class="_val"><%=data.remuneration.groupServiceFee?(data.remuneration.groupServiceFee+\'.00\'):\'\'%></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="otherpading10">\r\n                <span class="_label forfirstBlock" style="font-weight: 700;">语音产品办理 ：</span>\r\n                <span class="_val"><%=data.remuneration.voiceProductManagement%></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</script>';});

/**
*   基础页面定义
**/

define('view/queryRemuneration/detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/queryRemuneration/tpl/detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
	var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/queryRemuneration/tpl/detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
        events: {
			'tap span.showOrHide' : 'showOrHideBlock' 
		},
		showOrHideBlock: function(e){
			// var picSpan = this.$(".showOrHide") ;
			// for(var i = 0 ; i < picSpan.length ;i++){
			// 	$(picSpan[i]).hasClass();
			// }
			if($(e.currentTarget).hasClass("transform180")){//已经有这个样式了
				$(e.currentTarget).removeClass("transform180");
				$(e.currentTarget).parents(".detail-block-title").next().removeClass("displayNone");
				
			}else{
				$(e.currentTarget).addClass("transform180");
				$(e.currentTarget).parents(".detail-block-title").next().addClass("displayNone");
			}
		},
		initPage: function(){
			businessDelegate.getMarkRemunerationNewDetails({
				uuid: this.uuid 
			},_.bind(function (data) {
				var tpl = _.template(this.detailTemplate)({ data: data.obj });
				this.$('#remunerationDetail').empty();
				this.$('#remunerationDetail').html(tpl);
			}, this), _.bind(function (err) {
				this.$listContent.html(this.errorHTML);
				$.jtoast(err);
				$.hideLoading();
			}, this));
		},
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: "酬金详情"
			});
			this.$el.empty().append(this.header.$el).append(template);
			this.uuid = options.uuid ;
			this.detailTemplate = this.$("#remDetailTemplate").html();
			this.initPage();
			
			//getMarkRemunerationNewDetails
			

            // this.$el.empty().append(this.header.$el).append(template);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销首页
 */

define('view/queryRemuneration/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/queryRemuneration/tpl/index.html','text!view/my_customer/tpl/_mission-list.html','view/app-header','view/my_customer/mission-list','view/my_customer/fixture-list','view/my_customer/pay-list','view/queryRemuneration/detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
	var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/queryRemuneration/tpl/index.html');
	var missionListTemplate = require('text!view/my_customer/tpl/_mission-list.html');

	var AppHeader = require('view/app-header');
	var MissionList = require('view/my_customer/mission-list');
	var FixtureList = require('view/my_customer/fixture-list');
	var PayList = require('view/my_customer/pay-list');
	var DetailView = require("view/queryRemuneration/detail");

	var View = Backbone.View.extend({
		el: 'body',
		events: {
			'tap .header_table .info': 'showAllInfoList',
			'tap .content-nav > div': 'selectNav',
			'tap .btn-mission-search': 'missionSearch',
			'tap .btn-fixture-search': 'fixtureSearch',
			'change .form-select': 'renderPayList',
			'tap .listitem': 'toRemunerationDetail',
			'tap .ellipsePng': "changePageEllipse1",
			'tap .morePage .queryByType>div': "changePage",
			'tap .headerContent .btn-back': 'backbutton' ,
			'tap .channel-list>p': 'changeChannel'
		},
		changeChannel: function (e) {
			this.channelUUID = $(e.currentTarget).data("uuid");
			this.dateMonth = $(e.currentTarget).data("month");
			var $parent = $(e.currentTarget).parent();
			$(e.currentTarget).remove();
			$parent.prepend(e.currentTarget);
			this.getlistData();
		},
		backbutton: function () {
			this.host.backbutton();
		},
		changePageEllipse1: function(e) {
			var flag = $(e.currentTarget).next().hasClass("hide") ;
			if (flag) {
				$(e.currentTarget).next().removeClass("hide");
			} else {
				$(e.currentTarget).next().addClass("hide");
			}

		},
		changePage: function(e) {
			var type = this.$(e.currentTarget).data("type");
			this.pageType = type;
			this.$(e.currentTarget).parent().addClass("hide");
			this.getDataByType();
		},
		// changeChannel: function (e) {
		// 	this.channelUUID = $(e.currentTarget).val();
		// 	this.dateMonth = $(e.currentTarget).val();
		// 	// this.renderNav();
		// 	this.getlistData();
		// },
		toRemunerationDetail: function (e) {
			e.stopPropagation();
			// this.$(".common-header .right-button").addClass("hide");
			var uuid = $(e.currentTarget).data("uuid");
			var view = new DetailView({
				uuid: uuid
			});
			view.show();
			return;
		},
		fixtureSearch: function () {
			var $input = this.$('.input-fixture-search');
			this.fixtureList.searchByKeyword($input);
		},
		missionSearch: function () {
			var $input = this.$('.input-mission-search');
			this.missionList.searchByKeyword($input);
		},
		selectNav: function (e) {
			var $e = $(e.currentTarget);

			if ($e.hasClass('active')) {
				return;
			}

			this.$('.content-nav > div').removeClass('active');
			$e.addClass('active');

			var type = $e.data('type');
			this.renderNav(type);
		},
		renderNav: function (type) {
			this.$('.content-content').empty();
			var channelUUID = this.channelUUID ? this.channelUUID : this.$(".header_table.table .channel").val();
			var dateMonth = this.dateMonth;
			var queryObj = {};
			businessDelegate.getmarkRemunerationNewListByChannel(queryObj, _.bind(function (data) {
				var tpl = _.template(this.remunerationList)({ list: data.obj });
				this.$('.content-content').html(tpl);
			}, this), _.bind(function (err) {
				// callback();
			}, this));
			// var tpl = _.template(this.remunerationList)({ list : data }) ;
			// this.$('.content-content').html(tpl);
			// this.$('.content-content')[0].innerHTML = this.myCustomerItemTemplate ;
		},
		getDataByType: function () {//获取查询条件
			if ("1" == this.pageType) {//营业厅
				$("#query-remuneration .header_table tr:nth-child(3) td").text(window.user.mobile);
				businessDelegate.getMarketingChannel(_.bind(function (data) {
					// var html = '<p data-uuid="">全部</p>';
					var html = '';
					for (var i = 0; i < data.obj.length; i++) {
						html += '<p data-uuid="' + data.obj[i].uuid + '">' + data.obj[i].title + '</p>';
					}
					// this.getMonth($.noop);
					this.$(".header_table.table .channel-list").empty();
					this.$(".header_table.table .channel-list").html(html);
					if(window.user.queryFee){
						this.getlistData();
					}else{
						var htmlStr = "<div class='pemissionInfo'>对不起，您暂无权限查看此功能。</div>"
						this.$(".content-content .list").empty();
						this.$(".content-content .list").html(htmlStr);
					}
				}, this), _.bind(function (err) {
					this.$listContent.html(this.errorHTML);
					$.jtoast(err);
					$.hideLoading();
				}, this));
			} else {//yuefen
				$("#query-remuneration .header_table tr:nth-child(3) td").text(window.user.title);
				var options = "";
				for (var i = 1; i < 13; i++) {
					// options = options + '<option value="' + i + '">' + i + '月份</option>';
					options = options + '<p data-month="' + i + '">' + i + '月份</p>';
					
				}
				// this.getMonth($.noop);
				this.$(".header_table.table .channel-list").empty();
				this.$(".header_table.table .channel-list").html(options);
				this.getlistData();
			}
		},
		getlistData: function () {//获取列表数据
			var channelUUID = this.channelUUID?this.channelUUID:$("#query-remuneration .list.channel-list p:first").data("uuid") ;
			var queryObj = {};
			if ("1" == this.pageType) {//营业厅
				queryObj.uuid = channelUUID;
				businessDelegate.getmarkRemunerationNewListByChannel(queryObj, _.bind(function (data) {
					var tpl = _.template(this.remunerationList)({ list: data.obj, type: this.pageType });
					this.$(".content-content .list").empty();
					this.$(".content-content .list").html(tpl);
				}, this), _.bind(function (err) {
					// this.$listContent.html(this.errorHTML);
					$.jtoast(err);
					$.hideLoading();
				}, this));
			} else {//月份
				queryObj.dateMonth = this.dateMonth ? this.dateMonth : $("#query-remuneration .list.channel-list p:first").data("month");
				businessDelegate.getMarkRemunerationNewListByMonth(queryObj, _.bind(function (data) {
					var tpl = _.template(this.remunerationList)({ list: data.obj, type: this.pageType });
					this.$(".content-content .list").empty();
					this.$(".content-content .list").html(tpl);
				}, this), _.bind(function (err) {
					// this.$listContent.html(this.errorHTML);
					$.jtoast(err);
					$.hideLoading();
				}, this));
			}


		},
		getPaySelect: function () {
			$.showLoading();
			businessDelegate.getMarketingChannel(_.bind(function (data) {
				$.hideLoading();

				if (data.obj.length == 0) {
					return;
				}

				var tpl = _.template(this.paySelectTemplate)({ list: data.obj });
				this.$('.content-header').html(tpl);

				this.renderPayList();
			}, this), _.bind(function (err) {
				$.jtoast(err);
				$.hideLoading();

				this.renderPayList();
			}, this));
		},
		renderPayList: function () {
			var uuid = $('.form-select').val();

			if (!this.PayList) {
				this.PayList = new PayList({
					uuid: uuid
				});
			} else {
				this.PayList.initialize({
					uuid: uuid
				});
			}

		},
		renderUserInfoView: function () {
			$.showLoading();
			businessDelegate.getMarketingPermission(_.bind(function (data) {
				$.hideLoading();
				var tpl = _.template(this.userInfoTemplate)(data.obj);
				this.$('.header .tableContent').html(tpl);
				window.user.title = data.obj.title;
				window.user.regularVisitors = data.obj.regularVisitors;	//获取常客查询权限
				window.user.taskSing = data.obj.taskSing;	//获取任务查询权限
				window.user.backfillTask = data.obj.backfillTask;	//获取任务回填权限
				window.user.queryFee = data.obj.queryFee;	//获取酬金查询权限
				// this.renderNav(1);
				this.getDataByType(); //获取营业厅
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);

				this.renderNav(1);
			}, this));
		},
		showAllInfoList: function (e) {
			var $e = $(e.currentTarget);
			if ($e.find('.list').hasClass('unactive')) {
				$e.find('.list').removeClass('unactive').addClass('active');
			} else {
				$e.find('.list').removeClass('active').addClass('unactive');
			}
		},
		backbutton: function () {
			Backbone.history.navigate(this.history, { trigger: true });
		},
		initialize: function (options) {
			this.history = window._pageHistory ? window._pageHistory : "work/index";
			window._pageHistory = "";
			this.header = new AppHeader({
				host: this,
				main: false, //是否主页面
				title: '酬金查询'
			});

			// this.$el.empty().append(this.header.$el).append(template);
			this.$el.empty().append(template);
			this.userInfoTemplate = this.$('#userInfoTpl').html();
			this.missionSearchTemplate = this.$('#missionSearchTpl').html();
			this.fixtureSearchTemplate = this.$('#fixtureSearchTpl').html();
			this.paySelectInitTemplate = this.$('#paySelectInitTpl').html();
			this.paySelectTemplate = this.$('#paySelectTpl').html();
			this.remunerationList = this.$("#remunerationList").html();
			// var htmlStr = '<div class="morePage" style="margin-right: 5px;"><div class="ellipsePng"><img src="app_img/ellipse.png" alt=""></div><div class="queryByType hide" style="background-color: rgb(44 ,154 ,244);"><div data-type="1">营业厅</div><div data-type="2">月份</div></div></div>';
			// this.$(".common-header .right-button").html(htmlStr);
			// this.$(".common-header .right-button").removeClass("hide");
			this.pageType = "1";
			//渲染用户信息
			this.renderUserInfoView();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/graphic_marketing/tpl/index.html',[],function () { return '<div class="graphic-marketing common-content bg-gray" id="graphicMarketing">\r\n    <div class="gm-search-content"></div>\r\n    <div class="gm-list-content">\r\n        <!-- <div class="list-item">\r\n            <div class="left-img">\r\n                <img src="app_img/paper.jpg" alt="">\r\n            </div>\r\n            <div class="right-content">\r\n                <div class="right-content-title">标题</div>\r\n                <div class="fontColor164">\r\n                    <span>分享数 ： </span>\r\n                    <span>123231</span>\r\n                </div>\r\n                <div class="fontColor164">\r\n                    <span>上传时间：</span><span>22天</span>\r\n                    <span class="floatright"><span>活动有效期：</span><span>30天</span></span>\r\n                </div>\r\n            </div>\r\n        </div> -->\r\n    </div>\r\n</div>\r\n\r\n<script id="gmSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-mission-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-mission-search" placeholder="请输入关键字搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n<script id="gmListTpl" type="text/template">\r\n    <% _.each(list, function(v,i){ \r\n        var classStr = \'\';\r\n        if(\'1\' == v.isExpire){\r\n            classStr = "bordergrey overtime" ;\r\n            <!-- classStr = "overtime" ; -->\r\n        }else{\r\n            classStr = "borderblue"\r\n        }\r\n    %>\r\n    <div class="list-item  <%=classStr%>" data-imgurl="<%=v.graphicImageUrl%>">\r\n        <div class="left-img">\r\n            <img src="app_img/paper.jpg" alt="">\r\n        </div>\r\n        <div class="right-content">\r\n            <div class="right-content-title"><%=v.graphicTitle%></div>\r\n            <div class="fontColor164">\r\n                <span>分享数 ： </span>\r\n                <span><%=v.shareCount%></span>\r\n            </div>\r\n            <div class="fontColor164">\r\n                <span>上传时间：</span><span><%=v.createTime%></span>\r\n                <!-- <span class="floatright"><span>活动有效期：</span><span>30天</span></span> -->\r\n            </div>\r\n            <div class="fontColor164">\r\n                <span>活动有效期：</span><span></span>\r\n                <!-- <span class="floatright"><span>活动有效期：</span><span>30天</span></span> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <% }) %>\r\n</script>';});


define('text!view/graphic_marketing/tpl/detail.html',[],function () { return '<div class="graphic_marketing_detail" id="graphic_marketing_detail">\r\n    <!-- <img src="app_img/demo-pic.jpg" alt=""> -->\r\n    <div class="imgcontent">\r\n        <img src="" alt="">\r\n    </div>\r\n    <div class="shareBtn">\r\n        <img src="app_img/share.png" alt="">\r\n    </div>\r\n    <div class="shareChannel hide">\r\n        <div class="toQQ">分享QQ</div>\r\n        <div class="toWechat">分享微信</div>\r\n    </div>\r\n</div>';});

/**
*   基础页面定义
**/

define('view/graphic_marketing/detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','text!view/graphic_marketing/tpl/detail.html','view/app-header','view/slide-page','view/get-share'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/graphic_marketing/tpl/detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');
	var GetShare = require('view/get-share');

	var View = SlidePage.extend({
		events: {
			"tap .shareBtn": "share" ,
			"tap .toQQ": "qqShare" ,
			"tap .toWechat": "wechatShare"
		},
		qqShare: function(){
			var args = {};
			args.client = QQSDK.ClientType.QQ;//QQSDK.ClientType.QQ,QQSDK.ClientType.TIM;
			args.scene = QQSDK.Scene.QQ;//QQSDK.Scene.QQZone,QQSDK.Scene.Favorite
			args.title = '这个是 Cordova QQ 图片分享的标题';
			args.description = '这个是 Cordova QQ 图片分享的描述';
			args.image = this.realImgUrl;
			QQSDK.shareImage(function () {
			alert('shareImage success');
			}, function (failReason) {
			alert(failReason);
			}, args);
					},
		wechatShare: function(){
			Wechat.share({
				message: {
					title: "Hi, there",
					description: "This is description.",
					thumb: this.realImgUrl,
					mediaTagName: "TEST-TAG-001",
					messageExt: "这是第三方带的测试字段",
					messageAction: "<action>dotalist</action>",
					media: "来自Samsung Glaxy S8+"
				},
				scene: Wechat.Scene.TIMELINE   // share to Timeline
			}, function () {
				alert("Success");
			}, function (reason) {
				alert("Failed: " + reason);
			});
		},
		share: function () {
			if(this.realImgUrl){
				var view = new GetShare({
					question: {
						type:"graphic-maketing-pic" ,
						url :this.orangeUrl
					}
				});
				window.pageType = "graphic-maketing-pic"
				view.show();
			}else{
				$.jtoast("图片不存在");
			}
			//http://47.100.126.72/ProMark/ImageAction/aHR0cDovLzQ3LjEwMC4xMjYuNzIvUHJvTWFyay9obnd4aW1nL21hcmsvZ3JhcGhpYy9jb3Zlci8yMDE4LTA1LTA3L2Q4NjcyZTU0LWQyMGYtNGMxMi1iYjQzLWM1N2Q5YTFmMmNmOC5wbmc=/120/scale.do
			// app_img/paper.jpg
			// window.plugins.socialsharing.share(null, null, "https://www.baidu.com/img/bdlogo.gif", null) ;//测试通过
			// window.plugins.socialsharing.share(null, null, "http://117.78.33.165:8080/stategrid/page/images/login_bg3.jpg", null) ;
		},
		decodeBase64: function (input) {
			var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
			var output = "";
			var chr1, chr2, chr3;
			var enc1, enc2, enc3, enc4;
			var i = 0;
			input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
			while (i < input.length) {
				enc1 = _keyStr.indexOf(input.charAt(i++));
				enc2 = _keyStr.indexOf(input.charAt(i++));
				enc3 = _keyStr.indexOf(input.charAt(i++));
				enc4 = _keyStr.indexOf(input.charAt(i++));
				chr1 = (enc1 << 2) | (enc2 >> 4);
				chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
				chr3 = ((enc3 & 3) << 6) | enc4;
				output = output + String.fromCharCode(chr1);
				if (enc3 != 64) {
					output = output + String.fromCharCode(chr2);
				}
				if (enc4 != 64) {
					output = output + String.fromCharCode(chr3);
				}
			}
			output = this._utf8_decode(output);
			return output;
		},
		_utf8_decode: function (utftext) {
			var string = "";
			var i = 0;
			var c = c1 = c2 = 0;
			while (i < utftext.length) {
				c = utftext.charCodeAt(i);
				if (c < 128) {
					string += String.fromCharCode(c);
					i++;
				} else if ((c > 191) && (c < 224)) {
					c2 = utftext.charCodeAt(i + 1);
					string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
					i += 2;
				} else {
					c2 = utftext.charCodeAt(i + 1);
					c3 = utftext.charCodeAt(i + 2);
					string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
					i += 3;
				}
			}
			return string;
		},
		initialize: function (options) {
			this.header = new AppHeader({
				host: this,
				main: false, //是否主页面
				title: "图文详情"
			});
			var url = options.imgUrl ;
			this.orangeUrl = url ;
			var startIndex = url.indexOf("/ImageAction") + 13;
			var endIndex = url.indexOf("/" ,startIndex) ;
			// var regArr = this.imgUrl.match(/ImageAction\/(\S*)\//);//字符串后面会把  /120也带上
			var base64Url = url.substring(startIndex ,endIndex) ;
			if(base64Url){
				var imgUrl = this.decodeBase64(base64Url);
				this.imgUrl = url;
				this.realImgUrl = imgUrl ;
				this.$el.empty().append(this.header.$el).append(template);
				var htmlStr = '<img src="' + imgUrl + '" alt="">';
				this.$("#graphic_marketing_detail .imgcontent>img").attr("src", imgUrl);
			}else{
				$.jtoast("图片不存在");
			}
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销首页
 */

define('view/graphic_marketing/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/graphic_marketing/tpl/index.html','text!view/my_customer/tpl/_mission-list.html','view/app-header','view/graphic_marketing/detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/graphic_marketing/tpl/index.html');
	var missionListTemplate = require('text!view/my_customer/tpl/_mission-list.html');

	var AppHeader = require('view/app-header');
	var DetailView = require("view/graphic_marketing/detail");

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			"tap .list-item" : "toDetail",
			"tap .btn-mission-search":"search"
		},
		toDetail: function(e){
			var imgUrl = $(e.currentTarget).data("imgurl");
			var view = new DetailView({
				imgUrl:imgUrl
			});
			view.show();
			return;
		},
		search: function(e){
			this.searchkey = $(e.currentTarget).parent().next().find("input").val() ;
			this.getListData();
		},
		getPaySelect: function () {
			$.showLoading();
			businessDelegate.getMarkGraphicList(_.bind(function (data) {
				$.hideLoading();

				if (data.obj.length == 0) {
					return;
				}

				var tpl = _.template(this.paySelectTemplate)({ list: data.obj.markGraphic.rows });
				this.$('.content-header').html(tpl);

				this.renderPayList();
			}, this), _.bind(function (err) {
				$.jtoast(err);
				$.hideLoading();

				this.renderPayList();
			}, this));
		},
		renderPayList: function () {
			var uuid = $('.form-select').val();

			if (!this.PayList) {
				this.PayList = new PayList({
					uuid: uuid
				});
			} else {
				this.PayList.initialize({
					uuid: uuid
				});
			}

		},
		getListData: function(){
			//getMarkGraphicList
			businessDelegate.getMarkGraphicList({
				page: this.current_page,
				rows: this.rows,
				graphicTitle : this.searchkey // customerMobile : window.user.mobile
			},_.bind(function (data) {
				/**列表 */
				this.listTemplate = this.$("#gmListTpl").html();
				var listtpl = _.template(this.listTemplate)({ list : data.obj.markGraphic.rows }) ;
				this.$('.common-content .gm-list-content').empty() ;
				this.$('.common-content .gm-list-content').html(listtpl);
			}, this), _.bind(function (err) {
				$.jtoast(err);
				$.hideLoading();

				this.renderPayList();
			}, this));
		},
		backbutton: function () {
            Backbone.history.navigate(this.history, { trigger: true });
		},
		initialize: function (options) {
			//this.history = options.history;
			this.history = window._pageHistory?window._pageHistory:"work/index";
			window._pageHistory = "" ;
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '图文营销'
            });
            /**搜索 */
            this.$el.empty().append(this.header.$el).append(template);
            this.searchTemplate = this.$('#gmSearchTpl').html();
			this.$('.common-content .gm-search-content').html(this.searchTemplate);
			this.current_page = 0 ;
			this.rows = 500 ;
			this.searchkey = "" ;
			this.getListData() ;
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/marketing-communications/tpl/index.html',[],function () { return '<div class="marketing-communications" id="marketing-communications">\r\n    <div class="tabs">\r\n        <div class="tabs-item borderWhite backcolorblue" data-index="0">任务通报</div>\r\n        <div class="tabs-item borderWhite backcolorgrey" data-index="1">竞赛通报</div>\r\n        <div class="tabs-item backcolorgrey" data-index="2">个人通报</div>\r\n    </div>\r\n    <div class="tabs-content">\r\n        <!-- <div class="task-item">\r\n            <div class="task-item-time">2018.06.13</div>\r\n            <div class="task-item-middle">\r\n                <div class="red-line first-item"></div>\r\n                <div class="red-spot"></div>\r\n            </div>\r\n            <div class="task-item-name">任务名称1</div>\r\n        </div>\r\n        <div class="task-item">\r\n            <div class="task-item-time">2018.06.13</div>\r\n            <div class="task-item-middle">\r\n                <div class="red-line"></div>\r\n                <div class="red-spot"></div>\r\n            </div>\r\n            <div class="task-item-name">任务名称2</div>\r\n        </div>\r\n        <div class="task-item">\r\n            <div class="task-item-time">2018.06.13</div>\r\n            <div class="task-item-middle">\r\n                <div class="red-line"></div>\r\n                <div class="red-spot"></div>\r\n            </div>\r\n            <div class="task-item-name">任务名称3</div>\r\n        </div>\r\n        <div class="task-item">\r\n            <div class="task-item-time">2018.06.13</div>\r\n            <div class="task-item-middle">\r\n                <div class="red-line last-item"></div>\r\n                <div class="red-spot"></div>\r\n            </div>\r\n            <div class="task-item-name">任务名称4</div>\r\n        </div> -->\r\n    </div>\r\n</div>\r\n<script id="personTabItem" type="text/template">\r\n    <% _.each(list, function(v,i){ \r\n        var classStr = "" ;\r\n        if(0 == i){\r\n            classStr = "first-item"\r\n        }else if((list.length-1) == i){\r\n            classStr = "last-item"\r\n        }\r\n        var date ;\r\n        date = v.reportDate?new Date(v.reportDate):new Date();\r\n        var year = date.getFullYear() ;\r\n        var month = date.getMonth()>9?date.getMonth():\'0\'+date.getMonth() ;\r\n        var day = date.getDate()>9?date.getDate():\'0\'+date.getDate() ;\r\n        var dateStr  = year + "." + month + "." + day ;\r\n    %>\r\n        <div class="task-item" data-type="2" data-id="<%=v.uuid%>">\r\n            <div class="task-item-time"><%=dateStr%></div>\r\n            <div class="task-item-middle">\r\n                <div class="red-line <%=classStr%>"></div>\r\n                <div class="red-spot"></div>\r\n            </div>\r\n            <div class="task-item-name"><%=v.title%></div>\r\n        </div>\r\n    <% }) %>\r\n</script>\r\n<script id="gameTabItem" type="text/template">\r\n    <% _.each(list, function(v,i){ \r\n        var classStr = "" ;\r\n        if(0 == i){\r\n            classStr = "first-item"\r\n        }else if((list.length-1) == i){\r\n            classStr = "last-item"\r\n        }\r\n        var date ;\r\n        date = v.reportDate?new Date(v.reportDate):new Date();\r\n        var year = date.getFullYear() ;\r\n        var month = date.getMonth()>9?date.getMonth():\'0\'+date.getMonth() ;\r\n        var day = date.getDate()>9?date.getDate():\'0\'+date.getDate() ;\r\n        var dateStr  = year + "." + month + "." + day ;\r\n    %>\r\n        <div class="task-item" data-type="1" data-id="<%=v.uuid%>">\r\n            <div class="task-item-time"><%=dateStr%></div>\r\n            <div class="task-item-middle">\r\n                <div class="red-line <%=classStr%>"></div>\r\n                <div class="red-spot"></div>\r\n            </div>\r\n            <div class="task-item-name"><%=v.title%></div>\r\n        </div>\r\n    <% }) %>\r\n</script>\r\n<script id="taskTabItem" type="text/template">\r\n    <% _.each(list, function(v,i){ \r\n        var classStr = "" ;\r\n        if(0 == i){\r\n            classStr = "first-item"\r\n        }else if((list.length-1) == i){\r\n            classStr = "last-item"\r\n        }\r\n        var date ;\r\n        date = v.reportDate?new Date(v.reportDate):new Date();\r\n        var year = date.getFullYear() ;\r\n        var month = date.getMonth()>9?date.getMonth():\'0\'+date.getMonth() ;\r\n        var day = date.getDate()>9?date.getDate():\'0\'+date.getDate() ;\r\n        var dateStr  = year + "." + month + "." + day ;\r\n    %>\r\n        <div class="task-item" data-type="0" data-id="<%=v.uuid%>">\r\n            <div class="task-item-time"><%=dateStr%></div>\r\n            <div class="task-item-middle">\r\n                <div class="red-line <%=classStr%>"></div>\r\n                <div class="red-spot"></div>\r\n            </div>\r\n            <div class="task-item-name"><%=v.title%></div>\r\n        </div>\r\n    <% }) %>\r\n</script>';});


define('text!view/marketing-communications/tpl/overView.html',[],function () { return '<div class="marketing-communications-overview  bg-gray" id="marketingCommunicationsOverview">\r\n    <div class="search-content">\r\n\r\n    </div>\r\n    <div class="list-content">\r\n        <!-- <div class="listItem">\r\n            <div class="channel-name">\r\n                <div class="name">渠道名称</div>\r\n                <div class="val">XXXXX1</div>\r\n            </div>\r\n            <div class="channel-company">\r\n                <div class="name">所属分公司</div>\r\n                <div class="val">XXXXX2</div>\r\n            </div>\r\n            <div class="channel-oder">\r\n                <div class="name">排名</div>\r\n                <div class="val">99</div>\r\n            </div>\r\n        </div>\r\n        <div class="listItem">\r\n            <div class="channel-name">\r\n                <div class="name">渠道名称</div>\r\n                <div class="val">XXXXX1</div>\r\n            </div>\r\n            <div class="channel-company">\r\n                <div class="name">所属分公司</div>\r\n                <div class="val">XXXXX2</div>\r\n            </div>\r\n            <div class="channel-oder">\r\n                <div class="name">排名</div>\r\n                <div class="val">99</div>\r\n            </div>\r\n        </div> -->\r\n    </div>\r\n</div>\r\n<script id="marketingCommunicationsOverviewSearch" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-fixture-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-fixture-search" placeholder="请输入电话号码搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n<script id="marketingCommunicationsOverviewTask" type="text/template">\r\n    <% _.each(list, function(v,i){ %>\r\n    <div class="listItem" data-type="0" data-index="<%=i%>">\r\n            <div class="channel-name">\r\n                <div class="name">渠道工位</div>\r\n                <div class="val"><%=v.channelStation%></div>\r\n            </div>\r\n            <div class="channel-oder textMiddle">\r\n                <div class="name"><%=v.rank%></div>\r\n            </div>\r\n        </div>\r\n    <% }) %>\r\n</script>\r\n<script id="marketingCommunicationsOverviewGame" type="text/template">\r\n    <% _.each(list, function(v,i){ %>\r\n    <div class="listItem" data-type="1" data-index="<%=i%>" data-uuid="<%=v.channelUUID%>" data-marketuuid="<%=v.markReportUuid%>">\r\n            <div class="channel-name width45">\r\n                <div class="name"><%=v.channelTitle%></div>\r\n                <div class="val">\r\n                    <!-- <span>所属分公司：</span> -->\r\n                    <span class="colorBlue"><%=v.channelArea%></span>\r\n                </div>\r\n            </div>\r\n            <div class="channel-company width42">\r\n                <div class="name"><%=v.channelNumber%></div>\r\n                <div class="val">\r\n                    <!-- <span>是否连锁渠道：</span> -->\r\n                    <span class="colorBlue"><%=v.chainChannel%></span>\r\n                </div>\r\n            </div>\r\n            <div class="channel-oder">\r\n                <div class="name">排名</div>\r\n                <div class="val"><%=v.rankGroup%></div>\r\n            </div>\r\n        </div>\r\n        <% }) %>\r\n</script>\r\n<script id="marketingCommunicationsOverviewPerson" type="text/template">\r\n    <% _.each(list, function(v,i){ %>\r\n    <div class="listItem" data-type="2" data-index="<%=i%>">\r\n            <div class="channel-name" style="width: 65%;">\r\n                <div class="name"><%=v.channelTitle%></div>\r\n                <div class="val"><%=v.channelNumber%></div>\r\n            </div>\r\n            <div class="channel-company">\r\n                <div class="name"><%=v.channelArea%></div>\r\n                <div class="val"><%=v.channelStation%></div>\r\n            </div>\r\n            <div class="channel-oder">\r\n                <div class="name"></div>\r\n                <div class="val"></div>\r\n            </div>\r\n        </div>\r\n        <% }) %>\r\n</script>';});


define('text!view/marketing-communications/tpl/detail.html',[],function () { return '<div class="marketing-communications-detail  bg-gray" id="marketingCommunicationsDetail">\r\n\r\n</div>\r\n<script id="marketingCommunicationsDetailPerson" type="text/template">\r\n    <div class="personcontent">\r\n            <div class="_item bgblue">\r\n                <div class="_item-left">月份</div>\r\n                <div class="_item-right"><%=data.month%>月</div>\r\n            </div>\r\n            <div class="_item marginTop0">\r\n                <div class="_item-left">\r\n                    <div class="name">渠道名称</div>\r\n                    <div class="val"><%=data.channelTitle%></div>\r\n                </div>\r\n                <div class="_item-right">\r\n                    <div class="name">所属分公司</div>\r\n                    <div class="val"><%=data.channelArea%></div>\r\n                </div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">融合新增</div>\r\n                <div class="_item-right"><%=data.numberAllocation%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">融合新增新和家庭</div>\r\n                <div class="_item-right"><%=data.netInFamily%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">融合新增大王卡</div>\r\n                <div class="_item-right"><%=data.netInKing%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">宽带新装量</div>\r\n                <div class="_item-right"><%=data.newBroad%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">宽带续费量</div>\r\n                <div class="_item-right"><%=data.renewBroad%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">流量年包</div>\r\n                <div class="_item-right"><%=data.flowHalfYear%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">新和家庭迁转量</div>\r\n                <div class="_item-right"><%=data.convertFamily%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">大王卡迁转量</div>\r\n                <div class="_item-right"><%data.convertFamily%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">新飞迁转量</div>\r\n                <div class="_item-right"><%=data.convertFly%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">存送电子劵</div>\r\n                <div class="_item-right"><%=data.eleCoupon%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">4G终端销量</div>\r\n                <div class="_item-right"><%=data.terminal4g%></div>\r\n            </div>\r\n            <div class="_item">\r\n                <div class="_item-left">4G+终端销量</div>\r\n                <div class="_item-right"><%=data.terminal4gPlus%></div>\r\n            </div>\r\n        </div>\r\n</script>\r\n<script id="marketingCommunicationsDetailTask" type="text/template">\r\n    <div class="taskcontent">\r\n            <div class="taskNameInfo bgblue">\r\n                <div class="table-cell">任务名称：</div>\r\n                <div class="table-cell"><%=data.markReportTitle%></div>\r\n            </div>\r\n            <div class="taskOtherInfo">\r\n                <div class="table-cell">\r\n                    <div style="font-weight: bolder;">渠道工位</div>\r\n                    <div style="color: rgb(161 ,161 ,161);font-size: 0.9em;"><%=data.channelStation%></div>\r\n                </div>\r\n                <div class="table-cell" style="vertical-align: middle;">\r\n                    <%=data.rank%>\r\n                </div>\r\n            </div>\r\n            <div class="rate-content">\r\n                    <div>\r\n                            <div>\r\n                                <span>目标客户数</span><span class="colorBlue" style="float: right;"><%=data.targetNumber%></span>\r\n                             </div>\r\n                            <div class="fullRate">\r\n                                <div class="completeRate" style="width:100%"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <span>到达率</span><span class="colorBlue" style="float: right;"><%=data.reachRate%></span>\r\n                             </div>\r\n                            <div class="fullRate">\r\n                                 <div class="completeRate" style="width:<%=data.reachRate%>"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                             <div>\r\n                                <span>成功率</span><span class="colorBlue" style="float: right;"><%=data.successRate%></span>\r\n                             </div>\r\n                             <div class="fullRate">\r\n                                 <div class="completeRate" style="width:<%=data.successRate%>"></div>\r\n                             </div>\r\n                        </div>\r\n            </div>\r\n         </div>\r\n</script>\r\n<script id="marketingCommunicationsDetailGame" type="text/template">\r\n    <div class="game-content">\r\n            <div class="game-name bgblue"><%=data.markReportTitle%></div>\r\n            <div class="game-info-overview">\r\n                <div class="table-cell" style=" width: 46%;">\r\n                    <div style="font-weight: bolder;"><%=data.channelTitle%></div>\r\n                    <div style="font-size: 0.85em;">\r\n                        <span>所属分公司：</span>\r\n                        <span class="colorBlue"><%=data.channelArea%></span>\r\n                    </div>\r\n                </div>\r\n                <div class="table-cell">\r\n                    <div style="font-weight: bolder;">渠道工位</div>\r\n                    <div style="font-size: 0.85em;">\r\n                        <span>是否连锁渠道：</span>\r\n                        <span class="colorBlue"><%=data.chainChannel%></span>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class="table-cell" style="vertical-align: middle;font-weight: bolder;">名次</div> -->\r\n            </div>\r\n            <div class="detailInfo">\r\n                <div class="fisrt-block">\r\n                    <div class="title">\r\n                        存量运营\r\n                    </div>\r\n                    <div class="content">\r\n                        <div class="second-block">\r\n                            <div class="title">\r\n                                <span style="display: inline-block;width: 83%;">基础任务: </span><%=data.stockBase%></div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">存费送电子劵:  </span><%=data.stockEleCoupon%></div>\r\n                            <div class="content">\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中高风险及回归客户</div>\r\n                                    <div class="_val"><%=data.stockEcHighRisk%></div>\r\n                                </div>\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中综合价值提升客户</div>\r\n                                    <div class="_val"><%=data.stockEcValuePromote%></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">省内流量包：</span><%=data.stockInProFlow%></div>\r\n                            <div class="content">\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中高风险及回归客户</div>\r\n                                    <div class="_val"><%=data.stockIpfHighRisk%></div>\r\n                                </div>\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中综合价值提升客户</div>\r\n                                    <div class="_val"><%=data.stockIpfValuePromote%></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">全网统一套餐提档：</span><%=data.stockComboUp%></div>\r\n                            <div class="content">\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中高风险及回归客户</div>\r\n                                    <div class="_val"><%=data.stockCuHighRisk%></div>\r\n                                </div>\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中综合价值提升客户</div>\r\n                                    <div class="_val"><%=data.stockCuValuePromote%></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">保底送流量：</span><%=data.stockMininumFlow%></div>\r\n                            <div class="content">\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中高风险及回归客户</div>\r\n                                    <div class="_val"><%=data.stockMfHighRisk%></div>\r\n                                </div>\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中综合价值提升客户</div>\r\n                                    <div class="_val"><%=data.stockMfValuePromote%></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">2G/3G转化：</span><%=data.stock23Convert%></div>\r\n                            <div class="content">\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中高风险及回归客户</div>\r\n                                    <div class="_val"><%=data.stock23HighRisk%></div>\r\n                                </div>\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中综合价值提升客户</div>\r\n                                    <div class="_val"><%=data.stock23ValuePromote%></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">完成率：</span><%=data.stockFinished%></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="fisrt-block">\r\n                    <div class="title">\r\n                        融合新增\r\n                    </div>\r\n                    <div class="content">\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">基础任务：</span><%=data.mixBase%></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">38以下套餐：</span><%=data.mix38Down%></div>\r\n                        <div class="content">\r\n                            <div class="moreinfo">\r\n                                <div class="_label">其中回归客户</div>\r\n                                <div class="_val"><%=data.mix38DReturn%></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">38(含)-58套餐：</span><%=data.mix38Up%></div>\r\n                        <div class="content">\r\n                            <div class="moreinfo">\r\n                                <div class="_label">其中回归客户</div>\r\n                                <div class="_val"><%=data.mix38UReturn%></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">59(含)-98套餐：</span><%=data.mix59Up%></div>\r\n                        <div class="content">\r\n                            <div class="moreinfo">\r\n                                <div class="_label">其中回归客户</div>\r\n                                <div class="_val"><%=data.mix59UReturn%></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">99以上套餐：</span><%=data.mix99Up%></div>\r\n                        <div class="content">\r\n                            <div class="moreinfo">\r\n                                <div class="_label">其中回归客户</div>\r\n                                <div class="_val"><%=data.mix99UReturn%></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">完成率：</span><%=data.mixFinished%></div>\r\n                    </div>\r\n                </div>\r\n                <div class="fisrt-block">\r\n                    <div class="title">\r\n                        4G发展\r\n                    </div>\r\n                    <div class="content">\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">基础任务：</span><%=data.g4Base%></div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">4G+终端：</span><%=data.g4Terminal%></div>\r\n                            <div class="content">\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中高风险及回归客户</div>\r\n                                    <div class="_val"><%=data.g4HighRisk%></div>\r\n                                </div>\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中综合价值提升客户</div>\r\n                                    <div class="_val"><%=data.g4ValuePromote%></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">完成率：</span><%=data.g4Finished%></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="fisrt-block">\r\n                    <div class="title">\r\n                        宽带发展\r\n                    </div>\r\n                    <div class="content">\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">基础任务：</span><%=data.broadBase%></div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">100M：</span><%=data.broad100M%></div>\r\n                            <div class="content">\r\n                                <div class="moreinfo">\r\n                                    <div class="_label">其中高风险及回归客户</div>\r\n                                    <div class="_val"><%=data.broadHighRisk%></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">完成率：</span><%=data.broadFinished%></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n</script>\r\n<script id="marketingCommunicationsDetailGamePoint" type="text/template">\r\n    <div class="game-content">\r\n            <div class="game-name bgblue"><%=data.markReportTitle%></div>\r\n            <div class="game-info-overview">\r\n                <div class="table-cell">\r\n                    <div style="font-weight: bolder;"><%=data.channelTitle%></div>\r\n                    <div style="font-size: 0.85em;">\r\n                        <span>所属分公司：</span>\r\n                        <span class="colorBlue"><%=data.channelArea%></span>\r\n                    </div>\r\n                </div>\r\n                <div class="table-cell">\r\n                    <div style="font-weight: bolder;">渠道工位</div>\r\n                    <div style="font-size: 0.85em;">\r\n                        <span>是否连锁渠道：</span>\r\n                        <span class="colorBlue"><%=data.chainChannel%></span>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class="table-cell" style="vertical-align: middle;font-weight: bolder;">名次</div> -->\r\n            </div>\r\n            <div class="detailInfo">\r\n                <div class="fisrt-block">\r\n                    <div class="title">\r\n                        存量运营\r\n                    </div>\r\n                    <div class="content">\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">存费送电子劵:  </span><%=data.stockEleCoupon%></div>\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">省内流量包:  </span><%=data.stockInProFlow%></div>\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">全网统一套餐升档:  </span><%=data.stockComboUp%></div>\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">保底送流量:  </span><%=data.stockMininumFlow%></div>\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">2G/3G转化:  </span><%=data.stock23Convert%></div>\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">积分 总额:  </span><%=data.stockPoint%></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="fisrt-block">\r\n                    <div class="title">\r\n                        融合新增\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">38以下套餐：</span><%=data.mix38Down%></div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">38(含)-58套餐：</span><%=data.mix38Up%></div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">59(含)-98套餐：</span><%=data.mix59Up%></div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">99以上套餐：</span><%=data.mix99Up%></div>\r\n                    </div>\r\n                    <div class="second-block">\r\n                        <div class="title"><span style="display: inline-block;width: 83%;">积分总额：</span><%=data.mixPoint%></div>\r\n                    </div>\r\n                </div>\r\n                <div class="fisrt-block">\r\n                    <div class="title">\r\n                        4G发展\r\n                    </div>\r\n                    <div class="content">\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">4G终端积分总额：</span><%=data.g4TerminalPoint%></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="fisrt-block">\r\n                    <div class="title">\r\n                        宽带发展\r\n                    </div>\r\n                    <div class="content">\r\n                        <div class="second-block">\r\n                            <div class="title"><span style="display: inline-block;width: 83%;">100M积分总额：</span><%=data.broad100MPoint%></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="fisrt-block">\r\n                        <div class="title">\r\n                            其他\r\n                        </div>\r\n                        <div class="content">\r\n                            <div class="second-block">\r\n                                <div class="title"><span style="display: inline-block;width: 83%;">各项业务积分总计：</span><%=data.sumPoint%></div>\r\n                            </div>\r\n                            <div class="second-block">\r\n                                    <div class="title"><span style="display: inline-block;width: 83%;">符合条件渠道积分总计：</span><%=data.conditionSumPoint%></div>\r\n                                </div>\r\n                                <div class="second-block">\r\n                                        <div class="title"><span style="display: inline-block;width: 83%;">存量稳定营销特别贡献积分：</span><%=data.spacialPoint%></div>\r\n                                    </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n</script>';});

/**
*   基础页面定义
**/

define('view/marketing-communications/detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','text!view/marketing-communications/tpl/detail.html','view/app-header','view/slide-page','business-delegate'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/marketing-communications/tpl/detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');
    var businessDelegate = require('business-delegate');

	var View = SlidePage.extend({
        events: {
            "tap .gameellipsePng": "showDifferentOption" ,
            "tap .morePage .gamequeryByType>div": "changeTypeInGamePage"
        },
        showDifferentOption: function(e){
            if($(e.currentTarget).next().hasClass("hide")){
                $(e.currentTarget).next().removeClass("hide");
            }else{
                $(e.currentTarget).next().addClass("hide");
            }
        },
        changeTypeInGamePage: function(e){
            var type = $(e.currentTarget).data("type");
            $(e.currentTarget).parent().addClass("hide");
            this.renderDifferent(type);
        },
        renderDifferent: function(type){
            this.$("#marketingCommunicationsDetail").empty();
            if("2" == type){//个人详情
                var person = _.template(this.personDetail)({ data : this.detail }) ;
                this.$("#marketingCommunicationsDetail").html(person);
            }else if("1" == type){//竞赛详情--完成数
                var persondata = {} ;
                // var person = _.template(this.gameDetail)({ data : persondata }) ;
                // this.$("#marketingCommunicationsDetail").html(person);
                businessDelegate.getMarkReportContastDetail({
					markReportUuid: this.marketuuid,
					channelUUID : this.uuid,
					type: "1" 
				},_.bind(function (data) {
                    var person = _.template(this.gameDetail)({ data : data.obj.detail }) ;
					this.$("#marketingCommunicationsDetail").html(person);
					// callback();
				}, this), _.bind(function (err) {
					// callback();
				}, this));
            }else if("0" == type){//任务详情
                var person = _.template(this.taskDetail)({ data : this.detail }) ;
                this.$("#marketingCommunicationsDetail").html(person);
            }else if("3" == type){//竞赛详情--积分量
                var persondata = {} ;
                // var person = _.template(this.gameDetail)({ data : persondata }) ;
                // this.$("#marketingCommunicationsDetail").html(person);
                businessDelegate.getMarkReportContastDetail({
					markReportUuid: this.marketuuid,
					channelUUID : this.uuid,
					type: "2" 
				},_.bind(function (data) {
                    var person = _.template(this.gameDetailPoint)({ data : data.obj.detail }) ;
					this.$("#marketingCommunicationsDetail").html(person);
					// callback();
				}, this), _.bind(function (err) {
					// callback();
				}, this));
            }
        },
		initialize: function (options) {
            var title = "" ;
            if("0" == options.type){
                title = "任务通报详情" ;
            }else if("1" == options.type){
                title = "竞赛通报详情" ;
            }else{
                title = "个人通报详情" ;
            }
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: title
            });
            this.$el.empty().append(this.header.$el).append(template);
            this.personDetail = this.$("#marketingCommunicationsDetailPerson").html() ;//个人通报
            this.taskDetail = this.$("#marketingCommunicationsDetailTask").html() ;//个人通报
            this.gameDetail = this.$("#marketingCommunicationsDetailGame").html();
            this.gameDetailPoint = this.$("#marketingCommunicationsDetailGamePoint").html();
            this.detail = options.detailInfo ;
            this.uuid = options.uuid ;
            this.marketuuid = options.marketuuid ;
            if("1" == options.type){//竞赛详情
                var htmlStr = '<div class="morePage"><div class="gameellipsePng"><img src="app_img/ellipse.png" alt=""></div><div class="gamequeryByType hide" style="    background-color: rgb(44 ,154 ,244); "><div data-type="1">完成数 </div><div data-type="3">积分量</div></div></div>';
                this.$(".common-header .right-button").html(htmlStr);
			    this.$(".common-header .right-button").removeClass("hide");
            }
            this.renderDifferent(options.type);

            // this.overViewSearch = this.$("#marketingCommunicationsOverviewSearch").html() ;
            // //搜索模块
            // this.$("#marketingCommunicationsOverview .search-content").empty();
            // this.$("#marketingCommunicationsOverview .search-content").html(this.overViewSearch);

		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
*   基础页面定义
**/

define('view/marketing-communications/overview',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/marketing-communications/tpl/overView.html','view/app-header','view/slide-page','view/marketing-communications/detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');
	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/marketing-communications/tpl/overView.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var detailView = require("view/marketing-communications/detail");
	
	//keywords  关键字
	var View = SlidePage.extend({
        events: {
            "tap .listItem": "toDetail"
        },
        toDetail: function(e){
			var type = $(e.currentTarget).data("type") ;
			var dataIndex = $(e.currentTarget).data("index") ;
			var uuid = $(e.currentTarget).data("uuid") ;
			var marketuuid = $(e.currentTarget).data("marketuuid");
            var view = new detailView({
				type: type,
				detailInfo: this.detailInfos[dataIndex] ,
				uuid: uuid ,
				marketuuid: marketuuid
			});
			view.show();
			return;
		},
		initDifferentTpl: function(type ,uuid){
			var tpl = "" ;
			var data = {} ;
			if("0" == type){//任务通报
				businessDelegate.getMarkReportTaskList({
					page: this.current_page,
					rows: this.rows,
					markReportUuid: uuid ,
					keywords: this.keywords
				},_.bind(function (data) {
					tpl = _.template(this.taskTpl)({list: data.obj.rows});
					this.detailInfos = data.obj.rows ;//详情数据
					this.$("#marketingCommunicationsOverview .list-content").empty();
					this.$("#marketingCommunicationsOverview .list-content").html(tpl);
					// callback();
				}, this), _.bind(function (err) {
					// callback();
				}, this));
			}else if("1" == type){//竞赛通报
				businessDelegate.getMarkReportContastList({
					page: this.current_page,
					rows: this.rows,
					markReportUuid: uuid ,
					keywords: this.keywords
				},_.bind(function (data) {
					tpl = _.template(this.gameTpl)({ list: data.obj.rows });
					this.$("#marketingCommunicationsOverview .list-content").empty();
					this.$("#marketingCommunicationsOverview .list-content").html(tpl);
					// callback();
				}, this), _.bind(function (err) {
					// callback();
				}, this));
			}else if("2" == type){//个人通报
				businessDelegate.getMarkReportPersonList({
					page: this.current_page,
					rows: this.rows,
					markReportUuid: uuid ,
					keywords: this.keywords
				},_.bind(function (data) {
					tpl = _.template(this.persionTpl)({list: data.obj.rows});
					this.detailInfos = data.obj.rows ;//详情数据
					this.$("#marketingCommunicationsOverview .list-content").empty();
					this.$("#marketingCommunicationsOverview .list-content").html(tpl);
					// callback();
				}, this), _.bind(function (err) {
					// callback();
				}, this));
			}
		},
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: "通报概览"
            });
            this.$el.empty().append(this.header.$el).append(template);
			this.overViewSearch = this.$("#marketingCommunicationsOverviewSearch").html() ;
			this.persionTpl = this.$("#marketingCommunicationsOverviewPerson").html(); //个人通报模板
			this.gameTpl = this.$("#marketingCommunicationsOverviewGame").html(); //竞赛通报模板
			this.taskTpl = this.$("#marketingCommunicationsOverviewTask").html(); //任务通报模板
            //搜索模块
			this.$("#marketingCommunicationsOverview .search-content").empty();
			this.$("#marketingCommunicationsOverview .search-content").html(this.overViewSearch);
			this.current_page = 0 ;
			this.rows  = 50 ;
			this.keywords = "" ;
			this.detailInfos = "" ;
			this.pageType = options.type ;
			this.initDifferentTpl(options.type, options.uuid);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销首页
 */

define('view/marketing-communications/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/marketing-communications/tpl/index.html','view/app-header','view/marketing-communications/overview'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/marketing-communications/tpl/index.html');

	var AppHeader = require('view/app-header');
	var overView = require("view/marketing-communications/overview");

	var View = Backbone.View.extend({
		el: 'body',
        events: {
            "tap .tabs-item" : "changeTab" ,
            "tap .task-item" : "toOverView"
		},
		changeTab: function(e){
            var index = $(e.currentTarget).data('index') ;
            this.changeTabByIndex(index);
        },
        changeTabByIndex:function(index){
            //所有tabs 去除选中颜色
            this.$("#marketing-communications .tabs .tabs-item").removeClass("backcolorblue") ;
            //所有tabs 添加未选中颜色
            this.$("#marketing-communications .tabs .tabs-item").addClass("backcolorgrey") ;
			var currentTarget = this.$("#marketing-communications .tabs .tabs-item")[index] ;
			$(currentTarget).addClass("backcolorblue") ;//添加选中颜色
			/*  渲染不同模板 */
			if("0" == index){//任务通报
				businessDelegate.getMarkReportList({
					page: this.current_page,
					rows: this.rows,
					markReportType: '1' 
				},_.bind(function (data) {
					var tpl = _.template(this.taskTabItem)({ list: data.obj.rows });
					this.$("#marketing-communications .tabs-content").empty();
            		this.$("#marketing-communications .tabs-content").html(tpl);
					// callback();
				}, this), _.bind(function (err) {
					// callback();
				}, this));
			}else if("1" == index){//竞赛通报
				businessDelegate.getMarkReportList({
					page: this.current_page,
					rows: this.rows,
					markReportType: '2'
				},_.bind(function (data) {
					var tpl = _.template(this.gameTabItem)({ list: data.obj.rows });
					this.$("#marketing-communications .tabs-content").empty();
            		this.$("#marketing-communications .tabs-content").html(tpl);
					// callback();
				}, this), _.bind(function (err) {
					// callback();
				}, this));
			}else if("2" == index){//个人通报
				businessDelegate.getMarkReportList({
					page: this.current_page,
					rows: this.rows,
					markReportType: '3'
				},_.bind(function (data) {
					var tpl = _.template(this.personTabItem)({ list: data.obj.rows });
					this.$("#marketing-communications .tabs-content").empty();
            		this.$("#marketing-communications .tabs-content").html(tpl);
					// callback();
				}, this), _.bind(function (err) {
					// callback();
				}, this));
			}
            
        },
        toOverView: function(e){
			var type = $(e.currentTarget).data("type") ;
			var uuid = $(e.currentTarget).data("id") ;
            var view = new overView({
				type: type ,
				uuid: uuid
			});
			view.show();
			return;
        },
		getPaySelect: function () {
			$.showLoading();
			businessDelegate.getMarketingChannel(_.bind(function (data) {
				$.hideLoading();

				if (data.obj.length == 0) {
					return;
				}

				var tpl = _.template(this.paySelectTemplate)({ list: data.obj });
				this.$('.content-header').html(tpl);

				this.renderPayList();
			}, this), _.bind(function (err) {
				$.jtoast(err);
				$.hideLoading();

				this.renderPayList();
			}, this));
		},
		renderPayList: function () {
			var uuid = $('.form-select').val();

			if (!this.PayList) {
				this.PayList = new PayList({
					uuid: uuid
				});
			} else {
				this.PayList.initialize({
					uuid: uuid
				});
			}

		},
		backbutton: function () {
            Backbone.history.navigate(this.history, { trigger: true });
		},
		initialize: function (options) {
			//this.history = options.history;
			this.history = window._pageHistory?window._pageHistory:"work/index";
			window._pageHistory = "" ;
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '营销通报'
            });
            
            this.$el.empty().append(this.header.$el).append(template);
			this.personTabItem = this.$('#personTabItem').html();
			this.gameTabItem =  this.$('#gameTabItem').html();
			this.taskTabItem =  this.$('#taskTabItem').html();
			this.current_page = 0 ;
			this.rows = 50 ;
			this.changeTabByIndex(0);
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/marketing-tasks/tpl/index.html',[],function () { return '<div class="common-content bg-gray" id="marketingTasks" style="top: 0px;">\r\n    <div class="header" style="height: 185px;">\r\n        <div class="headerContent" style="top: 185px;font-size: 1.2em;text-align: center;height: 45px;line-height: 45px;">\r\n            <div class="left-button btn-back">\r\n                <i class="iconfont icon-guanbi"></i>\r\n            </div>\r\n            营销任务</div>\r\n        <div class="tableContent">\r\n            <table class="header_table table">\r\n                <tr>\r\n                    <td colspan="2">\r\n                        <img src="app_img/noavatar.png">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan="2">\r\n                        ----\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan="2">\r\n                        -----------\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td width="50%">\r\n                        <div class="info">\r\n                            <div class="bold">所属营业厅\r\n                                <div class="angle"></div>\r\n                            </div>\r\n                            <div class="list channel-list unactive">\r\n                                -----\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td width="50%">\r\n                        <div class="info">\r\n                            <div class="bold">所属部门</div>\r\n                            <p>-----</p>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="content" style="top: 185px;">\r\n        <div class="content-header">\r\n        </div>\r\n\r\n        <div class="content-nav weui-row">\r\n        </div>\r\n\r\n        <div class="content-content" style="overflow-y: auto;">\r\n            <!-- <div class="list-item">\r\n                <div class="task-info-overview">\r\n                    <div class="task-name">\r\n                        <span>任务名称：</span>\r\n                        <span>XXXX</span>\r\n                    </div>\r\n                    <div class="other-info">\r\n                        <span>发布时间：</span>\r\n                        <span>XXXX</span>\r\n                    </div>\r\n                    <div class="other-info">\r\n                        <span>发布期限：</span>\r\n                        <span>XXXX</span>\r\n                    </div>\r\n                    <div class="other-info">\r\n                        <span>任务量：</span>\r\n                        <span>2人</span>\r\n                    </div>\r\n                    <img src="app_img/un-accepted.png" alt="">\r\n                </div>\r\n                <div class="fullRate">\r\n                    <div class="completeRate" style="width:60%;"></div>\r\n                </div>\r\n                <div class="acceptedBtn">\r\n                    <img src="app_img/accptedBtn.png" alt="">\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<script id="userInfoTpl" type="text/template">\r\n    <table class="header_table table">\r\n        <tr>\r\n            <td colspan="2">\r\n                <% if(headImgUrl){ %>\r\n                    <img src="<%=headImgUrl%>">\r\n                <% }else{ %>\r\n                    <img src="app_img/noavatar.png">\r\n                <% } %>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan="2">\r\n                <%=name%>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan="2">\r\n                <%=mobile%>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="50%">\r\n                <div class="info">\r\n                    <div class="bold">所属营业厅\r\n                        <div class="angle"></div>\r\n                    </div>\r\n                    \r\n                    <div class="list channel-list unactive">\r\n                        <% if(title){ %>\r\n                            <%\r\n                                var arr = title.split(\',\');\r\n                            %>\r\n\r\n                            <% _.each(arr, function(v){ %>\r\n                                <p><%=v%></p>\r\n                            <% }) %>\r\n                        <% }else{ %>\r\n                            -\r\n                        <% } %>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td width="50%">\r\n                <div class="info">\r\n                    <div class="bold">所属部门</div>\r\n                    <p><%=company%></p>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</script>\r\n\r\n<script id="missionSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-mission-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-mission-search" placeholder="请输入关键字搜索" on-focus="alert(1111)">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n\r\n<script id="fixtureSearchTpl" type="text/template">\r\n    <div class="app_search clearfix">\r\n        <div class="pull-right">\r\n            <div class="btn btn-primary btn-fixture-search">查询</div>\r\n        </div>\r\n        <div class="overhidden">\r\n            <i class="iconfont icon-sousuo"></i>\r\n            <input type="text" class="form-control input-fixture-search" placeholder="请输入电话号码搜索">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n<script id="paySelectInitTpl" type="text/template">\r\n    <select class="form-select form-control">\r\n        <option value="">无</option>\r\n    </select>\r\n</script>\r\n\r\n<script id="paySelectTpl" type="text/template">\r\n    <select class="form-select form-control">\r\n        <% _.each(list, function(v,i){ %>\r\n            <% if(i == 0){ %>\r\n                <option value="<%=v.uuid%>" selected><%=v.title%></option>\r\n            <% }else{ %>\r\n                <option value="<%=v.uuid%>"><%=v.title%></option>\r\n            <% } %>\r\n        <% }) %>\r\n    </select>\r\n</script>\r\n\r\n<script id="customUserItem" type="text/template">\r\n    <div class=\'customerItems\'>\r\n        <% _.each(list, function(v,i){ %>\r\n        <div class=\'customerItem\'>\r\n            <div class="infoContainer"  data-link=\'my-ustomer-detail/my-customer/work\'>\r\n                <span  class=\'zhinfo\'>电话号码： </span>\r\n                <span class=\'telno\'><%=v.tel%></span>\r\n            </div>\r\n        <div>\r\n        <% }) %>\r\n    </div>\r\n</script>\r\n\r\n<script id="customUserDetail" type="text/template">\r\n    <div class=\'customerDetail\'>\r\n       用户详情。。。\r\n    </div>\r\n</script>\r\n\r\n<script id="marketingTasksItem" type="text/template">\r\n    <% _.each(list, function(v,i){ \r\n        var imgPath ;\r\n        var btnCls ;\r\n        if("1" == v.signStatus){\r\n            imgPath ="app_img/accepted.png" ;\r\n            btnCls = "hide"\r\n        }else{\r\n            imgPath ="app_img/un-accepted.png"\r\n        }\r\n    %>\r\n    <div class="list-item <%=v.targetCont==\'0\'?\'hide\':\'\'%>" data-uuid="<%=v.uuid%>">\r\n            <div class="task-info-overview" data-uuid="<%=v.uuid%>">\r\n                <div class="task-name">\r\n                    <span>任务名称：</span>\r\n                    <span><%=v.title%></span>\r\n                </div>\r\n                <div class="other-info">\r\n                    <span>发布时间：</span>\r\n                    <span><%=v.beginTime%></span>\r\n                </div>\r\n                <div class="other-info">\r\n                    <span>发布期限：</span>\r\n                    <span><%=v.endTime%></span>\r\n                </div>\r\n                <div class="other-info">\r\n                    <span>任务量：</span>\r\n                    <span><%=v.targetCont%>人</span>\r\n                </div>\r\n                <img src="<%=imgPath%>" alt="">\r\n            </div>\r\n            <!-- <div class="fullRate">\r\n                <div class="completeRate" style="width:100%;"></div>\r\n            </div> -->\r\n            <div class="acceptedBtn <%=btnCls%>" data-uuid="<%=v.uuid%>" data-index="i">\r\n                <img src="app_img/accptedBtn.png" alt="">\r\n            </div>\r\n        </div>\r\n    <% }) %>\r\n</script>';});


define('text!view/marketing-tasks/tpl/_mission-list.html',[],function () { return '<div id="missionListContent" class="nav-wrapper">\r\n    <div class="refresh_inner">\r\n        <div class="weui-pull-to-refresh-layer">\r\n            <div class="pull-to-refresh-arrow"></div>\r\n            <div class="pull-to-refresh-preloader"></div>\r\n            <div class="down">下拉刷新</div>\r\n            <div class="up">释放刷新</div>\r\n            <div class="refresh">正在刷新...</div>\r\n            <div class="done">刷新完成</div>\r\n        </div>\r\n\r\n        <div class="list-warning">\r\n            搜索结果如下，点此查看全部\r\n        </div>\r\n\r\n        <div class="mission_wrapper"></div>\r\n    </div>\r\n</div>\r\n\r\n<script id="listTpl" type="text/template">\r\n<%\r\n    if(data.rows.length == 0){\r\n%>\r\n    <div class="warning-panel">暂无数据</div>\r\n<%   \r\n    }\r\n%>\r\n\r\n<%\r\n    _.each(data.rows,function(v,i){\r\n        var link = \'detail\';\r\n        if(v.signStatus){\r\n            link = \'list\';\r\n        }\r\n%>\r\n<div class="mission_box" data-link="<%=link%>" data-uuid="<%=v.uuid%>">\r\n    <h3><%=v.title%></h3>\r\n    <p>派发时间：<%=v.beginTime.substr(0, 16)%></p>\r\n    <p>完成时限：<%=v.endTime.substr(0, 16)%></p>\r\n    <p>客户数：<%=v.targetCont%></p>\r\n\r\n    <% if(v.signStatus){ %>\r\n        <div class="text">已签收</div>\r\n    <% }else{ %>\r\n        <div class="btn btn-accept" data-uuid="<%=v.uuid%>">签收任务</div>\r\n    <% } %>\r\n</div>\r\n<%\r\n    });\r\n%>\r\n\r\n<% if(data.hasNextPage || data.hasPreviousPage){ %>\r\n    <div class="list-control weui-row">\r\n        <%\r\n            var prevAttr = \'\',nextAttr = \'\'; \r\n            \r\n            if(!data.hasPreviousPage){\r\n                prevAttr = \'disabled\';\r\n            } \r\n            \r\n            if(!data.hasNextPage){\r\n                nextAttr = \'disabled\';\r\n            } \r\n        %> \r\n        <div class="weui-col-40">\r\n            <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n        </div>\r\n        <div class="weui-col-20"><%=data.pageNum%>/<%=data.pages%></div>\r\n        <div class="weui-col-40">\r\n            <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n        </div>\r\n    </div>\r\n<% } %>\r\n\r\n</script>';});

/**
 *  营销首页-任务列表
 */

define('view/marketing-tasks/mission-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_mission-list.html','view/online_marketing/mission-detail','view/online_marketing/mission-service'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/online_marketing/tpl/_mission-list.html');

    var MissionDetail = require('view/online_marketing/mission-detail');
    var MissionService = require('view/online_marketing/mission-service');

    var View = Backbone.View.extend({
        el: '.content-content',
        events: {
            'tap #missionListContent .list-warning': 'initList',
            'tap #missionListContent .btn-prev,.btn-next': 'viewPage',
            'tap #missionListContent .btn-accept': 'signMission',
            'tap #missionListContent .mission_box': 'viewDetail'
        },
        viewDetail: function (e) {
            var $e = $(e.currentTarget);
            var link = $e.data('link');
            var uuid = $e.data('uuid');

            if(link == 'detail'){
                var view = new MissionDetail({
                    sign: false,
                    uuid: uuid
                });
                view.show();
            }else if(link == 'list'){
                var view = new MissionService({
                    uuid: uuid
                });
                view.show();
            }
        },
		/**
         * 签收
         */
        signMission: function (e) {
            var $e = $(e.currentTarget);
            var uuid = $e.data('uuid');

            $.showLoading();
            businessDelegate.signMission({
                uuid: uuid
            }, _.bind(function (data) {
                $.hideLoading();
                $.toast('签收成功');

                this.getList(this.current_page, $.noop);
            }, this), _.bind(function (err) {
                $.jtoast(err);
                $.hideLoading();
            }, this));

            return false;
        },
        /**
         * 列表操作
         */
        searchByKeyword: function ($input) {
            this.$input = $input;

            if (!this.data) {
                return;
            }

            this.search_keyword = '';
            var keyword = $.trim(this.$input.val());
            if (!keyword) {
                return;
            }

            this.search_keyword = keyword;

            this.$warning.show();
            this.getList(1, $.noop);
        },
        initList: function () {
            this.$warning.hide();
            this.$input.val('');
            this.search_keyword = '';	//搜索关键字

            this.getList(1, $.noop);
        },
        viewPage: function (e) {
            var page = $(e.currentTarget).data('page');
            this.getList(page, $.noop);
        },
        getList: function (page, callback) {
            this.current_page = page;

            if (!this.isPullRefresh) {
                this.$listContent.empty();
                $.showLoading();
            } else {
                this.isPullRefresh = 0;
            }

            businessDelegate.getMissionList({
                page: this.current_page,
                rows: this.rows,
                title: this.search_keyword
            }, _.bind(function (data) {
                this.data = data.obj;

                var tpl = _.template(this.listTemplate)({ data: data.obj });
                this.$listContent.html(tpl);

                this.$listWrapper.scrollTop(0);
                if (!this.isPullRefresh) {
                    $.hideLoading();
                }

                callback();
            }, this), _.bind(function (err) {
                this.$listContent.html(this.errorHTML);
                $.jtoast(err);
                if (!this.isPullRefresh) {
                    $.hideLoading();
                }

                callback();
            }, this));
        },
        initialize: function () {
            if (!window.user.taskSing) {
                this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
            }

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#missionListContent > div');
            this.$listContent = this.$('.mission_wrapper');
            this.listTemplate = this.$('#listTpl').html();
            this.$warning = this.$('.list-warning');
            this.$input;

            this.current_page = 1;	//当前页
            this.rows = 10; //每页显示数目

            this.data = null;	//当前内容
            this.search_keyword = ''; //搜索关键字

            this.isPullRefresh = 0;
            this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

            //下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
        },
        render: function () {
            return this;
        }
    });

    return View;
});

/**
 * 常客查询
 */

define('view/marketing-tasks/fixture-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_fixture-list.html','view/online_marketing/fixture-detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/_fixture-list.html');
    var Detail = require('view/online_marketing/fixture-detail');

	var View = Backbone.View.extend({
		el: '.content-content',
        events: {
            'tap #fixtureListContent .list-warning': 'initList',
            'tap #fixtureListContent .btn-prev,.btn-next': 'viewPage',
            'tap .fixture_box > li': 'viewDetail'
		},
        viewDetail: function(e){
            var uuid = $(e.currentTarget).data('uuid');
            var view = new Detail({
                uuid: uuid
            });
            view.show();
        },
		searchByKeyword: function ($input) {
            this.$input = $input;

			if(!this.data){
				return;
			}

			this.search_keyword = '';
			var keyword = $.trim(this.$input.val());
			if (!keyword) {
				return;
			}

			this.search_keyword = keyword;

			this.$warning.show();
			this.getList(1, $.noop);
		},
		initList: function () {
			this.$warning.hide();
			this.$input.val('');
			this.search_keyword = '';	//搜索关键字

			this.getList(1, $.noop);
		},
		viewPage: function (e) {
			var page = $(e.currentTarget).data('page');
			this.getList(page, $.noop);
		},
		getList: function (page, callback) {
			this.current_page = page;

			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getMarketingFixtureList({
				page: this.current_page,
				rows: this.rows,
				mobile: this.search_keyword
			}, _.bind(function (data) {
				this.data = data.obj;

				var tpl = _.template(this.listTemplate)({ data: data.obj });
				this.$listContent.html(tpl);

				this.$listWrapper.scrollTop(0);
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this), _.bind(function (err) {
				this.$listContent.html(this.errorHTML);
				$.jtoast(err);
				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this));
		},
		initialize: function () {
			if(!window.user.regularVisitors){
				this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
			}

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#fixtureListContent > div');
			this.$listContent = this.$('.fixture_wrapper');
			this.listTemplate = this.$('#listTpl').html();
			this.$warning = this.$('.list-warning');
			this.$input;

			this.current_page = 1;	//当前页
			this.rows = 10; //每页显示数目

			this.data = null;	//当前内容
			this.search_keyword = ''; //搜索关键字

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getList(1, _.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getList(1, $.noop);
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 常客查询
 */

define('view/marketing-tasks/pay-list',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/_pay-list.html','view/online_marketing/pay-detail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/online_marketing/tpl/_pay-list.html');
    var Detail = require('view/online_marketing/pay-detail');

	var View = Backbone.View.extend({
		el: '.content-content',
        events: {
            'tap .pay_box > li': 'viewDetail'
		},
        viewDetail: function(e){
            var uuid = $(e.currentTarget).data('uuid');
            var view = new Detail({
                uuid: uuid
            });
            view.show();
        },
		getMonth: function (callback) {
			if (!this.isPullRefresh) {
				this.$listContent.empty();
				$.showLoading();
			} else {
				this.isPullRefresh = 0;
			}

			businessDelegate.getMarketingPayMonthByChannel({
				uuid: this.options.uuid
			}, _.bind(function (data) {
				var tpl = _.template(this.listTemplate)({ list: data.obj });
				this.$listContent.html(tpl);
				this.$listWrapper.scrollTop(0);

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this), _.bind(function (err) {
				$.jtoast(err);
				this.$listContent.html(this.errorHTML);

				if (!this.isPullRefresh) {
					$.hideLoading();
				}

				callback();
			}, this));
		},
		initialize: function (options) {
            this.options = options;

			if(!window.user.queryFee){
				this.$el.empty().append('<div class="warning-panel">您没有权限查看</div>');
                return;
			}

            this.$el.empty().append(template);

            this.$listWrapper = this.$('#payListContent > div');
			this.$listContent = this.$('.pay_wrapper');
			this.listTemplate = this.$('#listTpl').html();

			this.isPullRefresh = 0;
			this.errorHTML = '<div class="warning-panel">无法获取数据</div>';

			//下拉刷新
            this.$listWrapper.pullToRefresh();
            this.$listWrapper.on("pull-to-refresh", _.bind(function () {
                this.isPullRefresh = 1;
                this.getMonth(_.bind(function () {
                    this.$listWrapper.pullToRefreshDone();
                }, this));
            }, this));

            this.getMonth($.noop);
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/marketing-tasks/tpl/overView.html',[],function () { return '<div class="marketing-tasks bg-gray" id="maketingTaskOverView">\r\n    <div class="search-content">\r\n\r\n    </div>\r\n    <div class="list-content" style="overflow-y:auto">\r\n        <!-- <div class="list-item">\r\n            <div style="font-size: 16px;font-weight: bolder;">\r\n                <span>当前序号：</span>\r\n                <span>1</span>\r\n            </div>\r\n            <div class="colorBlue">\r\n                <span>客户手机号：</span>\r\n                <span>13578948561</span>\r\n            </div>\r\n            <div>\r\n                <span class="colorGrey">状态：</span>\r\n                <span class="colorRed">已反馈</span>\r\n            </div>\r\n        </div> -->\r\n    </div>\r\n</div>\r\n<script id="maketingTaskSearch" type="text/template">\r\n        <div class="app_search clearfix">\r\n            <div class="pull-right">\r\n                <div class="btn btn-primary btn-fixture-search">查询</div>\r\n            </div>\r\n            <div class="overhidden">\r\n                <i class="iconfont icon-sousuo"></i>\r\n                <input type="text" class="form-control input-fixture-search" placeholder="请输入关键字搜索">\r\n            </div>\r\n        </div>\r\n    </script>\r\n\r\n    <script id="maketingTaskOverItem" type="text/template">\r\n        <% _.each(obj.rows, function(v,i){%>\r\n            <div class="list-item <%=v.userResult==\'1\'||v.userResult==\'2\'?\'hide\':\'\'%>" data-uuid="<%=v.uuid%>" data-index="<%=(i+1)%>" data-alllength="<%=obj.totalRecord%>">\r\n                    <!-- <div style="font-size: 16px;font-weight: bolder;">\r\n                        <span>当前序号：</span>\r\n                        <span><%=(i+1)%></span>\r\n                    </div> -->\r\n                    <div class="colorBlue">\r\n                        <span>客户手机号<%=(i+1)%>：</span>\r\n                        <span><%=v.mobile.substring(0,3) + "****" + v.mobile.substring(7,12)%></span>\r\n                        <span class="goon <%=\'3\'==v.userResult?\'\':\'hide\'%>">继续</span>\r\n                    </div>\r\n                    <!-- <div>\r\n                        <span class="colorGrey">状态：</span>\r\n                        <span class="colorRed"><%=v.status%></span>\r\n                    </div> -->\r\n                </div>\r\n        <% }) %>\r\n    </script>';});


define('text!view/marketing-tasks/tpl/detail.html',[],function () { return '<div class="maketing-task-tetail  bg-gray" id="maketingTaskDetail">\r\n    <div class="task-recommended">\r\n\r\n    </div>\r\n    <div class="zezhao hide"></div>\r\n    <div class="choose-body hide"></div>\r\n    <div class="fail-reseason hide">\r\n        <div class="fail-reseason-title">烦请说明原因</div>\r\n        <textarea placeholder="请输入..."></textarea>\r\n        <div class="tips">离成功就差一点点了。</div>\r\n        <div class="fail-operation-btn">\r\n            <span class="cancle-send" style="display: table-cell;padding: 5px 0px;">再试试</span>\r\n            <span class="sendReseaon" style="display: table-cell;padding: 5px 0px;">确认</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script id="maketingTaskDetailTemplate" type="text/template">\r\n    <div class="simple-info colorGrey">\r\n            <div class="paddingTop10 ">\r\n                <span>客户号码：</span>\r\n                <span><%=data.customerMobile.substring(0,3) + "****" + data.customerMobile.substring(7,12)%></span>\r\n            </div>\r\n            <div class="<%=data.businessTitleOne?\'\':\'hide\'%> businessTitle business-contianer">\r\n                <span class="business-desc">主推业务一：</span>\r\n                <span class="business-info"><%=data.businessTitleOne%></span>\r\n            </div>\r\n            <div class="<%=data.businessTitleOne?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">业务介绍：</span>\r\n                <span class="business-info"><%=data.businessIntroductionOne%></span>\r\n            </div>\r\n            <div class="paddingBottom10 <%=data.markFormworkOne?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">营销话术模板：</span>\r\n                <span class="business-info"><%=data.markFormworkOne%></span>\r\n            </div>\r\n            <div class="paddingTop10 <%=data.businessTitleTwo?\'\':\'hide\'%> businessTitle business-contianer">\r\n                <span class="business-desc">主推业务二：</span>\r\n                <span class="business-info"><%=data.businessTitleTwo%></span>\r\n            </div>\r\n            <div class="<%=data.businessTitleTwo?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">业务介绍：</span>\r\n                <span class="business-info"><%=data.businessIntroductionTwo%></span>\r\n            </div>\r\n            <div class="paddingBottom10 <%=data.businessTitleTwo?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">营销话术模板：</span>\r\n                <span class="business-info"><%=data.markFormworkTwo%></span>\r\n            </div>\r\n            <div class="paddingTop10 <%=data.businessTitleThree?\'\':\'hide\'%> businessTitle business-contianer">\r\n                <span class="business-desc">主推业务三：</span>\r\n                <span class="business-info"><%=data.businessTitleThree%></span>\r\n            </div>\r\n            <div class="<%=data.businessTitleThree?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">业务介绍：</span>\r\n                <span class="business-info"><%=data.businessIntroductionThree%></span>\r\n            </div>\r\n            <div class="paddingBottom10 <%=data.businessTitleThree?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">营销话术模板：</span>\r\n                <span class="business-info"><%=data.markFormworkThree%></span>\r\n            </div>\r\n            <div class="paddingTop10 paddingBottom10 <%=data.businessTitleFour?\'\':\'hide\'%> businessTitle business-contianer">\r\n                <span>主推业务四：</span>\r\n                <span class="business-info"><%=data.businessTitleFour%></span>\r\n            </div>\r\n            <div class="<%=data.businessTitleFour?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">业务介绍：</span>\r\n                <span class="business-info"><%=data.businessIntroductionFour%></span>\r\n            </div>\r\n            <div class="paddingBottom10 <%=data.businessTitleFour?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">营销话术模板：</span>\r\n                <span class="business-info"><%=data.markFormworkFour%></span>\r\n            </div>\r\n            <div class="paddingTop10 paddingBottom10 <%=data.businessTitleFive?\'\':\'hide\'%> business-contianer">\r\n                <span>主推业务五：</span>\r\n                <span class="business-info"><%=data.businessTitleFive%></span>\r\n            </div>\r\n            <div class="<%=data.businessTitleFive?\'\':\'hide\'%> business-contianer">\r\n                <span class="business-desc">业务介绍：</span>\r\n                <span class="business-info"><%=data.businessIntroductionFive%></span>\r\n            </div>\r\n            <div class="paddingBottom10 <%=data.businessTitleFive?\'\':\'hide\'%> business-contianer">\r\n                <span>营销话术模板：</span>\r\n                <span class="business-info"><%=data.markFormworkFive%></span>\r\n            </div>\r\n            <img src="app_img/tel-number.png" class="callphone" alt="" id="taskReturnCallPhone" data-phonenum="<%=data.customerMobile%>">\r\n            <img src="app_img/dysms.png" class="sendMsg" alt="" id="taskReturnSendMsg" data-phonenum="<%=data.customerMobile%>">\r\n        </div>\r\n        <div class="detail-info">\r\n            <div class="detail-block">\r\n                <div class="title bgblue">\r\n                    基本信息\r\n                    <span class="showOrHide"></span>\r\n                </div>\r\n                <div style="overflow: hidden;">\r\n                    <!-- <div class="info-item">\r\n                        <div>客户号码：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.customerMobile.substring(0,3) + "****" + data.customerMobile.substring(7,12)%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>客户星级：</div>\r\n                        <div style="padding-right: 14px;"><%=data.customerLevel%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>集团类别：</div>\r\n                        <div style="padding-right: 14px;"><%=data.areas%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>集团名称：</div>\r\n                        <div style="padding-right: 14px;"><%=data.title%></div>\r\n                    </div> -->\r\n                    <div class="info-item">\r\n                        <div>客户属性：</div>\r\n                        <div style="padding-right: 14px;"><%=data.customerAttribute%></div>\r\n                    </div>\r\n                    <!-- <div class="info-item">\r\n                        <div>客户年龄：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.customerAttribute%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>客户机龄：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.customerPhoneAge%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>在网时长：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.onlineTime%></div>\r\n                    </div> -->\r\n                    <div class="info-item">\r\n                        <div>归属网点：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.channelUUID%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>当前状态：</div>\r\n                        <div style="padding-right: 14px;"><%=data.customerStatus%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>主套餐：</div>\r\n                        <div style="padding-right: 14px;"><%=data.mainPackage%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>流量套餐：</div>\r\n                        <div style="padding-right: 14px;"><%=data.flowPackage%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>月均消费：</div>\r\n                        <div style="padding-right: 14px;"><%=data.costFeeMonth%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>月均通话时长：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.phoneTimeMonth%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>月均流量：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.flowMonth%></div>\r\n                    </div>\r\n                    <!-- <div class="info-item">\r\n                        <div>是否风险：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.isRiskCustomer%></div>\r\n                    </div> -->\r\n                    <div class="info-item">\r\n                        <div>是否宽带：</div>\r\n                        <div style="padding-right: 14px;"><%=data.isInternetCustomer%></div>\r\n                    </div>\r\n                    <!-- <div class="info-item">\r\n                        <div>双卡终端：</div>\r\n                        <div style="padding-right: 14px;"><%=data.isTwoSimTerm%></div>\r\n                    </div> -->\r\n                    <div class="info-item">\r\n                        <div>最高套餐档次：</div>\r\n                        <div style="padding-right: 14px;"><%=data.topPackage%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>超套流量：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.overFlow%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>超套语音：</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.overVoice%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>超套流量费</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.overFlowFee%></div>\r\n                    </div>\r\n                    <div class="info-item">\r\n                        <div>超套语音费</div>\r\n                        <div class="colorBlue" style="padding-right: 14px;"><%=data.overVoiceFee%></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="detail-block" style="pointer-events: <%=\'1\'==data.userResult||\'2\'==data.userResult?\'none\':\'\'%>">\r\n                <div class="title bgblue">任务回填</div>\r\n                <div class="task-operation-btn bgblue taskSuccess" data-result="1">营销成功</div>\r\n                <div class="task-operation-btn lightgreen taskFailedAndGiveUp" data-result="2">营销不成功（放弃）</div>\r\n                <div class="task-operation-btn lightred taskFaileContinue" data-result="3">营销不成功（继续）</div>\r\n                <!-- <div class="radioselect">\r\n                    <div class="selectRadio" data-index="0" data-result="1" val="checked">\r\n                        <span class="myradiock"></span>\r\n                        <span class="showText">成功</span>\r\n                    </div>\r\n\r\n                    <div class="selectRadio" data-index="1" data-result="2" >\r\n                        <span class="myradio"></span>\r\n                        <span class="showText">不成功</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <select name="" id="taskReturnSelect">\r\n                        <option value="条目一">条目一</option>\r\n                        <option value="条目二">条目二</option>\r\n                        <option value="条目三">条目三</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <textarea name="" id="taskReturnSelectSuggest"></textarea>\r\n                </div>\r\n                <div class="submitBtnTask <%=\'1\'==data.userResult||\'2\'==data.userResult?\'hide\':\'\'%>">\r\n                    <img src="app_img/submitBtn.png" alt="">\r\n                </div> -->\r\n            </div>\r\n        </div>\r\n</script>\r\n<script id="chooseMsgModule" type="text/template">\r\n        <div class="recorder-container <%=data.businessTitleOne?\'\':\'hide\'%>">\r\n            <div class="one-record">\r\n                <span class="myradiock"  data-msgcontent="<%=data.smsContentOne%>" data-mobile="<%=data.customerMobile%>"></span>\r\n                <span class="decri"><%=data.businessTitleOne%></span>\r\n            </div>\r\n            <div class="smsContentOne"><%=data.smsContentOne%></div>\r\n        </div>\r\n        <div class="recorder-container <%=data.businessTitleTwo?\'\':\'hide\'%>">\r\n            <div class="one-record">\r\n                <span class="myradiock"  data-msgcontent="<%=data.smsContentTwo%>" data-mobile="<%=data.customerMobile%>"></span>\r\n                <span class="decri"><%=data.businessTitleTwo%></span>\r\n            </div>\r\n            <div class="smsContentOne"><%=data.smsContentTwo%></div>\r\n        </div>\r\n        <div class="recorder-container <%=data.businessTitleThree?\'\':\'hide\'%>">\r\n            <div class="one-record">\r\n                <span class="myradiock" data-msgcontent="<%=data.smsContentThree%>" data-mobile="<%=data.customerMobile%>"></span>\r\n                <span class="decri"><%=data.businessTitleThree%></span>\r\n            </div>\r\n            <div class="smsContentOne"><%=data.smsContentThree%></div>\r\n        </div>\r\n        <div class="recorder-container <%=data.businessTitleFour?\'\':\'hide\'%>">\r\n            <div class="one-record">\r\n                <span class="myradiock"  data-msgcontent="<%=data.smsContentFour%>" data-mobile="<%=data.customerMobile%>"></span>\r\n                <span class="decri"><%=data.businessTitleFour%></span>\r\n            </div>\r\n            <div class="smsContentOne"><%=data.smsContentFour%></div>\r\n        </div>\r\n        <div class="recorder-container <%=data.businessTitleFive?\'\':\'hide\'%>">\r\n            <div class="one-record">\r\n                <span class="myradiock"  data-msgcontent="<%=data.smsContentFive%>" data-mobile="<%=data.customerMobile%>"></span>\r\n                <span class="decri"><%=data.smsContentFive%></span>\r\n            </div>\r\n            <div class="smsContentOne"><%=data.smsContentOne%></div>\r\n        </div>\r\n        <div class="operation-btn">\r\n            <span class="send" style="border-right: 1px solid lightgray;border-top: 1px solid lightgray">发送</span>\r\n            <span class="cancle" style="border-top: 1px solid lightgray">取消</span>\r\n        </div>\r\n</script>';});

/**
*   基础页面定义
**/

define('view/marketing-tasks/detail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/marketing-tasks/tpl/detail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
	var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/marketing-tasks/tpl/detail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
		events: {
			"tap .selectRadio": "selectRadio",
			"change #taskReturnSelect": "changeTaskReturn",
			"tap .submitBtnTask": "submitTask",
			"tap #taskReturnCallPhone": "callPhone",
			"tap #taskReturnSendMsg": "showBorder",
			"tap #maketingTaskDetail .title .showOrHide": "showOrHideBase",
			"tap .choose-body .recorder-container": "checkRadio",
			"tap .choose-body .operation-btn .cancle": "hideBorder",
			"tap .zezhao": "hideBorder",
			"tap .choose-body .operation-btn .send": "sendMsg",
			"tap .taskSuccess": "taskSuccess",
			"tap .taskFailedAndGiveUp": "taskSuccess",
			"tap .taskFaileContinue": "taskSuccess" ,
			"tap .fail-operation-btn .sendReseaon": "failResean",
			"tap .fail-operation-btn .cancle-send": "cancleSendMsg"
			// "tap .taskFaileContinue": "gotoNextPage" 
		},
		sendMsg: function () {
			var checks = $("#maketingTaskDetail .choose-body .one-record>span.myradiock-cked");
			
			var mobile = checks.data("mobile") ;
			var msgcontent = checks.data("msgcontent");
			// $.showLoading();
			phonegaputil.sendSMS([mobile], msgcontent, _.bind(function () {

			}, this), function (err) {
				console.log(err);
				$.jtoast('跳转失败请重试');
			});
			// for (var i = 0; i < checks.length; i++) {
			// 	var msgContnet = $(checks[i]).data("msgcontent");
			// 	var mobile = $(checks[i]).data("mobile")
			// 	//sendMarketingTaskMsg
			// 	businessDelegate.sendMarketingTaskMsg({
			// 		mobile: mobile,
			// 		smsContent: msgContnet
			// 	}, _.bind(function (data) {
			// 		$.hideLoading();
			// 	}, this), _.bind(function (err) {
			// 		$.hideLoading();
			// 		$.jtoast(err);
			// 		// callback();
			// 	}, this));
			// }
			// $.jtoast("发送成功");
			// $.hideLoading();
			$("#maketingTaskDetail .zezhao").addClass("hide");
			$("#maketingTaskDetail .choose-body").addClass("hide");
		},
		hideBorder: function () {
			$("#maketingTaskDetail .zezhao").addClass("hide");
			$("#maketingTaskDetail .choose-body").addClass("hide");
			$("#maketingTaskDetail .fail-reseason").addClass("hide");
			this.showOrHideBase();
		},
		checkRadio: function (e) {
			var doms = $(e.currentTarget).siblings() ;
			doms.find("span:first-child").addClass("myradiock");
			doms.find("span:first-child").removeClass("myradiock-cked");
			$(e.currentTarget).find("span:first-child").addClass("myradiock-cked");
			$(e.currentTarget).find("span:first-child").removeClass("myradiock");
			// for(var i = 0 ; i < doms.length ;i++){
			// 	if(doms[i] == e.currentTarget){//选中
			// 		$(e.currentTarget).find("span:first-child").addClass("myradiock-cked");
			// 		$(e.currentTarget).find("span:first-child").removeClass("myradiock");
			// 	}else{
			// 		$(e.currentTarget).find("span:first-child").addClass("myradiock");
			// 		$(e.currentTarget).find("span:first-child").removeClass("myradiock-cked");
			// 	}
			// }
			//是否被选中
			// if ($(e.currentTarget).find("span:first-child").hasClass("myradiock-cked")) {
			// 	$(e.currentTarget).find("span:first-child").addClass("myradiock");
			// 	$(e.currentTarget).find("span:first-child").removeClass("myradiock-cked");
			// } else {
			// 	$(e.currentTarget).find("span:first-child").addClass("myradiock-cked");
			// 	$(e.currentTarget).find("span:first-child").removeClass("myradiock");
			// }
		},
		showOrHideBase: function (e) {
			if ($(e.currentTarget).parent().next().is(":hidden")) {
				$(e.currentTarget).parent().next().show();
				$(e.currentTarget).removeClass("transform180");
			} else {
				$(e.currentTarget).parent().next().hide();
				$(e.currentTarget).addClass("transform180");
			}
		},
		showBorder: function (e) {
			if (this.pageData.businessTitleOne || this.pageData.businessTitleTwo || this.pageData.businessTitleThree || this.pageData.businessTitleFour || businessTitleFive) {
				$("#maketingTaskDetail .zezhao").removeClass("hide");
				$("#maketingTaskDetail .choose-body").removeClass("hide");
			} else {
				$.jtoast("无可用话术模板");
			}
		},
		callPhone: function (e) {
			var phone = $(e.currentTarget).data("phonenum");
			window.location.href = "tel:" + phone;
		},
		changeTaskReturn: function (e) {
			var val = $(e.currentTarget).val();
			this.$("#taskReturnSelectSuggest").val(val);
		},
		submitTask: function (e) {
			var result = this.$("#maketingTaskDetail .radioselect>div[val='checked']").data("result");
			var suggest = this.$("#taskReturnSelectSuggest").val();
			var obj = {
				uuid: this.uuid,
				userResult: result,
				userFeedback: suggest
			}
			$.showLoading();
			businessDelegate.markJobsNewTargetDetailsSave(obj, _.bind(function (data) {
				$.hideLoading();
				$.jtoast("提交成功");
				$(".submitBtnTask").addClass("hide");
				this.$(".btn-back").trigger("tap");
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				// callback();
			}, this));
		},
		taskSuccess: function (e) {
			var result = $(e.currentTarget).data("result");
			this.taskResult = result ;
			var obj = {
				uuid: this.uuid,
				userResult: result,
				userFeedback: ""
			}
			if ("1" == obj.userResult) {
				this.ajaxData(obj);
				window.successNum++ ;
			} else {
				$(".zezhao").removeClass("hide");
				$(".fail-reseason").removeClass("hide");
				this.showOrHideBase({
					currentTarget: $("#maketingTaskDetail .title .showOrHide")[0]
				});
			}
		},
		failResean: function(e){
			var val = $(e.currentTarget).parent().find("textarea").val();
			var obj = {
				uuid: this.uuid,
				userResult: this.taskResult,
				userFeedback: val
			}
			this.ajaxData(obj);
		},
		cancleSendMsg: function(e){
			$(".zezhao").addClass("hide");
			$(".fail-reseason").addClass("hide")
		},
		ajaxData: function (obj) {
			$.showLoading();
			businessDelegate.markJobsNewTargetDetailsSave(obj, _.bind(function (data) {
				$.hideLoading();
				var msg ;
				if(obj.userResult == "1"){//成功
					msg = "恭喜获得成功" ;
				}else if(obj.userResult == "2"){//放弃
					msg = "客户第一，再接再厉！" ;
				}else{//失败并继续
					msg = "离成功只有一步之遥了哟！" ;
				}
				$.jtoast(msg);
				this.gotoNextPage( obj.userResult == "1"|| obj.userResult == "2" ? true : false);
				// this.$(".btn-back").trigger("tap");
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);
				// callback();
			}, this));
		},
		gotoNextPage: function (boolean) {
			var thisItem = $(".list-content .list-item[data-uuid='" + this.uuid + "']");
			var nextItem = $(".list-content .list-item[data-uuid='" + this.uuid + "']").next();
			if (boolean) {
				thisItem.remove();
				// thisItem.addClass("hide");
			}else{
				thisItem.find(".goon").removeClass("hide");
			}
			if (nextItem) {
				var nextId = nextItem.data("uuid");
				var index = nextItem.data("index") ;
				var allLength = nextItem.data("alllength") ; 
				
				this.initialize({
					jobUuid: this.taskId,
					uuid: nextId,
					index: index ,
					allNumber: allLength
				});
			} else {
				this.$(".btn-back").trigger("tap");
			}
		},
		//getMarkJobsNewTargetDetails
		initPage: function () {
			businessDelegate.getMarkJobsNewTargetDetails({
				uuid: this.uuid
			}, _.bind(function (data) {
				this.pageData = data.obj;
				var tpl = _.template(this.detailTemplate)({ data: data.obj });
				var borderTpl = _.template(this.sendBorderTemplate)({ data: data.obj });
				this.$("#maketingTaskDetail .task-recommended").empty();
				this.$("#maketingTaskDetail .task-recommended").html(tpl);
				this.$("#maketingTaskDetail .choose-body").empty();
				this.$("#maketingTaskDetail .choose-body").html(borderTpl);
			}, this), _.bind(function (err) {
				// callback();
			}, this));
		},
		selectRadio: function (e) {
			if ("checked" == $(e.currentTarget).attr('val')) {//当前选中
				return;
			} else {
				var index = $(e.currentTarget).data('index');
				var currentTarget = this.$("#maketingTaskDetail .selectRadio>span:first-child")[index];
				var otherTarget = this.$("#maketingTaskDetail .selectRadio>span:first-child")['0' == index ? '1' : '0'];
				this.$("#maketingTaskDetail .selectRadio").removeAttr("val");
				$(e.currentTarget).attr("val", "checked");

				$(currentTarget).removeClass("myradio");
				$(currentTarget).addClass("myradiock");
				$(otherTarget).removeClass("myradiock");
				$(otherTarget).addClass("myradio");
			}
		},
		initialize: function (options) {
			this.header = new AppHeader({
				host: this,
				main: false, //是否主页面
				title: "任务反馈"
			});
			this.$el.empty().append(this.header.$el).append(template);
			this.$(".common-header .right-button").removeClass("hide") ;
			this.$(".common-header .right-button").addClass("marketing-tasksProccess") ;
			this.$(".common-header .right-button").append("(<span class='taskIndex'>" + window.successNum + "/" + options.allNumber +"</span>)");
			this.taskId = options.jobUuid;
			this.uuid = options.uuid;
			this.detailTemplate = this.$("#maketingTaskDetailTemplate").html();
			this.sendBorderTemplate = this.$("#chooseMsgModule").html();
			this.initPage();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/marketing-tasks/tpl/taskDetail.html',[],function () { return '<div class="maketing-task-tetail2  bg-gray" id="maketingTaskDetail2" style="height: 100%;width: 100%;">\r\n    <div class="task-recommended">\r\n\r\n    </div>\r\n    <div class="export">\r\n        <span>导出营销服务单</span>\r\n    </div>\r\n</div>\r\n<script id="maketingTaskDetailTemplate2" type="text/template">\r\n   <div class="showItem">\r\n        <span>工单名称：</span><span><%=data.title%></span>\r\n    </div>\r\n    <div class="showItem">\r\n        <span>客户数：</span><span><%=data.targetCont%></span>\r\n    </div>\r\n    <div class="showItem">\r\n        <span>派发时间：</span><span><%=data.beginTime%></span>\r\n    </div>\r\n    <div class="showItem">\r\n        <span>完成时间：</span><span><%=data.endTime%></span>\r\n    </div>\r\n    <div class="showItem">\r\n        <span>营销服务政策：</span><span><%=data.serviceDetail%></span>\r\n    </div>\r\n    <div class="showItem">\r\n        <span>营销服务口径：</span><span><%=data.serviceCaliber%></span>\r\n    </div>\r\n</script>';});

/**
*   基础页面定义
**/

define('view/marketing-tasks/taskDetail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/marketing-tasks/tpl/taskDetail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

	require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/marketing-tasks/tpl/taskDetail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var View = SlidePage.extend({
		events: {
			"tap .export": "exportDoc" ,
		},
		exportDoc: function(e){
			//markJobsNewTargetEmail
			$.showLoading();
			businessDelegate.markJobsNewTargetEmail({
				uuid : this.uuid
			},_.bind(function (data) {
				$.hideLoading();
				$.jtoast("导出成功");
			}, this), _.bind(function (err) {
				// callback();
			}, this));
		},
		changeTaskReturn: function(e){
			var val = $(e.currentTarget).val() ;
			this.$("#taskReturnSelectSuggest").val(val);
		},
		//getMarkJobsNewTargetDetails
		initPage: function(){
			businessDelegate.getmarkJobsDetailsNew({
				uuid : this.uuid
			},_.bind(function (data) {
				var tpl = _.template(this.maketingTaskDetailTemplate2)({ data: data.obj });
				this.$("#maketingTaskDetail2 .task-recommended").empty();
				this.$("#maketingTaskDetail2 .task-recommended").html(tpl);
			}, this), _.bind(function (err) {
				// callback();
			}, this));
		},
		initialize: function (options) {
			this.header = new AppHeader({
				host: this,
				main: false, //是否主页面
				title: "任务详情"
			});
			this.$el.empty().append(this.header.$el).append(template);
			this.uuid = options.uuid ;
			this.maketingTaskDetailTemplate2 = this.$("#maketingTaskDetailTemplate2").html();
			this.initPage();
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
*   基础页面定义
**/

define('view/marketing-tasks/overview',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/marketing-tasks/tpl/overView.html','view/app-header','view/slide-page','view/marketing-tasks/detail','view/marketing-tasks/taskDetail'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/marketing-tasks/tpl/overView.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');

	var taskDetailView = require("view/marketing-tasks/detail");
	var taskDetailView2 = require("view/marketing-tasks/taskDetail");
	
	var View = SlidePage.extend({
        events: {
			"tap #maketingTaskOverView .list-item": "toDetail" ,
			"tap .right-button .taskDetail": "totaskDetail"
		},
		totaskDetail: function(e){
			var uuid = $(e.currentTarget).data("uuid") ;
            var view = new taskDetailView2({
				uuid: this.uuid 
			});
			view.show();
			return;
		},
        toDetail: function(e){
			var uuid = $(e.currentTarget).data("uuid") ;
			var index = $(e.currentTarget).data("index") ;
			var allLength = $(e.currentTarget).data("alllength")
            var view = new taskDetailView({
				jobUuid :  this.taskId ,
				uuid: uuid ,
				index: index ,
				allNumber: allLength
			});
			view.show();
			return;
		},
		getPageData: function(){
			businessDelegate.getMarkJobsNewTargetList({
				page : this.page ,
				rows :this.rows ,
				jobUuid :  this.taskId ,
				mobile: window.user.mobile ,
				customerChannelUuid: this.customerChannelUuid
			},_.bind(function (data) {
				this.serverData = data.obj.rows ;
				window.successNum = data.obj.totalRecord - data.obj.unfinishedRecord ;
				var tpl = _.template(this.maketingTaskOverItem)({ obj: data.obj });
				$("#maketingTaskOverView .list-content").empty();
				$("#maketingTaskOverView .list-content").html(tpl);
			}, this), _.bind(function (err) {
				// callback();
			}, this));
		},
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: "营销服务目标"
            });
			this.$el.empty().append(this.header.$el).append(template);
			//搜索模块
			this.taskId = options.uuid ;
			this.uuid = options.uuid ;
			this.customerChannelUuid = options.customerChannelUuid ;
			this.overViewSearch = this.$("#maketingTaskSearch").html() ;
			this.$("#maketingTask .search-content").empty();
			this.$("#maketingTask .search-content").html(this.overViewSearch);
			this.$("#maketingTaskOverView").prev().find(".right-button").removeClass("hide");
			this.$("#maketingTaskOverView").prev().find(".right-button").css("width","70px") ;
			this.$("#maketingTaskOverView").prev().find(".right-button").html("<div class='taskDetail' data-uuid='"+this.uuid+"'>任务详情</div>");
			
			this.maketingTaskOverItem = this.$("#maketingTaskOverItem").html();
			this.page  =  0 ;
			this.rows  = 500 ;
			this.getPageData();
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销首页
 */

define('view/marketing-tasks/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/marketing-tasks/tpl/index.html','text!view/marketing-tasks/tpl/_mission-list.html','view/app-header','view/marketing-tasks/mission-list','view/marketing-tasks/fixture-list','view/marketing-tasks/pay-list','view/marketing-tasks/overview'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/marketing-tasks/tpl/index.html');
	var missionListTemplate = require('text!view/marketing-tasks/tpl/_mission-list.html');

	var AppHeader = require('view/app-header');
	var MissionList = require('view/marketing-tasks/mission-list');
	var FixtureList = require('view/marketing-tasks/fixture-list');
	var PayList = require('view/marketing-tasks/pay-list');
	var overView = require("view/marketing-tasks/overview");

	var View = Backbone.View.extend({
		el: 'body',
        events: {
			'tap #marketingTasks .header_table .info': 'showAllInfoList',
			'tap .btn-mission-search': 'missionSearch',
			'tap #marketingTasks .list-item': 'toTaskOverView',
			"tap .acceptedBtn": "acceptedTask" ,
			'tap .headerContent .btn-back': 'backbutton' ,
			'tap .channel-list>p': 'changeChannel'
		},
		changeChannel: function (e) {
			var uuid = $(e.currentTarget).data("uuid");
			this.customerChannelUuid = uuid;
			var $parent = $(e.currentTarget).parent();
			$(e.currentTarget).remove();
			$parent.prepend(e.currentTarget);
			this.$el.find(".content-header").addClass("eventNone");
			this.renderNav();
			e.stopPropagation() ;
			$(e.currentTarget).parent().removeClass("active");
			$(e.currentTarget).parent().addClass("unactive");
			
		},
		backbutton: function() {
		    this.host.backbutton();
		},
		toTaskOverView: function(e){
			var type = $(e.currentTarget).data("type") ;
			var uuid = $(e.currentTarget).data("uuid");
            var view = new overView({
				type: type,
				uuid: uuid ,
				customerChannelUuid: this.customerChannelUuid
			});
			
			view.show();
			return;
		},
		acceptedTask: function(e){
			e.stopPropagation();
			var uuid = $(e.currentTarget).data("uuid");
			// markJobsNewTargetSign
			businessDelegate.markJobsNewTargetSign({
				uuid: uuid
			},_.bind(function (data) {
				$(e.currentTarget).addClass("hide");
				$.jtoast("接收成功");
				$(e.currentTarget).parent().find(".task-info-overview>img").attr("src","app_img/accepted.png");
				// callback();
			}, this), _.bind(function (err) {
				// callback();
			}, this));
		},
        missionSearch: function () {
			var $input = this.$('.input-mission-search');
			this.keyword = $input.val() ;
			this.renderNav();
			// this.missionList.searchByKeyword($input);
		},
		renderNav: function (type) {
			businessDelegate.getMarkJobsNewList({
				page: this.current_page,
				rows: this.rows,
				title: this.keyword ,
				customerChannelUuid :this.customerChannelUuid
			},_.bind(function (data) {
				//data.obj.rows
				this.$el.find(".content-header").removeClass("eventNone");
				var tpl = _.template(this.taskItem)({ list: data.obj.rows });
				this.$("#marketingTasks .content-content").empty();
				this.$("#marketingTasks .content-content").html(tpl);
				this.getChannelList();
				// callback();
			}, this), _.bind(function (err) {
				// callback();
			}, this));

		},
		renderUserInfoView: function () {
			$.showLoading();
			businessDelegate.getMarketingPermission(_.bind(function (data) {
				$.hideLoading();
				var tpl = _.template(this.userInfoTemplate)(data.obj);
				this.$('.header .tableContent').html(tpl);
				window.user.regularVisitors = data.obj.regularVisitors;	//获取常客查询权限
				window.user.taskSing = data.obj.taskSing;	//获取任务查询权限
				window.user.backfillTask = data.obj.backfillTask;	//获取任务回填权限
				window.user.queryFee = data.obj.queryFee;	//获取酬金查询权限
				this.renderNav(1);
			}, this), _.bind(function (err) {
				$.hideLoading();
				$.jtoast(err);

				this.renderNav(1);
			}, this));
		},
		showAllInfoList: function (e) {
			var $e = $(e.currentTarget);
			e.stopPropagation() ;
			if ($e.find('.list').hasClass('unactive')) {
				$e.find('.list').removeClass('unactive').addClass('active');
			} else {
				$e.find('.list').removeClass('active').addClass('unactive');
			}
		},
		getChannelList: function () {
			if (this.hasInitClannelList) {
				return;
			}
			businessDelegate.getMarketingChannel(_.bind(function (data) {
				this.hasInitClannelList = true;
				var html = '<p data-uuid="">全部</p>';
				for (var i = 0; i < data.obj.length; i++) {
					html += '<p data-uuid="' + data.obj[i].uuid + '">' + data.obj[i].title + '</p>';
				}
				this.$("#marketingTasks .channel-list").empty();
				this.$("#marketingTasks .channel-list").html(html);

			}, this), _.bind(function (err) {
			}, this));
		},
		backbutton: function () {
            Backbone.history.navigate(this.history, { trigger: true });
		},
		initialize: function (options) {
			//this.history = options.history;
			this.history = window._pageHistory?window._pageHistory:"work/index";
			window._pageHistory = "" ;
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '营销任务'
            });
			// this.$el.empty().append(this.header.$el).append(template);
			this.$el.empty().append(template);
			this.userInfoTemplate = this.$('#userInfoTpl').html();
			this.missionSearchTemplate = this.$('#missionSearchTpl').html();
			this.$('.content-header').html(this.missionSearchTemplate);
			this.myCustomerItemTemplate = this.$("#customUserItem").html();
			this.current_page=0 ;
			this.rows = 50 ;
			this.keyword = "" ;
			this.taskItem = this.$("#marketingTasksItem").html() ;
			//渲染用户信息
			this.renderUserInfoView();
		},
		render: function () {
			return this;
		}
	});

	return View;
});


define('text!view/data-statistic/tpl/index.html',[],function () { return '<div id="dataStatistic" class="data-statistic common-content bg-gray">\r\n    <div class="content indexPage">\r\n        <div class="menuCls" data-type="activity">APP活跃情况</div>\r\n        <div class="menuCls" data-type="taskOrder">营销任务工单情况</div>\r\n        <div class="menuCls" data-type="unlearn">业务学习情况</div>\r\n    </div>\r\n</div>';});

/**
 * 数据统计
 */

define('view/data-statistic/index',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/data-statistic/tpl/index.html','view/app-header','view/expecting'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/data-statistic/tpl/index.html');
    var AppHeader = require('view/app-header');
    var ExpectingView = require('view/expecting');

    var View = Backbone.View.extend({
        el: 'body',
        events: {
            'tap #dataStatistic .content .menuCls': 'viewPage'
        },
        viewPage: function (e) {
            var type = $(e.currentTarget).data("type") ;
            console.log("type :" , type);
            var link ;
            if("activity" == type){//app活跃情况
                //  /dataStatisticActivity/dataStatisticIndex/work/index
                link = "/dataStatisticActivity/dataStatisticIndex/work/index" ;
            }else if("unlearn" == type){
                link = "/dataStatisticUnlearn/dataStatisticIndex/work/index" ;
            }else if("taskOrder" == type){
                link = "/dataStatisticTaskOrder/dataStatisticIndex/work/index" ;
            }
            if(link){
                Backbone.history.navigate(link, { trigger: true });
            }else{
                var title = $(e.currentTarget).data('title') || "敬请期待";
                var view = new ExpectingView({
                    title: title
                });
                view.show();

                return;
            }
            
        },
        backbutton: function () {
            Backbone.history.navigate(this.history, { trigger: true });
        },
        initialize: function () {
            this.history = window._pageHistory?window._pageHistory:"work/index";
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '数据统计'
            });
            this.$el.empty().append(this.header.$el).append(template);
        },
        render: function () {
            return this;
        }
    });

    return View;
});


define('text!view/data-statistic/tpl/activity.html',[],function () { return '<div id="dataStatisticActivity" class="data-statistic-activity common-content bg-gray">\r\n\t<div class="content">\r\n\t\t<div class="queryTools">\r\n\t\t\t<div class="content height40">\r\n\t\t\t\t<div class="oneItem">\r\n\t\t\t\t\t<div class="queryResult rightWhite selectCity">分公司</div>\r\n\t\t\t\t\t<div class="moreQuery none cityList">\r\n\t\t\t\t\t\t<!-- <div class="city" data-uuid="1" data-text="长沙市">长沙市</div>\r\n\t\t\t\t\t\t<div class="city" data-uuid="2" data-text="湘潭市">湘潭市</div>\r\n\t\t\t\t\t\t<div class="city" data-uuid="3" data-text="株洲市">株洲市</div>\r\n\t\t\t\t\t\t<div class="city" data-uuid="4" data-text="常德市">常德市</div> -->\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="oneItem">\r\n\t\t\t\t\t<div class="queryResult rightWhite selectChannel">渠道</div>\r\n\t\t\t\t\t<div class="moreQuery none channelList">\r\n\t\t\t\t\t\t<!-- <div class="channel" data-uuid="1" data-text="渠道1">渠道1</div>\r\n\t\t\t\t\t\t<div class="channel" data-uuid="2" data-text="渠道2">渠道2</div>\r\n\t\t\t\t\t\t<div class="channel" data-uuid="3" data-text="渠道3">渠道3</div>\r\n\t\t\t\t\t\t<div class="channel" data-uuid="4" data-text="渠道4">渠道4</div> -->\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="oneItem">\r\n\t\t\t\t\t<div class="queryResult selectedPart">部门</div>\r\n\t\t\t\t\t<div class="moreQuery none partList">\r\n\t\t\t\t\t\t<!-- <div class="part" data-uuid="1" data-text="部门1">部门1</div>\r\n\t\t\t\t\t\t<div class="part" data-uuid="2" data-text="部门5">部门5</div>\r\n\t\t\t\t\t\t<div class="part" data-uuid="3" data-text="部门32">部门32</div>\r\n\t\t\t\t\t\t<div class="part" data-uuid="4" data-text="部门4">部门4</div> -->\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="resultBody">\r\n\t\t\t<div class="content">\r\n\t\t\t\t<div class="queryTime">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span class="query-label" style="display: inline-block;height: 100%; vertical-align: middle;">统计时间 :</span>\r\n\t\t\t\t\t\t<apan class="query-time" style="display: inline-block;width: 70%;white-space: nowrap;;height: 100% ;    vertical-align: -6px;">\r\n\t\t\t\t\t\t\t<input type="date" class="timeSelect timeStart">  -  <input type="date" class="timeSelect timeEnd">\r\n\t\t\t\t\t\t</apan>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="result">\r\n\t\t\t\t\t<div class="queryResult">\r\n\t\t\t\t\t\t<span class="result-label">APP注册人数 ：</span>\r\n\t\t\t\t\t\t<span class="result-value"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="queryResult">\r\n\t\t\t\t\t\t<span class="result-label">APP登录人数 ：</span>\r\n\t\t\t\t\t\t<span class="result-value"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="queryResult">\r\n\t\t\t\t\t\t<span class="result-label">营销任务处理人数 ：</span>\r\n\t\t\t\t\t\t<span class="result-value"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="queryResult">\r\n\t\t\t\t\t\t<span class="result-label">在线学习人数 ：</span>\r\n\t\t\t\t\t\t<span class="result-value colorBlue"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="queryResult">\r\n\t\t\t\t\t\t<span class="result-label">用户活跃率 ：</span>\r\n\t\t\t\t\t\t<span class="result-value colorBlue"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="queryResult">\r\n\t\t\t\t\t\t<span class="result-label">营销活跃率 ：</span>\r\n\t\t\t\t\t\t<span class="result-value colorBlue"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="queryResult">\r\n\t\t\t\t\t\t<span class="result-label">学习活跃率 ：</span>\r\n\t\t\t\t\t\t<span class="result-value colorBlue"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<script id="dataStatisticActivityResult" type="text/template">\r\n\t<div class="queryResult">\r\n\t\t<span class="result-label">APP注册人数 ：</span>\r\n\t\t<span class="result-value"><%=obj.userRegCnt%></span>\r\n\t</div>\r\n\t<div class="queryResult">\r\n\t\t<span class="result-label">APP登录人数 ：</span>\r\n\t\t<span class="result-value"><%=obj.userLoginCnt%></span>\r\n\t</div>\r\n\t<div class="queryResult">\r\n\t\t<span class="result-label">营销任务处理人数 ：</span>\r\n\t\t<span class="result-value"><%=obj.markTaskCnt%></span>\r\n\t</div>\r\n\t<div class="queryResult">\r\n\t\t<span class="result-label">在线学习人数 ：</span>\r\n\t\t<span class="result-value colorBlue"><%=obj.learnCnt%></span>\r\n\t</div>\r\n\t<div class="queryResult">\r\n\t\t<span class="result-label">用户活跃率 ：</span>\r\n\t\t<span class="result-value colorBlue"><%=(obj.userRate*100).toFixed(2)%>%</span>\r\n\t</div>\r\n\t<div class="queryResult">\r\n\t\t<span class="result-label">营销活跃率 ：</span>\r\n\t\t<span class="result-value colorBlue"><%=(obj.markRate*100).toFixed(2)%>%</span>\r\n\t</div>\r\n\t<div class="queryResult">\r\n\t\t<span class="result-label">学习活跃率 ：</span>\r\n\t\t<span class="result-value colorBlue"><%=(obj.learnRate*100).toFixed(2)%>%</span>\r\n\t</div>\r\n</script>';});

/**
 * 营销首页
 */

define('view/data-statistic/activity',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/data-statistic/tpl/activity.html','view/app-header'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/data-statistic/tpl/activity.html');
    var AppHeader = require('view/app-header');

    var View = Backbone.View.extend({
        el: 'body',
        events: {
            "tap #dataStatisticActivity .queryTools .oneItem": "chooseItem",
            "tap #dataStatisticActivity .queryTools .oneItem .city": "chooseCity",
            "tap #dataStatisticActivity .queryTools .oneItem .channel": "chooseChannel",
            "tap #dataStatisticActivity .queryTools .oneItem .part": "choosePart",
            "change #dataStatisticActivity .resultBody input.timeSelect": "timeSelect"
        },
        /**
         * 城市选择
         */
        chooseCity: function (e) {
            if(!this.cityDataInit){
                $.jtoast("数据还未返回请稍后");
            }
            var cityUUID = "" + $(e.currentTarget).data("uuid") ;
            $(e.currentTarget).siblings().removeClass("active");
            $(e.currentTarget).addClass("active");

            var text = $(e.currentTarget).data("text") ;
            $(e.currentTarget).parents(".oneItem").find(".queryResult").text(text) ;
            //置空部门
            $(e.currentTarget).parents(".oneItem").parent().find(".selectedPart").text("部门") ;
            this.partUUID = "" ;
            this.cityUUID = cityUUID ;
            this.initChannelByCity(text);
        },
        timeSelect(e){
            if($(e.currentTarget).hasClass("timeStart")){//开始时间
                this.startTime = $(e.currentTarget).val();
            }else{//结束时间
                if(!this.startTime){
                    $.jtoast("请开始时间！");
                    return ;
                }
                this.endTime = $(e.currentTarget).val();
                this.initPageData(true);
            }
        },
        /**
        * 渠道选择
        */
        chooseChannel: function (e) {
            if(!this.channelDataInit){
                $.jtoast("数据还未返回请稍后");
            }
            $(e.currentTarget).siblings().removeClass("active");
            $(e.currentTarget).addClass("active");
            // if(!this.cityUUID){
            //     $.jtoast(err);
            // }
            var channelUUID = $(e.currentTarget).data("uuid") ;
            var text = $(e.currentTarget).data("text") ;
            $(e.currentTarget).parents(".oneItem").find(".queryResult").text(text) ;
            this.channelUUID = channelUUID ;
            if(this.startTime && this.endTime){
                this.initPageData(true);
            }
        },
        /**
         * 选择部门
         */
        choosePart: function (e) {
            if(!this.partDataInit){
                $.jtoast("数据还未返回请稍后");
            }
            $(e.currentTarget).siblings().removeClass("active");
            $(e.currentTarget).addClass("active");
            // var partUUID = $(e.currentTarget).data("uuid") ;
            var text = $(e.currentTarget).data("text") ;
            var partUUID = text ;
            $(e.currentTarget).parents(".oneItem").find(".queryResult").text(text) ;
            //置空城市 渠道
            $(e.currentTarget).parents(".oneItem").parent().find(".selectCity").text("公司") ;
            this.cityUUID = "" ;
            $(e.currentTarget).parents(".oneItem").parent().find(".selectChannel").text("渠道") ;
            this.channelUUID = "" ;
            
            this.partUUID = partUUID ;
            if(this.startTime && this.endTime){
                this.initPageData(true);
            }
        },
        chooseItem: function (e) {
            if($(e.currentTarget).find(".selectChannel").length){//选择渠道
                if(!this.cityUUID){ //城市选择为空
                    $.jtoast("请先选择城市");
                    return ;
                }
            }
            if ($(e.currentTarget).hasClass("active")) {//已经被选中
                if ($(e.currentTarget).find(".moreQuery").hasClass("none")) {//被隐藏
                    $(e.currentTarget).find(".moreQuery").removeClass("none");
                    $(e.currentTarget).find(".moreQuery .active")[0].scrollIntoView() ;
                    $(e.currentTarget).find(".queryResult").removeClass("triup");
                    $(e.currentTarget).find(".queryResult").addClass("tridown");
                } else {
                    $(e.currentTarget).find(".moreQuery").addClass("none");
                    $(e.currentTarget).find(".queryResult").addClass("triup");
                    $(e.currentTarget).find(".queryResult").removeClass("tridown");
                }
            } else {
                $("#dataStatisticActivity .queryTools .oneItem").removeClass("active");
                $("#dataStatisticActivity .queryTools .oneItem .queryResult").addClass("rightWhite");
                $("#dataStatisticActivity .queryTools .oneItem .queryResult").removeClass("triup");
                $("#dataStatisticActivity .queryTools .oneItem .queryResult").removeClass("tridown");

                $("#dataStatisticActivity .queryTools .oneItem .moreQuery").addClass("none");
                $(e.currentTarget).addClass("active");
                $(e.currentTarget).find(".moreQuery").removeClass("none");
                $(e.currentTarget).find(".queryResult").removeClass("rightWhite");
                $(e.currentTarget).find(".queryResult").addClass("tridown");
            }
        },
        viewPage: function (e) {

        },
        initCity: function(){
            //dataStatisticActCity
            businessDelegate.dataStatisticActCity({},_.bind(function (data) {
                this.cityDataInit = true ;
                var html = "" ;
                for(var i = 0 ; i < data.obj.datas.length ;i++){
                    html += '<div class="city" data-uuid="'+data.obj.datas[i]+'" data-text="'+data.obj.datas[i]+'">'+data.obj.datas[i]+'</div>' ;
                }
                $("#dataStatisticActivity .queryTools .oneItem .cityList").empty();
                $("#dataStatisticActivity .queryTools .oneItem .cityList").html(html);
            }, this), _.bind(function (err) {
            	$.jtoast(err);
            	$.hideLoading();
            }, this));
        },
        initChannelByCity: function(query){
            businessDelegate.dataStatisticActChannelByCity({
                area: query
            } ,_.bind(function (data) {
                this.channelDataInit = true ;
                var html = "" ;
                for(var i = 0 ; i < data.obj.datas.length ;i++){
                    html += '<div class="channel" data-uuid="'+data.obj.datas[i].uuid+'" data-text="'+data.obj.datas[i].title+'">'+data.obj.datas[i].title+'</div>' ;
                }
                $("#dataStatisticActivity .queryTools .oneItem .channelList").empty();
                $("#dataStatisticActivity .queryTools .oneItem .channelList").html(html);
            }, this), _.bind(function (err) {
            	$.jtoast(err);
            	$.hideLoading();
            }, this));
        },
        initPart: function(){
            businessDelegate.dataStatisticActPart({},_.bind(function (data) {
                this.partDataInit = true ;
                var html = "" ;
                for(var i = 0 ; i < data.obj.datas.length ;i++){
                    html += '<div class="part" data-uuid="'+i+'" data-text="'+data.obj.datas[i]+'">'+data.obj.datas[i]+'</div>' ;
                }
                $("#dataStatisticActivity .queryTools .oneItem .partList").empty();
                $("#dataStatisticActivity .queryTools .oneItem .partList").html(html);
            }, this), _.bind(function (err) {
            	$.jtoast(err);
            	$.hideLoading();
            }, this));
        },
        initPageData: function (flag) {
            var param = {}
            if(flag){
                param = {
                    startTime: this.startTime ,
                    endTime: this.endTime ,
                    area: this.cityUUID ,
                    channelUUID: this.channelUUID ,
                    departmentName: this.partUUID
                }
            }
            $.showLoading();
            businessDelegate.dataStatisticActivity(param,_.bind(function (data) {
            	$.hideLoading();
                var html = _.template(this.dataStatisticActivityTemp)({ obj: data.obj });
                $("#dataStatisticActivity .resultBody .result").empty();
                $("#dataStatisticActivity .resultBody .result").html(html);
            }, this), _.bind(function (err) {
            	$.jtoast(err);
            	$.hideLoading();
            }, this));
        },
        backbutton: function () {
            Backbone.history.navigate("dataStatisticIndex/work/index", { trigger: true });
        },
        initialize: function () {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: 'APP活跃情况'
            });
            this.$el.empty().append(this.header.$el).append(template);
            var date = new Date() ;
            date.setTime(date.getTime()-24*60*60*1000);
            var day = date.getDate() ;
            day = day > 9 ? day : ("0" + day) ;
            var month = date.getMonth() + 1 ;
            month = month > 9 ? month : ("0" + month) ;
            var year = date.getFullYear() ;
            var defaultMinDate = year + "-" + "01-01" ;
            var maxDate = year + "-" + month + "-" + day ;
            var defaultMaxDate = maxDate ;
            $("#dataStatisticActivity .resultBody input.timeSelect").attr("max", maxDate) ;
            // $("#dataStatisticActivity .resultBody input.timeStart").attr("value" , defaultMinDate) ;
            $("#dataStatisticActivity .resultBody input.timeStart").val(defaultMinDate) ;
            this.startTime = defaultMinDate ;
            $("#dataStatisticActivity .resultBody input.timeEnd").val(defaultMaxDate) ;
            this.endTime = defaultMaxDate ;
            this.dataStatisticActivityTemp = this.$("#dataStatisticActivityResult").html();
            this.initCity();
            this.initPart();
            this.initPageData(true);
        },
        render: function () {
            return this;
        }
    });

    return View;
});


define('text!view/data-statistic/tpl/unlearn.html',[],function () { return '<div id="dataStatisticUnLearn" class="data-statistic-activity common-content bg-gray">\r\n    <div class="search">\r\n        <div class="app_search clearfix">\r\n            <div class="pull-right">\r\n                <div class="btn btn-primary btn-search">查询</div>\r\n            </div>\r\n            <div class="overhidden">\r\n                <i class="iconfont icon-sousuo"></i>\r\n                <input type="text" class="form-control input-search" placeholder="请输入关键字搜索">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="list">\r\n        <div class="listContent">\r\n            \r\n        </div>\r\n        <!-- <div class="list-control weui-row">\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-prev" data-page="<%=data.prePage%>" <%=prevAttr%>>上一页</button>\r\n            </div>\r\n            <div class="weui-col-20">1/2</div>\r\n            <div class="weui-col-40">\r\n                <button class="btn btn-default btn-next" data-page="<%=data.nextPage%>" <%=nextAttr%>>下一页</button>\r\n            </div>\r\n        </div> -->\r\n    </div>\r\n</div>\r\n<script id="dataStatisticUnLearnListItem" type="text/template">\r\n    <% _.each(list, function(v,i){ %>\r\n        <div class="listItem borderblue <%=v.overRate<1?\'link\':\'\'%>" data-uuid="<%=v.uuid%>">\r\n                <div class="itemImg">\r\n                    <img src="<%=v.courTypeImageUrl%>" width="32px" alt="">\r\n                </div>\r\n                <div class="itemInfo">\r\n                    <div class="title">资料主题：<%=v.courName%></div>\r\n                    <div class="learnsutitaion">应学习情况：<%=v.totalCount%>人</div>\r\n                    <div class="learned">已学习人数：<%=v.userCount%>人</div>\r\n                    <div class="unlean">未学习人数：<%=v.unReadCount%>人</div>\r\n                    <div class="learnRate">学习率：<%=((v.overRate?v.overRate:0)*100).toFixed(2)%>%</div>\r\n                </div>\r\n            </div>\r\n    <% }) %>\r\n</script>';});


define('text!view/data-statistic/tpl/unlearDetail.html',[],function () { return '<div class="common-content bg-gray" id="unlearnDetail">\r\n    <div class="allUnlearn">\r\n        <!-- <div class="oneUser">\r\n            <span class="user-name">\r\n                用户名称：\r\n                <span>张三</span>\r\n            </span>\r\n            <span class="user-mobile">\r\n                联系电话：\r\n                <span>13574089963</span>\r\n            </span>\r\n        </div>\r\n        <div class="oneUser">\r\n            <span class="user-name">\r\n                用户名称：\r\n                <span>张三</span>\r\n            </span>\r\n            <span class="user-mobile">\r\n                联系电话：\r\n                <span>13574089963</span>\r\n            </span>\r\n        </div>\r\n        <div class="oneUser">\r\n            <span class="user-name">\r\n                用户名称：\r\n                <span>张三</span>\r\n            </span>\r\n            <span class="user-mobile">\r\n                联系电话：\r\n                <span>13574089963</span>\r\n            </span>\r\n        </div>\r\n        <div class="oneUser">\r\n            <span class="user-name">\r\n                用户名称：\r\n                <span>张三</span>\r\n            </span>\r\n            <span class="user-mobile">\r\n                联系电话：\r\n                <span>13574089963</span>\r\n            </span>\r\n        </div>\r\n        <div class="oneUser">\r\n            <span class="user-name">\r\n                用户名称：\r\n                <span>张三</span>\r\n            </span>\r\n            <span class="user-mobile">\r\n                联系电话：\r\n                <span>13574089963</span>\r\n            </span>\r\n        </div>\r\n        <div class="oneUser">\r\n            <span class="user-name">\r\n                用户名称：\r\n                <span>张三</span>\r\n            </span>\r\n            <span class="user-mobile">\r\n                联系电话：\r\n                <span>13574089963</span>\r\n            </span>\r\n        </div> -->\r\n    </div>\r\n</div>';});

/**
*   基础页面定义
**/

define('view/data-statistic/unlearDetail',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/data-statistic/tpl/unlearDetail.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');
	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/data-statistic/tpl/unlearDetail.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');
	
	//keywords  关键字
	var View = SlidePage.extend({
        events: {
        },
        toDetail: function(e){
			
		},
		initPage(uuid){
            businessDelegate.dataStatisticLearnDetail({
				courUuid:uuid
			},_.bind(function (data) {
            	// $.hideLoading();
				var html = ""
				for(var i = 0 ; i < data.obj.datas.length ;i++){
					var user = data.obj.datas[i] ;
					html += '<div class="oneUser"><span class="user-name">用户名称：<span>'+user.name+'</span></span><span class="user-mobile">联系电话：<span>'+user.mobile+'</span></span></div>'
				}
				$("#unlearnDetail .allUnlearn").empty();
				$("#unlearnDetail .allUnlearn").html(html);
            }, this), _.bind(function (err) {
                debugger ;
            	$.jtoast(err);
            }, this));
        },
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: "未学习名单"
            });
            this.$el.empty().append(this.header.$el).append(template);
			this.initPage(options.uuid) ;
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销首页
 */

define('view/data-statistic/unlearn',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/data-statistic/tpl/unlearn.html','view/app-header','view/data-statistic/unlearDetail'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/data-statistic/tpl/unlearn.html');
    var AppHeader = require('view/app-header');
	var detailView = require("view/data-statistic/unlearDetail");
    var View = Backbone.View.extend({
        el: 'body',
        events: {
            "tap #dataStatisticUnLearn .listItem": "toDetail" ,
            "tap #dataStatisticUnLearn .search .btn-search": "queryBySearch"
        },
        queryBySearch: function(e){
            var text = $(e.currentTarget).parents(".search").find("input.input-search").val();
            this.initPage(text);
        },
        toDetail: function(e){
            var uuid = $(e.currentTarget).data("uuid");
            var view = new detailView({
                uuid: uuid
            });
			view.show();
			return;
        },
        viewPage: function (e) {
            
        },
        backbutton: function () {
            Backbone.history.navigate("dataStatisticIndex/work/index", { trigger: true });
        },
        initPage(text){
            var query = {
            }
            if(text){
                query.courName = text ;
            }
            businessDelegate.dataStatisticLearn(query,_.bind(function (data) {
            	// $.hideLoading();
                var html = _.template(this.listTemp)({ list : data.obj.datas });
                $("#dataStatisticUnLearn .list .listContent").empty();
                $("#dataStatisticUnLearn .list .listContent").html(html);
                
            }, this), _.bind(function (err) {
                debugger ;
            	$.jtoast(err);
            }, this));
        },
        initialize: function () {
        // dataStatisticLearn: dataStatisticLearn ,
        // dataStatisticLearnDetail:  ,
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '业务学习情况'
            });
            this.$el.empty().append(this.header.$el).append(template);
            this.listTemp =  this.$("#dataStatisticUnLearnListItem").html();
            this.initPage() ;
        },
        render: function () {
            return this;
        }
    });

    return View;
});


define('text!view/data-statistic/tpl/taskOrder.html',[],function () { return '<div id="dataStatisticTaskOrder" class="data-statistic-activity common-content bg-gray">\r\n    <div class="content">\r\n        <div class="queryTools">\r\n            <div class="content height40">\r\n                <div class="oneItem chooseTime">\r\n                    <div class="queryResult rightWhite time">\r\n                        时间\r\n                    </div>\r\n                </div>\r\n                <div class="oneItem evt orderSelected">\r\n                    <div class="queryResult rightWhite">工单</div>\r\n                    <div class="moreQuery none order">\r\n                        <!-- <div class="slectVal" data-uuid="uuid" data-text="工单1">工单1</div>\r\n                        <div class="slectVal" data-uuid="uuid" data-text="工单2">工单2</div>\r\n                        <div class="slectVal" data-uuid="uuid" data-text="工单2">工单2</div>\r\n                        <div class="slectVal" data-uuid="uuid" data-text="工单4">工单4</div> -->\r\n                    </div>\r\n                </div>\r\n                <div class="oneItem evt">\r\n                    <div class="queryResult">分公司</div>\r\n                    <div class="moreQuery none cityList">\r\n                        <!-- <div class="slectVal" data-uuid="uuid" data-text="长沙市">长沙市</div>\r\n                        <div class="slectVal" data-uuid="uuid" data-text="湘潭市">湘潭市</div>\r\n                        <div class="slectVal" data-uuid="uuid" data-text="株洲市">株洲市</div>\r\n                        <div class="slectVal" data-uuid="uuid" data-text="常德市">常德市</div> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="resultBody">\r\n            <div class="content">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>渠道名称</th>\r\n                            <th class="order" data-orderby="total_cnt">派发任务量</th>\r\n                            <th class="order" data-orderby="suc_cnt">其中：任务成功</th>\r\n                            <th class="order" data-orderby="fail_cnt">其中：任务不成功</th>\r\n                            <th class="order" data-orderby="conu_cnt">其中：营销继续</th>\r\n                            <th class="order" data-orderby="wait_cnt">其中：未操作 </th>\r\n                            <th class="order" data-orderby="suc_rate">成功率=营销成功/派发任务量</th>\r\n                            <th class="order" data-orderby="over_rate">完成率=（营销成功+营销不成功）/派发任务量</th>\r\n                        </tr>\r\n                        <!-- <tr class="data-line">\r\n                            <td>湘潭营业厅</td>\r\n                            <td>100</td>\r\n                            <td>65</td>\r\n                            <td>5</td>\r\n                            <td>30</td>\r\n                            <td>0</td>\r\n                            <td>65%</td>\r\n                            <td>70%</td>\r\n                        </tr> -->\r\n                    </tbody>\r\n                </table>\r\n                <!-- <div>\r\n                    <div class="oneOrder">\r\n                        <div class="orderName">\r\n                            <span class="showName">渠道名称</span>\r\n                            <span class="showValue"></span>\r\n                        </div>\r\n                        <div class="orderNum">\r\n                            <span class="showName">派发任务量</span>\r\n                            <span class="showValue"></span>\r\n                        </div>\r\n                        <div class="success">\r\n                            <span class="showName">其中：任务成功</span>\r\n                            <span class="showValue"></span>\r\n                        </div>\r\n                        <div class="fail">\r\n                            <span class="showName">其中：任务不成功</span>\r\n                            <span class="showValue"></span>\r\n                        </div>\r\n                        <div class="continue">\r\n                            <span class="showName"></span>\r\n                            <span class="showValue"></span>\r\n                        </div>\r\n                        <div class="unoperation">\r\n                            <span class="showName"></span>\r\n                            <span class="showValue"></span>\r\n                        </div>\r\n                        <div class="successRate">\r\n                            <span class="showName"></span>\r\n                            <span class="showValue"></span>\r\n                        </div>\r\n                        <div class="finishRate">\r\n                            <span class="showName"></span>\r\n                            <span class="showValue"></span>\r\n                        </div>\r\n                    </div>\r\n                </div> -->\r\n            </div>\r\n        </div>\r\n        <div class="timePicker none">\r\n                <input type="month" class="datepicker" style="border: none;appearance: none;-webkit-appearance: none;-moz-appearance:none; color: transparent;">    \r\n        </div>\r\n    </div>\r\n</div>';});


define('text!view/data-statistic/tpl/channelDetai.html',[],function () { return '<div id="dataStatisticOrderDetail" class="common-content bg-gray">\r\n    <div class="content">\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <th>员工名称</th>\r\n                    <th class="order" data-orderby="suc_cnt">其中：任务成功</th>\r\n                    <th class="order" data-orderby="fail_cnt">其中：任务不成功</th>\r\n                    <th class="order" data-orderby="conu_cnt">其中：营销继续</th>\r\n                    <th class="order" data-orderby="wait_cnt">其中：未操作 </th>\r\n                    <th class="order" data-orderby="suc_rate">成功率=营销成功/派发任务量</th>\r\n                    <th class="order" data-orderby="over_rate">完成率=（营销成功+营销不成功）/派发任务量</th>\r\n                </tr>\r\n                <!-- <tr class="data-line">\r\n                    <td>张三</td>\r\n                    <td>95</td>\r\n                    <td>5</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>95.00%</td>\r\n                    <td>100.00%</td>\r\n                </tr> -->\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n<script id="dataStatisticOrderDetailTr" type="text/template">\r\n    <% _.each(list, function(v,i){ %>\r\n        <tr class="data-line">\r\n            <td><%=v.empName%></td>\r\n            <td><%=v.suc_cnt%></td>\r\n            <td><%=v.fail_cnt%></td>\r\n            <td><%=v.conu_cnt%></td>\r\n            <td><%=v.wait_cnt%></td>\r\n            <td><%=(v.suc_rate*100).toFixed(2)%>%</td>\r\n            <td><%=v.over_rate%>%</td>\r\n        </tr>\r\n    <% }) %>\r\n</script>';});

/**
*   基础页面定义
**/

define('view/data-statistic/channelDetai',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/data-statistic/tpl/channelDetai.html','view/app-header','view/slide-page'],function (require, exports, module) {
	// 统一在最前面定义依赖
	var $ = require('jquery');
	var _ = require('underscore');
	var Backbone = require('backbone');

    require('touch');
	require('jquery-weui');

	var utils = require('utils');
	var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');
	// 加载模版通过text插件的方式将文本作为模块
	var template = require('text!view/data-statistic/tpl/channelDetai.html');
	var AppHeader = require('view/app-header');
	var SlidePage = require('view/slide-page');
	
	//keywords  关键字
	var View = SlidePage.extend({
        events: {
			"tap #dataStatisticOrderDetail .content table tbody tr th.order": "orderEvt"
        },
        orderEvt: function(e){
			var field = $(e.currentTarget).data("orderby");
            this.orderBy = field ;
            var current = "";
            if($(e.currentTarget).hasClass("asc")){//原本是升序
                current = "desc" ;
            }else if($(e.currentTarget).hasClass("desc")){//原本是降序
                current = "asc" ;
            }else{//原来没有排序，默认升序
                current = "asc" ;
            }
            this.order = current ;
            $("#dataStatisticOrderDetail table tbody tr th.order").removeClass("desc") ;
            $("#dataStatisticOrderDetail table tbody tr th.order").removeClass("asc") ;
            if("desc" == current){
                $(e.currentTarget).addClass("desc") ;
            }else{
                $(e.currentTarget).addClass("asc") ;
            }
            this.initPage() ;
		},
		initPage(uuid){
            var query = {
				channelUUID : this.uuid ,
				orderBy : this.orderBy ,
				order : this.order ,
				month : this.month ,
				jobUuid : this.jobUuid ,
				areas: this.cityId 
			};
			businessDelegate.dataStatisticTaksOrderDetail(query,_.bind(function (data) {
				var tpl = _.template(this.trTmpl)({ list: data.obj.datas });
				$("#dataStatisticOrderDetail table tbody tr.data-line").empty();
				$("#dataStatisticOrderDetail table tbody").append(tpl);
            }, this), _.bind(function (err) {
            	$.jtoast(err);
            	$.hideLoading();
            }, this));
        },
		initialize: function (options) {
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: "营销工单任务执行情况"
            });
			this.$el.empty().append(this.header.$el).append(template);
			this.channelUUID = options.uuid ;
			this.orderBy = options.orderBy ;
			this.order = options.order ;
			this.month = options.month ;
			this.jobUuid = options.jobUuid ;
			this.cityId  = options.cityId ;
			this.trTmpl = this.$("#dataStatisticOrderDetailTr").html();
			this.initPage() ;
		},
		render: function () {
			return this;
		}
	});

	return View;
});

/**
 * 营销首页
 */

define('view/data-statistic/taskOrder',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/data-statistic/tpl/taskOrder.html','view/app-header','view/data-statistic/channelDetai'],function (require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/data-statistic/tpl/taskOrder.html');
    var AppHeader = require('view/app-header');
    var detailView = require("view/data-statistic/channelDetai");
    var View = Backbone.View.extend({
        el: 'body',
        events: {
            "tap #dataStatisticTaskOrder .queryTools .oneItem.evt": "chooseItem",
            "tap #dataStatisticTaskOrder .queryTools .oneItem .time": "chooseTime",
            "tap #dataStatisticTaskOrder .queryTools .oneItem .slectVal": "selectVal",
            "change #dataStatisticTaskOrder .timePicker input": "changeTime",
            "tap #dataStatisticTaskOrder .resultBody .content table tbody .clkToDetail": "toDetail" ,
            "tap #dataStatisticTaskOrder .resultBody .content table tbody tr th.order": "orderEvt"
        },
        orderEvt(e){
            var field = $(e.currentTarget).data("orderby");
            this.orderBy = field ;
            var current = "";
            if($(e.currentTarget).hasClass("asc")){//原本是升序
                current = "desc" ;
            }else if($(e.currentTarget).hasClass("desc")){//原本是降序
                current = "asc" ;
            }else{//原来没有排序，默认升序
                current = "asc" ;
            }
            this.order = current ;
            $("#dataStatisticTaskOrder .resultBody .content table tbody tr th.order").removeClass("desc") ;
            $("#dataStatisticTaskOrder .resultBody .content table tbody tr th.order").removeClass("asc") ;
            if("desc" == current){
                $(e.currentTarget).addClass("desc") ;
            }else{
                $(e.currentTarget).addClass("asc") ;
            }
            this.initPage() ;
        },
        toDetail: function(e){
            var uuid = $(e.currentTarget).data("uuid");
            var view = new detailView({
                month : this.selectedTime,
                area : this.city ,
                jobUuid : this.order ,
                uuid: uuid ,
                orderBy: this.orderBy ,
                order: this.order ,
                cityId : this.cityId 
            });
			view.show();
			return;
        },
        initCity: function(){
            //dataStatisticActCity
            businessDelegate.dataStatisticActCity({},_.bind(function (data) {
                this.cityDataInit = true ;
                var html = "" ;
                for(var i = 0 ; i < data.obj.datas.length ;i++){
                    html += '<div class="slectVal" data-type="city" data-uuid="'+data.obj.datas[i]+'" data-text="'+data.obj.datas[i]+'">'+data.obj.datas[i]+'</div>' ;
                }
                $("#dataStatisticTaskOrder .queryTools .oneItem .cityList").empty();
                $("#dataStatisticTaskOrder .queryTools .oneItem .cityList").html(html);
            }, this), _.bind(function (err) {
            	$.jtoast(err);
            	$.hideLoading();
            }, this));
        },
        initOrderByTime: function(query){
            businessDelegate.dataStatistictaskOrderQuery({
                month: query
            } ,_.bind(function (data) {
                this.orderDataInit = true ;
                if(!data.obj.datas.length){
                    $.jtoast("无该月工单数据！");
                }
                var html = "" ;
                for(var  i = 0 ; i < data.obj.datas.length ;i++){
                    var order = data.obj.datas[i] ;
                    html += '<div class="slectVal" data-type="order"  data-uuid="'+ order.uuid +'" data-text="'+ order.jobsName +'">'+ order.jobsName +'</div>' ;
                }
                $("#dataStatisticTaskOrder .queryTools .oneItem .order").empty();
                $("#dataStatisticTaskOrder .queryTools .oneItem .order").html(html);
            }, this), _.bind(function (err) {
            	$.jtoast(err);
            	$.hideLoading();
            }, this));
        },
        selectVal: function(e){
            var type = $(e.currentTarget).data("type") ;
            var uuid = $(e.currentTarget).data("uuid") ;
            if("city" == type){
                this.cityId = uuid ;
            }else{
                this.orderId = uuid ;
            }
            var text = $(e.currentTarget).data("text") ;
            $(e.currentTarget).parents(".oneItem").find(".queryResult").text(text) ;
            this.initPage() ;
        },
        /**时间选择 */
        chooseTime: function(){
            $("#dataStatisticTaskOrder .timePicker").removeClass("none") ;
            $('.jtoast').remove();
            $("#dataStatisticTaskOrder .timePicker input").click() ;
        },
        changeTime: function(){
            var val = $("#dataStatisticTaskOrder .timePicker input").val() ;
            $("#dataStatisticTaskOrder .queryTools .oneItem .time").text(val) ;
            this.selectedTime = val ;
            this.initOrderByTime(val) ;
            $("#dataStatisticTaskOrder .timePicker").addClass("none") ;
        },
        chooseItem: function(e){
            if($(e.currentTarget).hasClass("orderSelected")){
                if(!this.selectedTime){
                    $.jtoast("请先选择时间！");
                    return ;
                }
            }
            if ($(e.currentTarget).hasClass("active")) {//已经被选中
                if ($(e.currentTarget).find(".moreQuery").hasClass("none")) {//被隐藏
                    $(e.currentTarget).find(".moreQuery").removeClass("none");
                    $(e.currentTarget).find(".queryResult").removeClass("triup");
                    $(e.currentTarget).find(".queryResult").addClass("tridown");
                } else {
                    $(e.currentTarget).find(".moreQuery").addClass("none");
                    $(e.currentTarget).find(".queryResult").addClass("triup");
                    $(e.currentTarget).find(".queryResult").removeClass("tridown");
                }
            } else {
                $("#dataStatisticTaskOrder .queryTools .oneItem").removeClass("active");
                $("#dataStatisticTaskOrder .queryTools .oneItem .queryResult").addClass("rightWhite");
                $("#dataStatisticTaskOrder .queryTools .oneItem .queryResult").removeClass("triup");
                $("#dataStatisticTaskOrder .queryTools .oneItem .queryResult").removeClass("tridown");

                $("#dataStatisticTaskOrder .queryTools .oneItem .moreQuery").addClass("none");
                $(e.currentTarget).addClass("active");
                $(e.currentTarget).find(".moreQuery").removeClass("none");
                $(e.currentTarget).find(".queryResult").removeClass("rightWhite");
                $(e.currentTarget).find(".queryResult").addClass("tridown");
            }
        },
        initPage: function () {
            var query = {
                month : this.selectedTime,
                // month : "2018-05",
                areas : this.cityId ,
                jobUuid : this.orderId ,
                orderBy: this.orderBy ,
                order: this.order
            }
            businessDelegate.dataStatistictaskOrderQueryByChannel(query ,_.bind(function (data) {
            	// $.hideLoading();
                var html = "" ;
                for(var  i = 0 ; i < data.obj.datas.length ;i++){
                    var channel = data.obj.datas[i] ;
                    html += "<tr class='data-line'><td class='clkToDetail' data-uuid="+ channel.channelUUID +">"+channel.title+"</td><td>"+channel.total_cnt+"</td><td>"+channel.suc_cnt+"</td><td>"+channel.fail_cnt+"</td><td>"+channel.conu_cnt+"</td><td>"+channel.wait_cnt+"</td><td>"+(channel.suc_rate*100).toFixed(2)+"%</td><td>"+(channel.over_rate*100).toFixed(2)+"%</td></tr>" ;
                }
                $("#dataStatisticTaskOrder .resultBody .content table tr.data-line").remove() ;
                $("#dataStatisticTaskOrder .resultBody .content table tbody").append(html) ;
                
            }, this), _.bind(function (err) {
            	$.jtoast(err);
            	$.hideLoading();
            }, this));
        },  
        backbutton: function () {
            Backbone.history.navigate("dataStatisticIndex/work/index", { trigger: true });
        },
        initialize: function () {
            //dataStatistictaskOrderQuery
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '营销任务工单执行情况'
            });
            this.$el.empty().append(this.header.$el).append(template);
            var date = new Date() ;
            var month = date.getMonth() + 1 ;
            month = month > 9 ? month : ("0" + month) ;
            var time = "" + date.getFullYear() +"-"+ month;
            // this.selectedTime = time ;
            // this.initPage() ;
            this.initCity() ;
            // this.initOrderByTime("2018-05");
            // this.initOrderByTime(time);
            this.initPage() ;
            
        },
        render: function () {
            return this;
        }
    });

    return View;
});

/**
 * 营销首页
 */

define('view/learn-application',['require','exports','module','jquery','underscore','backbone','touch','jquery-weui','utils','phonegaputil','business-delegate','text!view/online_marketing/tpl/index.html','text!view/online_marketing/tpl/_mission-list.html','view/app-header','view/online_marketing/mission-list','view/online_marketing/fixture-list','view/online_marketing/pay-list'],function(require, exports, module) {
    // 统一在最前面定义依赖
    var $ = require('jquery');
    var _ = require('underscore');
    var Backbone = require('backbone');

    require('touch');
    require('jquery-weui');

    var utils = require('utils');
    var phonegaputil = require('phonegaputil');
    var businessDelegate = require('business-delegate');

    // 加载模版通过text插件的方式将文本作为模块
    var template = require('text!view/online_marketing/tpl/index.html');
    var missionListTemplate = require('text!view/online_marketing/tpl/_mission-list.html');

    var AppHeader = require('view/app-header');
    var MissionList = require('view/online_marketing/mission-list');
    var FixtureList = require('view/online_marketing/fixture-list');
    var PayList = require('view/online_marketing/pay-list');

    var View = Backbone.View.extend({
        el: 'body',
        events: {
            'tap .header_table .info': 'showAllInfoList',
            'tap .content-nav > div': 'selectNav',
            'tap .btn-mission-search': 'missionSearch',
            'tap .btn-fixture-search': 'fixtureSearch',
            'change .form-select': 'renderPayList'
        },
        fixtureSearch: function() {
            var $input = this.$('.input-fixture-search');
            this.fixtureList.searchByKeyword($input);
        },
        missionSearch: function() {
            var $input = this.$('.input-mission-search');
            this.missionList.searchByKeyword($input);
        },
        selectNav: function(e) {
            var $e = $(e.currentTarget);

            if ($e.hasClass('active')) {
                return;
            }

            this.$('.content-nav > div').removeClass('active');
            $e.addClass('active');

            var type = $e.data('type');
            this.renderNav(type);
        },
        renderNav: function(type) {
            this.$('.content-content').empty();

            switch (type) {
                case 1:
                    //任务查询
                    this.$('.content-header').html(this.missionSearchTemplate);
                    //渲染任务查询
                    if (!this.missionList) {
                        this.missionList = new MissionList();
                    } else {
                        this.missionList.initialize();
                    }
                    break
                case 2:
                    //常客查询
                    this.$('.content-header').html(this.fixtureSearchTemplate);
                    //渲染常客查询
                    if (!this.fixtureList) {
                        this.fixtureList = new FixtureList();
                    } else {
                        this.fixtureList.initialize();
                    }
                    break
                case 3:
                    //酬金查询
                    this.$('.content-header').html(this.paySelectInitTemplate);

                    //获取营业厅
                    this.getPaySelect();
                    break
            }
        },
        getPaySelect: function() {
            $.showLoading();
            businessDelegate.getMarketingChannel(_.bind(function(data) {
                $.hideLoading();

                if (data.obj.length == 0) {
                    return;
                }

                var tpl = _.template(this.paySelectTemplate)({ list: data.obj });
                this.$('.content-header').html(tpl);

                this.renderPayList();
            }, this), _.bind(function(err) {
                $.jtoast(err);
                $.hideLoading();

                this.renderPayList();
            }, this));
        },
        renderPayList: function() {
            var uuid = $('.form-select').val();

            if (!this.PayList) {
                this.PayList = new PayList({
                    uuid: uuid
                });
            } else {
                this.PayList.initialize({
                    uuid: uuid
                });
            }

        },
        renderUserInfoView: function() {
            $.showLoading();
            businessDelegate.getMarketingPermission(_.bind(function(data) {
                $.hideLoading();
                var tpl = _.template(this.userInfoTemplate)(data.obj);
                this.$('.header').html(tpl);

                window.user.regularVisitors = data.obj.regularVisitors; //获取常客查询权限
                window.user.taskSing = data.obj.taskSing; //获取任务查询权限
                window.user.backfillTask = data.obj.backfillTask; //获取任务回填权限
                window.user.queryFee = data.obj.queryFee; //获取酬金查询权限

                this.renderNav(1);
            }, this), _.bind(function(err) {
                $.hideLoading();
                $.jtoast(err);

                this.renderNav(1);
            }, this));
        },
        showAllInfoList: function(e) {
            var $e = $(e.currentTarget);
            if ($e.find('.list').hasClass('unactive')) {
                $e.find('.list').removeClass('unactive').addClass('active');
            } else {
                $e.find('.list').removeClass('active').addClass('unactive');
            }
        },
        backbutton: function() {
            Backbone.history.navigate(this.history, { trigger: true });
        },
        initialize: function(options) {
            this.history = options.history;
            this.header = new AppHeader({
                host: this,
                main: false, //是否主页面
                title: '测试一下'
            });

            this.$el.empty().append(this.header.$el).append(template);
            this.userInfoTemplate = this.$('#userInfoTpl').html();
            this.missionSearchTemplate = this.$('#missionSearchTpl').html();
            this.fixtureSearchTemplate = this.$('#fixtureSearchTpl').html();
            this.paySelectInitTemplate = this.$('#paySelectInitTpl').html();
            this.paySelectTemplate = this.$('#paySelectTpl').html();

            //渲染用户信息
            this.renderUserInfoView();
        },
        render: function() {
            return this;
        }
    });

    return View;
});
define('router',['require','exports','module','backbone','utils','view/login','view/index','view/work','view/online_read/index','view/online_read/info','view/online_read/detail','view/online_read/attachment','view/exam/index','view/exam/help','view/exam/paper','view/exam/record','view/exam/fault','view/exam/banklist','view/exam/bank','view/mobile_repository/index','view/mobile_repository/question','view/mobile_repository/my','view/mobile_repository/detail','view/mobile_repository/example-detail','view/center/index','view/chatroom/list','view/chatroom/index','view/online_marketing/index','view/news/index','view/contact/index','view/my_customer/index','view/queryRemuneration/index','view/graphic_marketing/index','view/marketing-communications/index','view/marketing-tasks/index','view/data-statistic/index','view/data-statistic/activity','view/data-statistic/unlearn','view/data-statistic/taskOrder','view/learn-application'],function(require, exports, module) {
    var Backbone = require('backbone');
    var utils = require('utils');

    var loginView = require('view/login'); //登录
    var indexView = require('view/index'); //主页
    var workView = require('view/work'); //主页

    //在线阅读
    // var readIndex = require('view/read/index');
    // var readInfo = require('view/read/info');
    // var readAttachment = require('view/read/attachment');
    // var readDetail = require('view/read/detail');
    // var readComment = require('view/read/comment');
    // var readMore = require('view/read/more');

    //new在线阅读
    var onlineReadIndex = require('view/online_read/index');
    var onlineReadInfo = require('view/online_read/info');
    var onlineReadDetail = require('view/online_read/detail');
    var onlineReadAttachment = require('view/online_read/attachment');

    //评测考试
    var examIndex = require('view/exam/index');
    var examHelp = require('view/exam/help');
    var examPaper = require('view/exam/paper');
    var examRecord = require('view/exam/record');
    var examFault = require('view/exam/fault');
    var examBankList = require('view/exam/banklist');
    var examBank = require('view/exam/bank');


    //知识库
    // var knowledgeIndex = require('view/knowledge/index');
    // var knowledgeList = require('view/knowledge/list');
    // var knowledgeDetail = require('view/knowledge/detail');
    // var knowledgeAnswer = require('view/knowledge/answer');
    // var knowledgeQuestion = require('view/knowledge/question');
    // var knowledgeMyQuestion = require('view/knowledge/myquestion');
    // var knowledgeMyAnswer = require('view/knowledge/myanswer');

    //new知识库
    var mobileRepositoryIndex = require('view/mobile_repository/index');
    var mobileRepositoryQuestion = require('view/mobile_repository/question');
    var mobileRepositoryMy = require('view/mobile_repository/my');
    var mobileRepositoryDetail = require('view/mobile_repository/detail');
    var exampleDetail = require('view/mobile_repository/example-detail');

    //个人中心
    var centerIndex = require('view/center/index');

    //聊天室
    var chatroomList = require('view/chatroom/list');
    var chatroomView = require('view/chatroom/index');

    //在线营销
    // var marketingIndex = require('view/marketing/index');
    // var marketingFixture = require('view/marketing/fixture');
    // var marketingMission = require('view/marketing/mission');
    // var marketingMissionList = require('view/marketing/mission-list');
    // var marketingMissionDetail = require('view/marketing/mission-detail');
    // var marketingMissionReply = require('view/marketing/mission-reply');
    // var marketingPay = require('view/marketing/pay');

    //new在线营销
    var onlineMarketingIndex = require('view/online_marketing/index');

    //新闻
    var newsIndex = require('view/news/index');
    // var newsDetail = require('view/news/detail');

    //联系人
    var contactIndex = require('view/contact/index');

    //我的客户
    var myCustomer = require('view/my_customer/index');
    //酬金查询
    var queryRemuneration = require("view/queryRemuneration/index");
    //图文营销
    var graphicMarketing = require("view/graphic_marketing/index");
    var marketingCommunications = require("view/marketing-communications/index");
    var marketingTask = require("view/marketing-tasks/index");

    //数据统计
    var dataStatisticIndex = require("view/data-statistic/index") ;
    var dataStatisticActivity = require("view/data-statistic/activity") ;
    var dataStatisticUnlearn = require("view/data-statistic/unlearn") ;
    var dataStatisticTaskOrder = require("view/data-statistic/taskOrder") ;
    

    // var contactList = require('view/contact/list');
    // var contactDetail = require('view/contact/detail');

    //日志
    // var logIndex = require('view/log/index');
    // var logForm = require('view/log/form');
    // var logMine = require('view/log/mine');
    // var logDetail = require('view/log/detail');


    //测试页面
    var learnAppliationIndex = require('view/learn-application');
    var AppRouter = Backbone.Router.extend({
        routes: {
            'login': 'loginView',
            'index': 'indexView',
            'work/:history': 'workView',

            //在线阅读
            // 'read-index': 'readIndex',
            // 'read-info/:uuid/:addCount': 'readInfo',
            // 'read-attachment/:uuid': 'readAttachment',
            // 'read-detail/:uuid': 'readDetail',
            // 'read-comment/:uuid': 'readComment',
            // 'read-more/:uuid/:commentUUID': 'readMore',

            //new在线阅读
            'online-read-index/:history/:history': 'onlineReadIndex',
            'online-read-info/:uuid': 'onlineReadInfo',
            'online-read-detail/:uuid': 'onlineReadDetail',
            'online-read-attachment/:uuid': 'onlineReadAttachment',

            //评测考试
            'exam-index/:history/:history': 'examIndex',
            'exam-help': 'examHelp',
            'exam-paper/:uuid': 'examPaper',
            'exam-record': 'examRecord',
            'exam-fault': 'examFault',
            'exam-banklist': 'examBankList',
            'exam-bank/:uuid': 'examBank',

            //知识库
            // 'knowledge-index': 'knowledgeIndex',
            // 'knowledge-list': 'knowledgeList',
            // 'knowledge-question': 'knowledgeQuestion',
            // 'knowledge-myquestion': 'knowledgeMyQuestion',
            // 'knowledge-myanswer': 'knowledgeMyAnswer',
            // 'knowledge-detail/:uuid/:history': 'knowledgeDetail',
            // 'knowledge-answer/:uuid/:history': 'knowledgeAnswer',

            //new知识库
            'mobile-repository-index(/:nav)/:history/:history': 'mobileRepositoryIndex',
            'mobile-repository-question': 'mobileRepositoryQuestion',
            'mobile-repository-my/:type(/:status)': 'mobileRepositoryMy',
            'mobile-repository-detail/:uuid/:history(/:type)': 'mobileRepositoryDetail',
            'example-detail/:uuid': 'exampleDetail',

            //个人中心
            'center-index': 'centerIndex',

            //聊天室
            'chatroom-list': 'chatroomList',
            'chatroom/:uuid/:title': 'chatroomView',

            //在线营销
            // 'marketing-index': 'marketingIndex',
            // 'marketing-fixture': 'marketingFixture',
            // 'marketing-mission': 'marketingMission',
            // 'marketing-mission-list/:uuid': 'marketingMissionList',
            // 'marketing-mission-detail/:uuid': 'marketingMissionDetail',
            // 'marketing-mission-reply/:uuid': 'marketingMissionReply',
            // 'marketing-pay': 'marketingPay',

            //new在线营销
            'online-marketing-index/:history': 'onlineMarketingIndex',

            //新闻
            'news-index/:type': 'newsIndex',
            // 'news-detail/:type/:uuid': 'newsDetail',

            //联系人
            'contact-index': 'contactIndex',
            // 'contact-list': 'contactList',
            // 'contact-detail': 'contactDetail',

            //日志
            // 'log-index': 'logIndex',
            // 'log-form/:type': 'logForm',
            // 'log-mine': 'logMine',
            // 'log-detail/:type': 'logDetail'


            //测试页面
            'learnAppliation/:history': 'learnAppliationIndex',
            //我的客户
            'my-customer/:history/:history': 'myCustomer' ,
            'query-remuneration/:history/:history': 'queryRemuneration' ,
            "graphic-marketing/:history/:history" : "graphicMarketing" ,
            //数据统计
            "dataStatisticIndex/:history/:history":"dataStatisticIndex" ,
            "dataStatisticActivity/dataStatisticIndex/:history/:history": "dataStatisticActivity" ,
            "dataStatisticUnlearn/dataStatisticIndex/:history/:history":"dataStatisticUnlearn" ,
            "dataStatisticTaskOrder/dataStatisticIndex/:history/:history":"dataStatisticTaskOrder" ,
            "marketing-communications/:history/:history" :"marketingCommunications" ,
            "marketing-task/:history/:history" :"marketingTask"
        },
        initialize: function() {
            console.log("AppRouter initialize");
            this.currentPage = null;
        },
        changePage: function(page) {
            $.maskScreen();

            //销毁事件
            if (this.currentPage) {
                this.currentPage.undelegateEvents();
                if (this.currentPage.destroy) {
                    this.currentPage.destroy();
                }
            }

            page.render();

            if (page.afterRender) {
                page.afterRender();
            }

            this.currentPage = page;

            $.removeScreen(300);
        },
        resume: function() {
            var $slidePage = $('.slide-page');

            if ($slidePage.length > 0) {
                $slidePage.last().find('.btn-resume').trigger('tap');
                return;
            }

            if (this.currentPage && this.currentPage.resume) {
                this.currentPage.resume();
            }
        },
        pause: function() {
            var $slidePage = $('.slide-page');

            if ($slidePage.length > 0) {
                $slidePage.last().find('.btn-pause').trigger('tap');
                return;
            }

            if (this.currentPage && this.currentPage.pause) {
                this.currentPage.pause();
            }
        },
        resize: function() {
            if (this.currentPage && this.currentPage.resize) {
                this.currentPage.resize();
            }
        },
        backButton: function() {
            var $slidePage = $('.slide-page');

            if (window.cordova && window.Keyboard.isVisible) {
                return;
            }

            if ($slidePage.length > 0) {
                $slidePage.last().find('.btn-back').trigger('tap');
                return;
            }

            if (this.currentPage && this.currentPage.backbutton) {
                this.currentPage.backbutton();
            }
        },
        loginView: function() {
            var view = new loginView();
            this.changePage(view);
        },
        indexView: function() {
            var view = new indexView();
            this.changePage(view);
        },
        workView: function(history) {
            var view = new workView({
                history: history
            });
            this.changePage(view);
        },

        //old在线阅读
        // readIndex: function () {
        // 	var view = new readIndex();
        // 	this.changePage(view);
        // },
        // readInfo: function (uuid, addCount) {
        // 	var view = new readInfo({ uuid: uuid, addCount: addCount });
        // 	this.changePage(view);
        // },
        // readAttachment: function (uuid) {
        // 	var view = new readAttachment({ uuid: uuid });
        // 	this.changePage(view);
        // },
        // readDetail: function (uuid) {
        // 	var view = new readDetail({ uuid: uuid });
        // 	this.changePage(view);
        // },
        // readComment: function (uuid) {
        // 	var view = new readComment({ uuid: uuid });
        // 	this.changePage(view);
        // },
        // readMore: function (uuid, commentUUID) {
        // 	var view = new readMore({ uuid: uuid, commentUUID: commentUUID });
        // 	this.changePage(view);
        // },

        //new在线阅读
        onlineReadIndex: function(history) {
            var view = new onlineReadIndex({
                history: history
            });
            this.changePage(view);
        },
        onlineReadInfo: function(uuid) {
            var view = new onlineReadInfo({ uuid: uuid });
            this.changePage(view);
        },
        onlineReadDetail: function(uuid) {
            var view = new onlineReadDetail({ uuid: uuid });
            this.changePage(view);
        },
        onlineReadAttachment: function(uuid) {
            var view = new onlineReadAttachment({ uuid: uuid });
            this.changePage(view);
        },

        //在线测评
        examIndex: function(history) {
            var view = new examIndex({
                history: history
            });
            this.changePage(view);
        },
        examHelp: function() {
            var view = new examHelp();
            this.changePage(view);
        },
        examPaper: function(uuid) {
            var view = new examPaper({ uuid: uuid });
            this.changePage(view);
        },
        examRecord: function() {
            var view = new examRecord();
            this.changePage(view);
        },
        examFault: function() {
            var view = new examFault();
            this.changePage(view);
        },
        examBankList: function() {
            var view = new examBankList();
            this.changePage(view);
        },
        examBank: function(uuid) {
            var view = new examBank({ uuid: uuid });
            this.changePage(view);
        },

        //old知识库
        // knowledgeIndex: function () {
        // 	var view = new knowledgeIndex();
        // 	this.changePage(view);
        // },
        // knowledgeList: function () {
        // 	var view = new knowledgeList();
        // 	this.changePage(view);
        // },
        // knowledgeQuestion: function () {
        // 	var view = new knowledgeQuestion();
        // 	this.changePage(view);
        // },
        // knowledgeDetail: function (uuid, history) {
        // 	var view = new knowledgeDetail({
        // 		uuid: uuid,
        // 		history: history
        // 	});
        // 	this.changePage(view);
        // },
        // knowledgeAnswer: function (uuid, history) {
        // 	var view = new knowledgeAnswer({
        // 		uuid: uuid,
        // 		history: history
        // 	});
        // 	this.changePage(view);
        // },
        // knowledgeMyQuestion: function () {
        // 	var view = new knowledgeMyQuestion();
        // 	this.changePage(view);
        // },
        // knowledgeMyAnswer: function () {
        // 	var view = new knowledgeMyAnswer();
        // 	this.changePage(view);
        // },

        //new知识库
        mobileRepositoryIndex: function(nav,c) {
            var view = new mobileRepositoryIndex({
                nav: nav,
                history: history
            });
            this.changePage(view);
        },
        mobileRepositoryQuestion: function() {
            var view = new mobileRepositoryQuestion();
            this.changePage(view);
        },
        mobileRepositoryMy: function(type, status) {
            var view = new mobileRepositoryMy({
                type: type,
                status: status
            });
            this.changePage(view);
        },
        mobileRepositoryDetail: function(uuid, history, type) {
            var view = new mobileRepositoryDetail({
                uuid: uuid,
                history: history,
                type: type
            });
            this.changePage(view);
        },
        exampleDetail: function(uuid) {
            var view = new exampleDetail({
                uuid: uuid
            });
            this.changePage(view);
        },

        //个人中心
        centerIndex: function() {
            var view = new centerIndex();
            this.changePage(view);
        },
        chatroomList: function() {
            var view = new chatroomList();
            this.changePage(view);
        },
        chatroomView: function(uuid, title) {
            var view = new chatroomView({
                uuid: uuid,
                title: title
            });
            this.changePage(view);
        },
        // marketingIndex: function () {
        // 	var view = new marketingIndex();
        // 	this.changePage(view);
        // },
        // marketingFixture: function () {
        // 	var view = new marketingFixture();
        // 	this.changePage(view);
        // },
        // marketingMission: function () {
        // 	var view = new marketingMission();
        // 	this.changePage(view);
        // },
        // marketingMissionList: function (uuid) {
        // 	var view = new marketingMissionList({
        // 		uuid: uuid
        // 	});
        // 	this.changePage(view);
        // },
        // marketingMissionDetail: function (uuid) {
        // 	var view = new marketingMissionDetail({
        // 		uuid: uuid
        // 	});
        // 	this.changePage(view);
        // },
        // marketingMissionReply: function (uuid) {
        // 	var view = new marketingMissionReply({
        // 		uuid: uuid
        // 	});
        // 	this.changePage(view);
        // },
        // marketingPay: function () {
        // 	var view = new marketingPay();
        // 	this.changePage(view);
        // },

        /**
         * 
         */
        onlineMarketingIndex: function(history) {
            var view = new onlineMarketingIndex({
                history: history
            });
            this.changePage(view);
        },

        /**
         * 新闻
         */
        newsIndex: function(type) {
            var view = new newsIndex({
                type: type
            });
            this.changePage(view);
        },
        // newsDetail: function(type, uuid){
        // 	var view = new newsDetail({
        // 		type: type,
        // 		uuid: uuid
        // 	});
        // 	this.changePage(view);
        // },
        /**
         * 联系人
         */
        contactIndex: function() {
            var view = new contactIndex();
            this.changePage(view);
        },
        /**
         * 测试
         */
        learnAppliationIndex: function(history) {
            var view = new learnAppliationIndex({
                history: history
            });
            this.changePage(view);
        },
        myCustomer: function(history){
            var view = new myCustomer({
                history: history
            });
            this.changePage(view);
        },
        queryRemuneration: function(history){
            var view = new queryRemuneration({
                history: history
            });
            this.changePage(view);
        },
        graphicMarketing: function(history){
            var view = new graphicMarketing({
                history: history
            });
            this.changePage(view);
        },
        dataStatisticIndex: function(history){
            var view = new dataStatisticIndex({
                history: history
            });
            this.changePage(view);
        },
        dataStatisticActivity: function(history){
            var view = new dataStatisticActivity({
                history: history
            });
            this.changePage(view);
        },
        dataStatisticUnlearn: function(history){
            var view = new dataStatisticUnlearn({
                history: history
            });
            this.changePage(view);
        },
        dataStatisticTaskOrder: function(history){
            var view = new dataStatisticTaskOrder({
                history: history
            }); 
            this.changePage(view) ;
        },
        marketingCommunications: function(history){
            var view = new marketingCommunications({
                history: history
            });
            this.changePage(view);
        },
        marketingTask: function(history){
            var view = new marketingTask({
                history: history
            });
            this.changePage(view);
        }
        // contactList: function(){
        // 	var view = new contactList();
        // 	this.changePage(view);
        // },
        // contactDetail: function(){
        // 	var view = new contactDetail();
        // 	this.changePage(view);
        // },

        /**
         * 日志
         */
        // logIndex: function(){
        // 	var view = new logIndex();
        // 	this.changePage(view);
        // },
        // logForm: function(type){
        // 	var view = new logForm({
        // 		type: type
        // 	});
        // 	this.changePage(view);
        // },
        // logMine: function(){
        // 	var view = new logMine();
        // 	this.changePage(view);
        // },
        // logDetail: function(type){
        // 	var view = new logDetail({
        // 		type: type
        // 	});
        // 	this.changePage(view);
        // }
    });

    return AppRouter;
});
require.config({
    shim: {
        'underscore': {
            exports: '_'
        },
        'backbone': {
            deps: ['underscore', 'jquery'],
            exports: 'Backbone'
        },
        'touch': {
            deps: ['jquery']
        },
        'jstorage': {
            deps: ['jquery']
        },
        'des-ecb': {
            deps: ['tripledes']
        },
        'jquery-weui': {
            deps: ['jquery']
        },
        'base64': {
            exports: 'Base64'
        },
        'swiper': {
            deps: ['jquery-weui']
        },
        'Calendar': {
            exports: 'Calendar'
        }
    },
    paths: { // 公共模块在此注册
        'jquery': '../app_lib/jquery-2.1.4',
        'underscore': '../app_lib/underscore',
        'backbone': '../app_lib/backbone',
        'text': '../app_lib/text',
        'touch': '../app_lib/touch',
        'md5': '../app_lib/md5',
        'jstorage': '../app_lib/jstorage',
        'jquery-weui': '../app_lib/jquery-weui',
        'swiper': '../app_lib/swiper',
        'base64': '../app_lib/base64.min',
        'PreloadingImg': '../app_lib/PreloadingImg',
        'fastclick': '../app_lib/fastclick',
        'localDB': '../app_lib/localDB',
        'FastClick': '../app_lib/fastclick',
        'reconnectingWebSocket': '../app_lib/reconnecting-websocket',
        'Calendar': '../app_lib/Calendar',
        'charFirst.pinyin': '../app_lib/jquery.charfirst.pinyin'
    }
});

require(['fastclick', 'PreloadingImg', 'backbone', 'router', 'localDB', 'phonegaputil'], function(FastClick, PreloadingImg, Backbone, AppRouter, localDB, phonegaputil) {
    var constant = require('constant');
    var businessDelegate = require('business-delegate');
    require('jstorage');

    var appRouter = new AppRouter();
    Backbone.history.start();

    function onBackKeyDown(e) {
        e.preventDefault();
        if (!Keyboard.isVisible) {
            appRouter.backButton();
        }
        e.stopPropagation();
    }

    function onPause() {
        setTimeout(function() {
            // TODO: do your thing!
            appRouter.pause();
        }, 0);
    }

    function onResume() {
        setTimeout(function() {
            // TODO: do your thing!
            appRouter.resume();
        }, 0);
    }

    function onMenuKeyDown(e) {
        e.preventDefault();
        appRouter.menuKeyDown();
        e.stopPropagation();
    }

    function onGetPayResult(e, result) {
        e.preventDefault();
        appRouter.getPayResult(result);
        e.stopPropagation();
    }

    function onResize(e) {
        appRouter.resize();
    }

    // function onkeyboardDidShow(e, result) {
    //     e.preventDefault();
    //     // alert('keyboardDidShow');
    //     e.stopPropagation();
    // }

    // function onkeyboardDidHide(e) {
    //     e.preventDefault();
    //     // alert('keyboardDidHide');
    //     e.stopPropagation();
    // }

    Backbone.on('TKonError', function(err) {
        console.log('令牌错误:' + err);
    });

    Backbone.on('NoUserId', function() {
        $.jtoast('账户已被禁用');
        console.log('NoUserId:');
        if (window.user) {
            phonegaputil.saveConfig('user', '', function() {
                Backbone.history.navigate('login', { trigger: true });
            }, function() {
                $.toast('登出失败', 'cancel');
            });
        }

    });

    function deviceReady() {
        console.log("deviceReady");

        PreloadingImg.perLoadingImg();

        FastClick.attach(document.body);

        document.addEventListener("pause", onPause, false);
        document.addEventListener("resume", onResume, false);

        $(document).on("backbutton", onBackKeyDown);
        $(document).on("menubutton", onMenuKeyDown);
        $(document).on("getPayResult", onGetPayResult);
        // $(window).bind("keyboardDidShow", onkeyboardDidShow);
        // $(window).bind("keyboardDidHide", onkeyboardDidHide);


        //IOS隐藏任务栏
        if (window.StatusBar && device.platform == 'iOS') {
            StatusBar.hide();
        }

        //隐藏闪屏
        setTimeout(function() {
            if (navigator.splashscreen) {
                navigator.splashscreen.hide();
            }
        }, 1000);

        $(window).on('resize', onResize);

        //定义用户信息
        window.user = '';


        console.log($.jStorage.get('setting'));

        //获取缓存设置
        var obj = $.jStorage.get('setting');
        if (!obj) {
            $.jStorage.set('setting', {
                a: true, //新消息通知
                b: true, //声音
                c: true //震动
            });
        }

        // if (window.cordova) {
        //     //调试模式
        //     alert(device.model + "----" + device.cordova + "------" + device.uuid + "-----" + device.version + "----" + device.platform);
        // }

        //进入首页
        if (window.cordova) {
            appRouter.loginView();
        } else {
            localDB.initDb(function() {
                appRouter.loginView();
            });
        }
    }


    if (/(Android|iPhone|iPod|iPad)/.test(navigator.userAgent)) {
        console.log("android or ios");
        if (window.cordova) {
            document.addEventListener('deviceready', deviceReady, false);
        } else {
            $(function() {
                deviceReady();
                document.addEventListener('keydown', function(event) {
                    if (event.keyCode === 27) {
                        appRouter.backButton();
                    }
                });
            });
        }
    } else {
        $(function() {
            deviceReady();
            //按ESC键
            document.addEventListener('keydown', function(event) {
                if (event.keyCode === 27) {
                    appRouter.backButton();
                }
            });
        });
    }
});
define("main", function(){});

